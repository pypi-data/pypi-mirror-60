# encoding: utf-8
# THIS FILE IS AUTOGENERATED!
from __future__ import unicode_literals
from setuptools import setup
setup(
    description=u'JSON query expressions using SQLite',
    license=u'MPL 2.0',
    author=u'Rohit Kumar, Kyle Lahnakoski',
    author_email=u'rohitkumar.a255@gmail.com, kyle@lahnakoski.com',
    long_description_content_type=u'text/markdown',
    include_package_data=True,
    classifiers=["Development Status :: 4 - Beta","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules","License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)","Programming Language :: Python :: 2.7","Programming Language :: Python :: 3.6","Programming Language :: Python :: 3.7","Programming Language :: Python :: 3.8"],
    install_requires=["mo-collections==1.2.17235","mo-dots==1.5.17188","mo-files==1.2","mo-future==1.1","mo-json==2.1.17319","mo-json-config","mo-kwargs","mo-logs","mo-math","mo-sql>=3.35.20029","mo-testing==1.0.17168","mo-threads","mo-times"],
    version=u'3.35.20029',
    url=u'https://github.com/klahnakoski/jx-sqlite',
    python_requires=u'==2.7, ==3.6, ==3.7, ==3.8',
    packages=["jx_sqlite","jx_sqlite/expressions"],
    long_description=u'# jx-sqlite \n\nJSON query expressions using SQLite\n\n## Summary\n\nThis library will manage your database schema to store JSON documents. You get all the speed of a well-formed database schema without the schema migration headaches. \n\nhttps://www.youtube.com/watch?v=0_YLzb7BegI&list=PLSE8ODhjZXja7K1hjZ01UTVDnGQdx5v5U&index=26&t=260s\n\n## Status\n\nSignificant updates to the supporting libraries has broken this ode.  It still works works for the simple cases that require it\n\n**Jan 2020** - 96/283 test failing  \n\n\n## Installation\n\n    pip install jx-sqlite\n\n## Code Example\n\nOpen a database \n\n```python\ncontainer = Container()\n```\n\nDeclare a table\n\n```python\ntable = container.get_or_create_facts("my_table")\n```\n\nPour JSON documents into it\n\n```python\ntable.add({"os":"linux", "value":42})\n```\n\nQuery the table\n\n```python\ntable.query({\n    "select": "os", \n    "where": {"gt": {"value": 0}}\n})\n```\n\n## More\n\nAn attempt to store JSON documents in SQLite so that they are accessible via SQL. The hope is this will serve a basis for a general document-relational map (DRM), and leverage the database\'s query optimizer.\njx-sqlite  is also responsible for making the schema, and changing it dynamically as new JSON schema are encountered and to ensure that the old queries against the new schema have the same meaning.\n\nThe most interesting, and most important feature is that we query nested object arrays as if they were just another table.  This is important for two reasons:\n\n1. Inner objects `{"a": {"b": 0}}` are a shortcut for nested arrays `{"a": [{"b": 0}]}`, plus\n2. Schemas can be expanded from one-to-one  to one-to-many `{"a": [{"b": 0}, {"b": 1}]}`.\n\n\n## Motivation\n\nJSON is a nice format to store data, and it has become quite prevalent. Unfortunately, databases do not handle it well, often a human is required to declare a schema that can hold the JSON before it can be queried. If we are not overwhelmed by the diversity of JSON now, we soon will be. There will be more JSON, of more different shapes, as the number of connected devices( and the information they generate) continues to increase.\n\n## Contributing\n\nContributions are always welcome! The best thing to do is find a failing test, and try to fix it.\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n    $ git clone https://github.com/mozilla/jx-sqlite\n    $ cd jx-sqlite\n\n### Running tests\n\nThere are over 200 tests used to confirm the expected behaviour: They test a variety of JSON forms, and the queries that can be performed on them. Most tests are further split into three different output formats ( list, table and cube).\n\n    export PYTHONPATH=.\n    python -m unittest discover -v -s tests\n\n### Technical Docs\n\n* [Json Query Expression](https://github.com/klahnakoski/ActiveData/blob/dev/docs/jx.md)\n* [Nomenclature](https://github.com/mozilla/jx-sqlite/blob/master/docs/Nomenclature.md)\n* [Snowflake](https://github.com/mozilla/jx-sqlite/blob/master/docs/Perspective.md)\n* [JSON in Database](https://github.com/mozilla/jx-sqlite/blob/master/docs/JSON%20in%20Database.md)\n* [The Future](https://github.com/mozilla/jx-sqlite/blob/master/docs/The%20Future.md)\n\n## License\n\nThis project is licensed under Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n\n## History\n\n*Sep 2018* - Upgrade libs, start refactoring to work with other libs\n\n*Dec 2017* - A number of tests were added, but they do not pass.\n\n*Sep 2017* - GSoC work completed, all but a few tests pass.\n \n\n## GSOC\n\nWork done upto the deadline of GSoC\'17:\n\n* [Pull Requests](https://github.com/mozilla/jx-sqlite/pulls?utf8=%E2%9C%93&q=is%3Apr%20author%3Arohit-rk)\n* [Commits](https://github.com/mozilla/jx-sqlite/commits?author=rohit-rk)\n\n\n## More Documentation\n\n* [The Future](https://github.com/mozilla/jx-sqlite/blob/master/docs/The%20Future.md)\n',
    name=u'jx-sqlite'
)