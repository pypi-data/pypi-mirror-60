{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["Polymer","_template","html","_templateObject","is","behaviors","PaperItemBehavior","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","includeDeviceClasses","states","entityIds","Object","keys","filter","eid","includes","computeDomain","sort","map","key","_this2","value","attributes","device_class","changedProps","_get","_getPrototypeOf","prototype","this","call","has","_opened","_hass","_getStates","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_templateObject2","_clearValue","length","_templateObject3","ev","stopPropagation","_setValue","detail","newValue","_this3","setTimeout","fireEvent","css","_templateObject4","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","icon","configElementStyle","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","args","_key","apply","concat","_assertThisInitialized","_inherits","kind","decorators","themes","_changed","theme","static","target","IronScrollTargetBehavior","properties","scrollTarget","HTMLElement","_defaultScrollTarget","observers","_shouldHaveListener","_scrollTargetChanged","isAttached","_oldScrollTarget","_toggleScrollListener","_doc","domHost","$","dom","ownerDocument","_isValidScrollTarget","_scrollHandler","documentElement","_scrollTop","window","pageYOffset","scrollTop","_scrollLeft","pageXOffset","scrollLeft","top","scrollTo","left","scroll","leftOrOptions","_typeof","_scrollTargetWidth","innerWidth","offsetWidth","_scrollTargetHeight","innerHeight","offsetHeight","yes","eventTarget","_boundScrollHandler","bind","addEventListener","removeEventListener","toggleScrollListener","cardConfigStruct","entity","name","HuiAlarmPanelCardEditor","config","_config","_entity","_name","_states","state","index","_stateRemoved","_stateAdded","_theme","_templateObject5","Number","newStates","splice","assign","indexOf","push","configValue"],"mappings":"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","file":"chunk.181b8b236b62f0d9cab5.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/theme/material/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { computeDomain } from \"../../common/entity/compute_domain\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {Array}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  /**\n   * Show only entities of these device classes.\n   * @type {Array}\n   * @attr include-device-classes\n   */\n  @property({ type: Array, attribute: \"include-device-classes\" })\n  public includeDeviceClasses?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"],\n      includeDeviceClasses: this[\"includeDeviceClasses\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(computeDomain(eid))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (includeDeviceClasses) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value ||\n            (stateObj.attributes.device_class &&\n              includeDeviceClasses.includes(stateObj.attributes.device_class))\n        );\n      }\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter,\n      this.includeDeviceClasses\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  @click=${this._clearValue}\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private _clearValue(ev: Event) {\n    ev.stopPropagation();\n    this._setValue(\"\");\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this._setValue(newValue);\n    }\n  }\n\n  private _setValue(value: string) {\n    this.value = value;\n    setTimeout(() => {\n      fireEvent(this, \"value-changed\", { value });\n      fireEvent(this, \"change\");\n    }, 0);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\nexport const IronScrollTargetBehavior = {\n\n  properties: {\n\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function() {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n\n  _scrollTargetChanged: function(scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n      this._oldScrollTarget = null;\n    }\n    if (!isAttached) {\n      return;\n    }\n    // Support element id references\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n\n      this.scrollTarget = domHost && domHost.$ ?\n          domHost.$[scrollTarget] :\n          dom(this.ownerDocument).querySelector('#' + scrollTarget);\n\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset :\n                                               this.scrollTarget.scrollTop;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset :\n                                               this.scrollTarget.scrollLeft;\n    }\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function(leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth :\n                                               this.scrollTarget.offsetWidth;\n    }\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight :\n                                               this.scrollTarget.offsetHeight;\n    }\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function() {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n\n  _toggleScrollListener: function(yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function(yes) {\n    this._shouldHaveListener = yes;\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n\n};\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"alarm_control_panel\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.alarm-panel.available_states\"\n          )}\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html`\n                <paper-item>${state}</paper-item>\n              `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = this._states;\n      newStates.splice(index, 1);\n      this._config = {\n        ...this._config,\n        states: newStates,\n      };\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) >= 0) {\n      return;\n    }\n    const newStates = this._states;\n    newStates.push(target.value);\n    this._config = {\n      ...this._config,\n      states: newStates,\n    };\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}