{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-navigation.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-config-update.js"],"names":["HaCard","_LitElement","[object Object]","args","super","_initialize","this","property","css","html","header","LitElement","customElements","define","ironIconClass","get","loaded","HaIcon","listen","node","eventName","methodName","_iconsetName","__webpack_require__","e","then","bind","MwcSwitch","_decorate","customElement","_MwcSwitch","HaSwitch","F","d","kind","decorators","query","key","value","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","length","static","_ha_icon__WEBPACK_IMPORTED_MODULE_1__","connectedCallback","setTimeout","icon","window","getComputedStyle","direction","PAGES","page","caption","description","map","r","__webpack_exports__","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_3__","PolymerElement","template","properties","hass","Object","isWide","aisVersionInfo","type","String","computed","aisBackupInfo","aisAutoUpdateInfo","aisAutoUpdateIcon","aisAutoUpdatFullInfo","Array","aisBackupFullInfo","aisButtonVersionCheckUpgrade","aisUpdateSystemData","say","autoUpdateMode","validating","backupStep","validateLog","backupInfo","backupError","restoreInfo","restoreError","isBackupValid","ready","callService","step","computeClasses","_computeAisVersionInfo","versionInfo","states","versionInfoAttr","attributes","push","name","update_check_time","getVersionName","update_status","getVersionIcon","dom_app_current_version","new_value","dom_app_newest_version","reinstall_dom_app","android_app_current_version","android_app_newest_version","reinstall_android_app","linux_apt_current_version","linux_apt_newest_version","reinstall_linux_apt","state","_computeAisBackupStep","_computeAisBackupInfo","backupInfoAttr","backup_info","backup_error","restore_info","restore_error","file_name","file_size","status","retS","_computeAisButtonVersionCheckUpgrade","attr","_computeAutoUpdateMode","_isEqualTo","currentStep","stepNumber","changeAutoUpdateMode","entity_id","doBackup","callApi","result","valid","errors","password","shadowRoot","getElementById","restoreBackup"],"mappings":"4yCASMA,22LAAN,cAAAC,EAAgCC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,qCAC7BC,mFAED,WACE,OAAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CA+CT,WACE,OAAOC;QACHH,KAAKI,OACHD;uCAC6BH,KAAKI;YAElCD;;WAzDWE,KA+DrBC,eAAeC,OAAO,UAAWb,4ECjEjC,MAAMc,EAAgBF,eAAeG,IAAI,aAIzC,IAAIC,GAAS,EAEN,MAAMC,UAAeH,EAAcZ,eAAAC,aAAAC,SAAAD,UAAA,yBAAAG,4FAGjCY,OACLC,EACAC,EACAC,GAEAjB,MAAMc,OAAOC,EAAMC,EAAWC,GAEzBL,GAAgC,QAAtBV,KAAKgB,eAClBN,GAAS,EACTO,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAWNd,eAAeC,OAAO,UAAWI,+qDC7BjC,MAAMU,EAAYf,eAAeG,IAAI,o1LAGrCa,CAAA,CADCC,YAAc,cACf,SAAAxB,EAAAyB,GADA,MACaC,UADbD,EACwC5B,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,OAAxC,OAAA0B,EAAaD,EAAbE,EAAA,EAAAC,KAAA,QAAAC,WAAA,CACGC,YAAM,SADTC,IAAA,QAAAC,WAAA,IAAAJ,KAAA,SAAAG,IAAA,eAAAC,MAGE,WACEC,EAAAC,EAJST,EAITU,WAAA,eAAAnC,MAAAoC,KAAApC,MACAA,KAAKqC,MAAMC,YACT,wBACA,+BAEFtC,KAAKuC,UAAUC,OACb,UACAC,QAAQzC,KAAK0C,MAAMC,gBAAgBC,WAXzC,CAAAhB,KAAA,MAAAiB,QAAA,EAAAd,IAAA,SAAAC,MAeE,WACE,MAAO,CACLK,IACAnC;;;;;;;;;;;;;;;;;;;;;;;;;cAlBwBmB,qCCV9BJ,EAAA,SAAA6B,EAAA7B,EAAA,KAyBAX,eAAeC,OAAO,eApBf,cAAyBI,IACvBoC,oBACLjD,MAAMiD,oBAGNC,WAAW,KACThD,KAAKiD,KACyC,QAA5CC,OAAOC,iBAAiBnD,MAAMoD,UAC1B,qBACA,qBACL,6xCCEP,MAAMC,EAID,CACH,CACEC,KAAM,wBACNC,QAAS,wBACTC,YACE,uEAEJ,CACEF,KAAM,sBACNC,QAAS,YACTC,YAAa,uCAEf,CACEF,KAAM,yBACNC,QAAS,QACTC,YAAa,qBAEf,CACEF,KAAM,qBACNC,QAAS,iBACTC,YAAa,8BAEf,CACEF,KAAM,uBACNC,QAAS,aACTC,YAAa,2DAEf,CACEF,KAAM,wBACNC,QAAS,gBACTC,YAAa,2CAEf,CACEF,KAAM,uBACNC,QAAS,qBACTC,YAAa,02LAIhBjC,YAAc,wDAAf,cAAA5B,EAC4CC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,qCACzCC,kEACAA,kFAED,WACE,OAAOE;;UAEDkD,EAAMI,IACN,EAAGH,OAAMC,UAASC,iBAChBrD;mCACuBmD;;;0BAGTC;wCACcC;;;;;;;iDAWtC,WACE,OAAOtD;;;;;WA1BsBG,uCC7DjCY,EAAAyC,EAAAC,GAAA1C,EAAA,KAAAA,EAAA,SAAA2C,EAAA3C,EAAA,GAAA4C,EAAA5C,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,KA8iBAX,eAAeC,OAAO,kCAhiBtB,cAAoCuD,IAClCC,sBACE,OAAO5D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MA+PT6D,wBACE,MAAO,CACLC,KAAMC,OACNC,OAAQ1B,QACR2B,eAAgB,CACdC,KAAMC,OACNC,SAAU,gCAEZC,cAAe,CACbH,KAAMC,OACNC,SAAU,+BAEZE,kBAAmB,CAAEJ,KAAMC,QAC3BI,kBAAmB,CAAEL,KAAMC,QAC3BK,qBAAsB,CACpBN,KAAMO,MACN5C,MAAO,IAET6C,kBAAmB,CACjBR,KAAMO,MACN5C,MAAO,IAET8C,6BAA8B,CAC5BT,KAAMC,OACNC,SAAU,8CAEZQ,oBAAqB,CACnBV,KAAMH,OACNlC,MAAO,CAAEgD,KAAK,IAEhBC,eAAgB,CACdZ,KAAM5B,QACN8B,SAAU,gCAEZW,WAAY,CACVb,KAAM5B,QACNT,OAAO,GAETmD,WAAY,CACVd,KAAMC,OACNtC,MAAO,IACPuC,SAAU,+BAEZa,YAAa,CACXf,KAAMC,OACNtC,MAAO,IAETqD,WAAY,CACVhB,KAAMC,OACNtC,MAAO,IAETsD,YAAa,CACXjB,KAAMC,OACNtC,MAAO,IAETuD,YAAa,CACXlB,KAAMC,OACNtC,MAAO,IAETwD,aAAc,CACZnB,KAAMC,OACNtC,MAAO,IAETyD,cAAe,CACbpB,KAAM5B,QACNT,MAAO,OAKb0D,QACE5F,MAAM4F,QACN1F,KAAKiE,KAAK0B,YAAY,YAAa,kBAAmB,CACpDC,KAAM,MAER5F,KAAKiE,KAAK0B,YAAY,YAAa,mBAGrCE,eAAe1B,GACb,OAAOA,EAAS,UAAY,iBAG9B2B,uBAAuB7B,GACrB,IAAI8B,EAAc9B,EAAK+B,OAAO,uBAC1BC,EAAkBF,EAAYG,WA8ClC,OA7CAlG,KAAK2E,qBAAuB,GAExB,sBAAuBsB,GACzBjG,KAAK2E,qBAAqBwB,KAAK,CAC7BC,KAAM,eACNpE,MAAOiE,EAAgBI,kBACvBpD,KAAM,KAIN,kBAAmBgD,GACrBjG,KAAK2E,qBAAqBwB,KAAK,CAC7BC,KAAM,SACNpE,MAAOhC,KAAKsG,eAAeL,EAAgBM,eAC3CtD,KAAMjD,KAAKwG,eAAeP,EAAgBM,iBAI1C,4BAA6BN,GAC/BjG,KAAK2E,qBAAqBwB,KAAK,CAC7BC,KAAM,kBACNpE,MAAOiE,EAAgBQ,wBACvBC,UAAWT,EAAgBU,uBAC3B1D,KAAMgD,EAAgBW,kBAAoB,aAAe,eAGzD,gCAAiCX,GACnCjG,KAAK2E,qBAAqBwB,KAAK,CAC7BC,KAAM,UACNpE,MAAOiE,EAAgBY,4BACvBH,UAAWT,EAAgBa,2BAC3B7D,KAAMgD,EAAgBc,sBAClB,aACA,eAGJ,8BAA+Bd,GACjCjG,KAAK2E,qBAAqBwB,KAAK,CAC7BC,KAAM,QACNpE,MAAOiE,EAAgBe,0BACvBN,UAAWT,EAAgBgB,yBAC3BhE,KAAMgD,EAAgBiB,oBAAsB,aAAe,eAIxDnB,EAAYoB,MAGrBC,sBAAsBnD,GACpB,IAAIoB,EAAapB,EAAK+B,OAAO,wBAI7B,MAHyB,MAArBX,EAAW8B,QACbnH,KAAKkF,YAAa,GAEbG,EAAW8B,MAGpBE,sBAAsBpD,GACpB,IAAIoB,EAAapB,EAAK+B,OAAO,wBACzBsB,EAAiBjC,EAAWa,WAgBhC,OAfAlG,KAAK6E,kBAAoB,GACzB7E,KAAKyF,eAAgB,EACrBzF,KAAKqF,WAAaiC,EAAeC,YACjCvH,KAAKsF,YAAcgC,EAAeE,aAClCxH,KAAKuF,YAAc+B,EAAeG,aAClCzH,KAAKwF,aAAe8B,EAAeI,cAC/B,cAAeJ,IACjBtH,KAAKyF,gBAAkB6B,EAAeK,UACtC3H,KAAK6E,kBAAkBsB,KAAK,CAC1BC,KAAM,iBACNpE,MAAOsF,EAAeK,UACtBjB,UAAWY,EAAeM,UAC1B3E,KAAM,eAGHoC,EAAW8B,MAGpBb,eAAeuB,GACb,IAAIC,EAAOD,EAgBX,MAfe,aAAXA,EACFC,EAAO,cACa,aAAXD,EACTC,EAAO,cACa,gBAAXD,EACTC,EAAO,aACa,eAAXD,EACTC,EAAO,eACa,YAAXD,EACTC,EAAO,WACa,YAAXD,EACTC,EAAO,WACa,YAAXD,IACTC,EAAO,iBAEFA,EAGTtB,eAAeqB,GACb,IAAIC,EAAO,GAgBX,MAfe,aAAXD,EACFC,EAAO,iBACa,aAAXD,EACTC,EAAO,GACa,gBAAXD,EACTC,EAAO,wBACa,eAAXD,EACTC,EAAO,sBACa,YAAXD,EACTC,EAAO,6BACa,YAAXD,EACTC,EAAO,0BACa,YAAXD,IACTC,EAAO,qBAEFA,EAGTC,qCAAqC9D,GACnC,IAAI+D,EAAO/D,EAAK+B,OAAO,uBAAuBE,WAC9C,OACE8B,EAAKpB,mBACLoB,EAAKjB,uBACLiB,EAAKd,oBAEsB,aAAvBc,EAAKzB,cACA,gCAEkB,YAAvByB,EAAKzB,cACA,mBAEF,mBAAqBvG,KAAKsG,eAAe0B,EAAKzB,eAEhD,kCAGT0B,uBAAuBhE,GACrB,MAA2D,QAAvDA,EAAK+B,OAAO,iCAAiCmB,OAC/CnH,KAAK0E,kBAAoB,eACzB1E,KAAKyE,kBACH,+GACK,IAETzE,KAAK0E,kBAAoB,WACzB1E,KAAKyE,kBACH,8EACK,GAGTyD,WAAWC,EAAaC,GACtB,OAAOD,IAAgBC,EAGzBC,uBACErI,KAAKiE,KAAK0B,YAAY,gBAAiB,SAAU,CAC/C2C,UAAW,kCAIfC,WAEE,GAAwB,MAApBvI,KAAKmF,WACPnF,KAAKkF,YAAa,EAClBlF,KAAKoF,YAAc,GAEnBpF,KAAKiE,KAAKuE,QAAQ,OAAQ,4BAA4BrH,KAAMsH,IAC1DzI,KAAKkF,YAAa,EAClB,IAAIwD,EAA0B,UAAlBD,EAAOA,OAAqB,IAAM,IAChC,MAAVC,GACF1I,KAAKiE,KAAK0B,YAAY,YAAa,kBAAmB,CACpDC,KAAM8C,EACNlB,aAAc,6BAEhBxH,KAAKoF,YAAcqD,EAAOE,SAE1B3I,KAAKiE,KAAK0B,YAAY,YAAa,kBAAmB,CACpDC,KAAM8C,EACNnB,YAAa,8CAEfvH,KAAKoF,YAAc,UAGlB,CAELpF,KAAKkF,YAAa,EAClBlF,KAAKoF,YAAc,GACnB,IAAIwD,EAAW5I,KAAK6I,WAAWC,eAAe,aAAa9G,MAC3DhC,KAAKiE,KAAK0B,YAAY,YAAa,YAAa,CAC9CiD,SAAUA,KAKhBG,gBACE/I,KAAKkF,YAAa,EAClBlF,KAAKoF,YAAc,GACnB,IAAIwD,EAAW5I,KAAK6I,WAAWC,eAAe,aAAa9G,MAC3DhC,KAAKiE,KAAK0B,YAAY,YAAa,iBAAkB,CACnDiD,SAAUA","file":"chunk.963c835ffe1d8047fe6d.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst PAGES: Array<{\n  page: string;\n  caption: string;\n  description: string;\n}> = [\n  {\n    page: \"ais_dom_config_update\",\n    caption: \"Oprogramowanie bramki\",\n    description:\n      \"Aktualizacja systemu i synchronizacja bramki z Portalem Integratora\",\n  },\n  {\n    page: \"ais_dom_config_wifi\",\n    caption: \"Sieć WiFi\",\n    description: \"Ustawienia połączenia z siecią WiFi\",\n  },\n  {\n    page: \"ais_dom_config_display\",\n    caption: \"Ekran\",\n    description: \"Ustawienia ekranu\",\n  },\n  {\n    page: \"ais_dom_config_tts\",\n    caption: \"Głos asystenta\",\n    description: \"Ustawienia głosu asystenta\",\n  },\n  {\n    page: \"ais_dom_config_night\",\n    caption: \"Tryb nocny\",\n    description: \"Ustawienie godzin, w których asystent ma działać ciszej\",\n  },\n  {\n    page: \"ais_dom_config_remote\",\n    caption: \"Zdalny dostęp\",\n    description: \"Konfiguracja zdalnego dostępu do bramki\",\n  },\n  {\n    page: \"ais_dom_config_power\",\n    caption: \"Zatrzymanie bramki\",\n    description: \"Restart lub wyłączenie bramki\",\n  },\n];\n\n@customElement(\"ha-config-ais-dom-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-card>\n        ${PAGES.map(\n          ({ page, caption, description }) =>\n            html`\n              <a href=${`/config/${page}`}>\n                <paper-item>\n                  <paper-item-body two-line=\"\"\n                    >${`${caption}`}\n                    <div secondary>${`${description}`}</div>\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-item>\n              </a>\n            `\n        )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-navigation\": HaConfigNavigation;\n  }\n}\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-ais-dom-navigation\";\nimport \"../../../components/ha-switch\";\n\n/*\n *\n */\nclass HaConfigAisDomControl extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 32px;\n        }\n        .border {\n          margin: 32px auto 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n          max-width: 1040px;\n        }\n        .narrow .border {\n          max-width: 640px;\n        }\n        .center-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 70px;\n        }\n        table {\n          width: 100%;\n        }\n\n        td:first-child {\n          width: 33%;\n        }\n\n        .validate-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          min-height: 140px;\n        }\n\n        .validate-result {\n          color: var(--google-green-500);\n          font-weight: 500;\n        }\n\n        .config-invalid .text {\n          color: var(--google-red-500);\n          font-weight: 500;\n        }\n\n        .config-invalid {\n          text-align: center;\n          margin-top: 20px;\n        }\n\n        .validate-log {\n          white-space: pre-wrap;\n          direction: ltr;\n        }\n      </style>\n\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Oprogramowanie bramki</span>\n            <span slot=\"introduction\"\n              >Możesz zaktualizować system do najnowszej wersji, wykonać kopię\n              zapasową ustawień i zsynchronizować bramkę z Portalem\n              Integratora</span\n            >\n            <ha-card header=\"Wersja systemu Asystent domowy\">\n              <div class=\"card-content\">\n                [[aisVersionInfo]]\n                <div>\n                  <div style=\"margin-top:30px;\" id=\"ha-switch-id\">\n                    <ha-switch\n                      checked=\"{{autoUpdateMode}}\"\n                      on-change=\"changeAutoUpdateMode\"\n                      style=\"position: absolute; right: 20px;\"\n                    ></ha-switch\n                    ><span\n                      ><h3>\n                        Autoaktualizacja\n                        <iron-icon icon=\"[[aisAutoUpdateIcon]]\"></iron-icon></h3\n                    ></span>\n                  </div>\n                </div>\n\n                <div style=\"display: inline-block;\">\n                  <div>\n                    [[aisAutoUpdateInfo]]\n                  </div>\n                  <div style=\"margin-top: 15px;\">\n                    Aktualizacje dostarczają najnowsze funkcjonalności oraz\n                    poprawki zapewniające bezpieczeństwo i stabilność działania\n                    systemu.\n                    <table style=\"margin-top: 10px;\">\n                      <template\n                        is=\"dom-repeat\"\n                        items=\"[[aisAutoUpdatFullInfo]]\"\n                      >\n                        <tr>\n                          <td>[[item.name]]</td>\n                          <td>[[item.value]]</td>\n                          <td>[[item.new_value]]</td>\n                          <td><iron-icon icon=\"[[item.icon]]\"></iron-icon></td>\n                        </tr>\n                      </template>\n                    </table>\n                  </div>\n                </div>\n                <div class=\"center-container\">\n                  <ha-call-service-button\n                    class=\"warning\"\n                    hass=\"[[hass]]\"\n                    domain=\"ais_updater\"\n                    service=\"execute_upgrade\"\n                    service-data=\"[[aisUpdateSystemData]]\"\n                    >[[aisButtonVersionCheckUpgrade]]\n                  </ha-call-service-button>\n                </div>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Kopia konfiguracji Bramki\">\n              <div class=\"card-content\">\n                W tym miejscu możesz, sprawdzić poprawność ustawień bramki,\n                wykonać jej kopię i przesłać ją do portalu integratora. <b>Uwaga,\n                ponieważ konfiguracja może zawierać hasła i tokeny dostępu do\n                usług, zalecamy zaszyfrować ją hasłem</b>. Gdy kopia jest\n                zabezpieczona hasłem, to można ją otworzyć/przywrócić tylko po\n                podaniu hasła.\n                <h2>\n                  Nowa kopia ustawień\n                  <iron-icon icon=\"mdi:cloud-upload-outline\"></iron-icon>\n                </h2>\n                Przed wykonaniem nowej kopii ustawień sprawdź poprawność\n                konfiguracji\n                <div style=\"border-bottom: 1px solid white;\">\n                  <template is=\"dom-if\" if=\"[[!validateLog]]\">\n                    <div class=\"validate-container\">\n                      <div class=\"validate-result\" id=\"result\">\n                        [[backupInfo]]\n                      </div>\n                      <template is=\"dom-if\" if=\"[[!validating]]\">\n                        <div class=\"config-invalid\">\n                          <span class=\"text\">\n                            [[backupError]]\n                          </span>\n                        </div>\n                        <template\n                          is=\"dom-if\"\n                          if=\"[[_isEqualTo(backupStep, '1')]]\"\n                        >\n                          <paper-input\n                            placeholder=\"hasło\"\n                            no-label-float=\"\"\n                            type=\"password\"\n                            id=\"password1\"\n                          ></paper-input>\n                        </template>\n                        <mwc-button raised=\"\" on-click=\"doBackup\">\n                          <template\n                            is=\"dom-if\"\n                            if=\"[[_isEqualTo(backupStep, '0')]]\"\n                          >\n                            Sprawdź konfigurację\n                          </template>\n                          <template\n                            is=\"dom-if\"\n                            if=\"[[_isEqualTo(backupStep, '1')]]\"\n                          >\n                            Wykonaj kopie konfiguracji\n                          </template>\n                        </mwc-button>\n                      </template>\n                      <template is=\"dom-if\" if=\"[[validating]]\">\n                        <paper-spinner active=\"\"></paper-spinner>\n                      </template>\n                    </div>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[validateLog]]\">\n                    <div class=\"config-invalid\">\n                      <mwc-button raised=\"\" on-click=\"doBackup\">\n                        Popraw i sprawdź ponownie\n                      </mwc-button>\n                    </div>\n                    <p></p>\n                    <div id=\"configLog\" class=\"validate-log\">\n                      [[validateLog]]\n                    </div>\n                  </template>\n                </div>\n\n                <template is=\"dom-if\" if=\"[[isBackupValid]]\">\n                  <h2>\n                    Przywracanie ustawień\n                    <iron-icon icon=\"mdi:backup-restore\"></iron-icon>\n                  </h2>\n                  <div class=\"validate-container\">\n                    <table style=\"margin-top: 40px; margin-bottom: 10px;\">\n                      <template is=\"dom-repeat\" items=\"[[aisBackupFullInfo]]\">\n                        <tr>\n                          <td>[[item.name]]</td>\n                          <td>[[item.value]]</td>\n                          <td>[[item.new_value]]</td>\n                          <td><iron-icon icon=\"[[item.icon]]\"></iron-icon></td>\n                        </tr>\n                      </template>\n                    </table>\n                      <div class=\"validate-container\">\n                        <div class=\"validate-result\" id=\"result\">\n                          [[restoreInfo]]\n                        </div>\n                        <template is=\"dom-if\" if=\"[[!validating]]\">\n                        <div class=\"config-invalid\">\n                          <span class=\"text\">\n                            [[restoreError]]\n                          </span>\n                        </div>\n                        <paper-input\n                          placeholder=\"hasło\"\n                          no-label-float=\"\"\n                          type=\"password\"\n                          id=\"password2\"\n                        ></paper-input>\n                        <mwc-button raised=\"\" on-click=\"restoreBackup\">\n                          Przywróć konfigurację z kopii\n                        </mwc-button>\n                      </div>\n                    </template>\n                    <template is=\"dom-if\" if=\"[[validating]]\">\n                      <paper-spinner active=\"\"></paper-spinner>\n                    </template>\n                  </div>\n                </template>\n              </div>\n            </ha-card>\n\n            <ha-card header=\"Synchronizacja z Portalem Integratora\">\n              <div class=\"card-content\">\n                Jeśli ostatnio wprowadzałeś zmiany w Portalu Integratora, takie\n                jak dodanie nowych typów audio czy też dostęp do zewnętrznych\n                serwisów, to przyciskiem poniżej możesz uruchomić natychmiastowe\n                pobranie tych zmian na bramkę bez czekania na automatyczną\n                synchronizację.\n                <div class=\"center-container\">\n                  <ha-call-service-button\n                    class=\"warning\"\n                    hass=\"[[hass]]\"\n                    domain=\"script\"\n                    service=\"ais_cloud_sync\"\n                    >Synchronizuj z Portalem Integratora\n                  </ha-call-service-button>\n                </div>\n              </div>\n            </ha-card>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      aisVersionInfo: {\n        type: String,\n        computed: \"_computeAisVersionInfo(hass)\",\n      },\n      aisBackupInfo: {\n        type: String,\n        computed: \"_computeAisBackupInfo(hass)\",\n      },\n      aisAutoUpdateInfo: { type: String },\n      aisAutoUpdateIcon: { type: String },\n      aisAutoUpdatFullInfo: {\n        type: Array,\n        value: [],\n      },\n      aisBackupFullInfo: {\n        type: Array,\n        value: [],\n      },\n      aisButtonVersionCheckUpgrade: {\n        type: String,\n        computed: \"_computeAisButtonVersionCheckUpgrade(hass)\",\n      },\n      aisUpdateSystemData: {\n        type: Object,\n        value: { say: true },\n      },\n      autoUpdateMode: {\n        type: Boolean,\n        computed: \"_computeAutoUpdateMode(hass)\",\n      },\n      validating: {\n        type: Boolean,\n        value: false,\n      },\n      backupStep: {\n        type: String,\n        value: \"0\",\n        computed: \"_computeAisBackupStep(hass)\",\n      },\n      validateLog: {\n        type: String,\n        value: \"\",\n      },\n      backupInfo: {\n        type: String,\n        value: \"\",\n      },\n      backupError: {\n        type: String,\n        value: \"\",\n      },\n      restoreInfo: {\n        type: String,\n        value: \"\",\n      },\n      restoreError: {\n        type: String,\n        value: \"\",\n      },\n      isBackupValid: {\n        type: Boolean,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n      step: \"0\",\n    });\n    this.hass.callService(\"ais_cloud\", \"get_backup_info\");\n  }\n\n  computeClasses(isWide) {\n    return isWide ? \"content\" : \"content narrow\";\n  }\n\n  _computeAisVersionInfo(hass) {\n    var versionInfo = hass.states[\"sensor.version_info\"];\n    var versionInfoAttr = versionInfo.attributes;\n    this.aisAutoUpdatFullInfo = [];\n\n    if (\"update_check_time\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Sprawdzono o\",\n        value: versionInfoAttr.update_check_time,\n        icon: \"\",\n      });\n    }\n\n    if (\"update_status\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Status\",\n        value: this.getVersionName(versionInfoAttr.update_status),\n        icon: this.getVersionIcon(versionInfoAttr.update_status),\n      });\n    }\n\n    if (\"dom_app_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Asystent domowy\",\n        value: versionInfoAttr.dom_app_current_version,\n        new_value: versionInfoAttr.dom_app_newest_version,\n        icon: versionInfoAttr.reinstall_dom_app ? \"hass:alert\" : \"hass:check\",\n      });\n    }\n    if (\"android_app_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Android\",\n        value: versionInfoAttr.android_app_current_version,\n        new_value: versionInfoAttr.android_app_newest_version,\n        icon: versionInfoAttr.reinstall_android_app\n          ? \"hass:alert\"\n          : \"hass:check\",\n      });\n    }\n    if (\"linux_apt_current_version\" in versionInfoAttr) {\n      this.aisAutoUpdatFullInfo.push({\n        name: \"Linux\",\n        value: versionInfoAttr.linux_apt_current_version,\n        new_value: versionInfoAttr.linux_apt_newest_version,\n        icon: versionInfoAttr.reinstall_linux_apt ? \"hass:alert\" : \"hass:check\",\n      });\n    }\n\n    return versionInfo.state;\n  }\n\n  _computeAisBackupStep(hass) {\n    var backupInfo = hass.states[\"sensor.aisbackupinfo\"];\n    if (backupInfo.state === \"0\") {\n      this.validating = false;\n    }\n    return backupInfo.state;\n  }\n\n  _computeAisBackupInfo(hass) {\n    var backupInfo = hass.states[\"sensor.aisbackupinfo\"];\n    var backupInfoAttr = backupInfo.attributes;\n    this.aisBackupFullInfo = [];\n    this.isBackupValid = false;\n    this.backupInfo = backupInfoAttr.backup_info;\n    this.backupError = backupInfoAttr.backup_error;\n    this.restoreInfo = backupInfoAttr.restore_info;\n    this.restoreError = backupInfoAttr.restore_error;\n    if (\"file_size\" in backupInfoAttr) {\n      this.isBackupValid = !!backupInfoAttr.file_name;\n      this.aisBackupFullInfo.push({\n        name: \"Kopia zapasowa\",\n        value: backupInfoAttr.file_name,\n        new_value: backupInfoAttr.file_size,\n        icon: \"mdi:check\",\n      });\n    }\n    return backupInfo.state;\n  }\n\n  getVersionName(status) {\n    var retS = status;\n    if (status === \"checking\") {\n      retS = \"Sprawdzanie\";\n    } else if (status === \"outdated\") {\n      retS = \"Nieaktualny\";\n    } else if (status === \"downloading\") {\n      retS = \"Pobieranie\";\n    } else if (status === \"installing\") {\n      retS = \"Instalowanie\";\n    } else if (status === \"updated\") {\n      retS = \"Aktualny\";\n    } else if (status === \"unknown\") {\n      retS = \"Nieznany\";\n    } else if (status === \"restart\") {\n      retS = \"Restartowanie\";\n    }\n    return retS;\n  }\n\n  getVersionIcon(status) {\n    var retS = \"\";\n    if (status === \"checking\") {\n      retS = \"mdi:cloud-sync\";\n    } else if (status === \"outdated\") {\n      retS = \"\";\n    } else if (status === \"downloading\") {\n      retS = \"mdi:progress-download\";\n    } else if (status === \"installing\") {\n      retS = \"mdi:progress-wrench\";\n    } else if (status === \"updated\") {\n      retS = \"mdi:emoticon-happy-outline\";\n    } else if (status === \"unknown\") {\n      retS = \"mdi:help-circle-outline\";\n    } else if (status === \"restart\") {\n      retS = \"mdi:restart-alert\";\n    }\n    return retS;\n  }\n\n  _computeAisButtonVersionCheckUpgrade(hass) {\n    var attr = hass.states[\"sensor.version_info\"].attributes;\n    if (\n      attr.reinstall_dom_app ||\n      attr.reinstall_android_app ||\n      attr.reinstall_linux_apt\n    ) {\n      if (attr.update_status === \"outdated\") {\n        return \"Zainstaluj teraz aktualizację\";\n      }\n      if (attr.update_status === \"unknown\") {\n        return \"Spróbuj ponownie\";\n      }\n      return \"Aktualizacja -> \" + this.getVersionName(attr.update_status);\n    }\n    return \"Sprawdź dostępność aktualizacji\";\n  }\n\n  _computeAutoUpdateMode(hass) {\n    if (hass.states[\"input_boolean.ais_auto_update\"].state === \"off\") {\n      this.aisAutoUpdateIcon = \"mdi:sync-off\";\n      this.aisAutoUpdateInfo =\n        \"Możesz aktualizować system samodzielnie w dogodnym dla Ciebie czasie lub włączyć aktualizację automatyczną.\";\n      return false;\n    }\n    this.aisAutoUpdateIcon = \"mdi:sync\";\n    this.aisAutoUpdateInfo =\n      \"Codziennie sprawdzimy i automatycznie zainstalujemy dostępne aktualizacje.\";\n    return true;\n  }\n\n  _isEqualTo(currentStep, stepNumber) {\n    return currentStep === stepNumber;\n  }\n\n  changeAutoUpdateMode() {\n    this.hass.callService(\"input_boolean\", \"toggle\", {\n      entity_id: \"input_boolean.ais_auto_update\",\n    });\n  }\n\n  doBackup() {\n    // 1. validation\n    if (this.backupStep === \"0\") {\n      this.validating = true;\n      this.validateLog = \"\";\n\n      this.hass.callApi(\"POST\", \"config/core/check_config\").then((result) => {\n        this.validating = false;\n        var valid = result.result === \"valid\" ? \"1\" : \"0\";\n        if (valid === \"0\") {\n          this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n            step: valid,\n            backup_error: \"Konfiguracja niepoprawna\",\n          });\n          this.validateLog = result.errors;\n        } else {\n          this.hass.callService(\"ais_cloud\", \"set_backup_step\", {\n            step: valid,\n            backup_info: \"Konfiguracja poprawna można wykonać kopię\",\n          });\n          this.validateLog = \"\";\n        }\n      });\n    } else {\n      // 2. backup and transfer\n      this.validating = true;\n      this.validateLog = \"\";\n      var password = this.shadowRoot.getElementById(\"password1\").value;\n      this.hass.callService(\"ais_cloud\", \"do_backup\", {\n        password: password,\n      });\n    }\n  }\n\n  restoreBackup() {\n    this.validating = true;\n    this.validateLog = \"\";\n    var password = this.shadowRoot.getElementById(\"password2\").value;\n    this.hass.callService(\"ais_cloud\", \"restore_backup\", {\n      password: password,\n    });\n  }\n}\n\ncustomElements.define(\"ha-config-ais-dom-config-update\", HaConfigAisDomControl);\n"],"sourceRoot":""}