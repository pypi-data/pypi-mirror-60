version: 2.0

requirements: &requirements
  name: Install requirements
  command: |
    sudo pip install "pipenv>=9.0.3"
    pipenv install -e .

git_config: &git_config
  name: Git Configuration
  command: |
    git config --global user.email "root@localhost"
    git config --global user.name "gitoo"

run_tests: &run_tests
  name: Run tests
  command: pipenv run python setup.py test

coverage_report_codacy: &coverage_report_codacy
  name: Codacy Coverage
  command: |
    pipenv install codacy-coverage
    pipenv run python-codacy-coverage -r ./coverage.xml

rm_virtualenv: &rm_virtualenv
  name: Remove Virtualenv
  command: pipenv --rm

pipenv_check: &pipenv_check
  name: Check for security vulnerabilities
  command: pipenv check

jobs:
  python3:
    docker:
      - image: circleci/python:3.5
    steps:
      - checkout
      - run:
          <<: *requirements
      - run:
          <<: *git_config
      - run:
          <<: *run_tests
      - run:
          <<: *coverage_report_codacy
      - run:
          <<: *rm_virtualenv
      - run:
          <<: *pipenv_check
      - store_test_results:
          path: ./log

  deploy:
    docker:
      - image: circleci/python:3
    steps:
      - checkout
      - run:
          <<: *requirements
      - run:
          name: Init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: Make Package
          command: python setup.py sdist bdist_wheel

      - run:
          name: Upload to Pypi using Twine
          command: |
            pipenv install twine
            pipenv run twine upload dist/*

  auto-tag:
    machine: true
    steps:
      - checkout
      - run:
          name: Get nws
          command: |
            curl -L $NWS_BIN_LOCATION > ./nws
            chmod +x ./nws
      - run:
          name: Set tag
          command: |
            ./nws circleci create-tag

workflows:
  version: 2
  build:
    jobs:
      - python3:
          filters:
            tags:
              only: /.*/
      - deploy:
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/

      - auto-tag:
          context: nws
          requires:
            - python3
          filters:
            branches:
              only: /^\d\.0$/
