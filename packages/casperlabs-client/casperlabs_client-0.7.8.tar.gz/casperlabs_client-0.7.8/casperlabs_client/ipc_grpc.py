# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: ipc.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import state_pb2
from . import transforms_pb2
from . import ipc_pb2


class ExecutionEngineServiceBase(abc.ABC):

    @abc.abstractmethod
    async def commit(self, stream: 'grpclib.server.Stream[ipc_pb2.CommitRequest, ipc_pb2.CommitResponse]') -> None:
        pass

    @abc.abstractmethod
    async def query(self, stream: 'grpclib.server.Stream[ipc_pb2.QueryRequest, ipc_pb2.QueryResponse]') -> None:
        pass

    @abc.abstractmethod
    async def execute(self, stream: 'grpclib.server.Stream[ipc_pb2.ExecuteRequest, ipc_pb2.ExecuteResponse]') -> None:
        pass

    @abc.abstractmethod
    async def run_genesis(self, stream: 'grpclib.server.Stream[ipc_pb2.ChainSpec.GenesisConfig, ipc_pb2.GenesisResponse]') -> None:
        pass

    @abc.abstractmethod
    async def upgrade(self, stream: 'grpclib.server.Stream[ipc_pb2.UpgradeRequest, ipc_pb2.UpgradeResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/io.casperlabs.ipc.ExecutionEngineService/commit': grpclib.const.Handler(
                self.commit,
                grpclib.const.Cardinality.UNARY_UNARY,
                ipc_pb2.CommitRequest,
                ipc_pb2.CommitResponse,
            ),
            '/io.casperlabs.ipc.ExecutionEngineService/query': grpclib.const.Handler(
                self.query,
                grpclib.const.Cardinality.UNARY_UNARY,
                ipc_pb2.QueryRequest,
                ipc_pb2.QueryResponse,
            ),
            '/io.casperlabs.ipc.ExecutionEngineService/execute': grpclib.const.Handler(
                self.execute,
                grpclib.const.Cardinality.UNARY_UNARY,
                ipc_pb2.ExecuteRequest,
                ipc_pb2.ExecuteResponse,
            ),
            '/io.casperlabs.ipc.ExecutionEngineService/run_genesis': grpclib.const.Handler(
                self.run_genesis,
                grpclib.const.Cardinality.UNARY_UNARY,
                ipc_pb2.ChainSpec.GenesisConfig,
                ipc_pb2.GenesisResponse,
            ),
            '/io.casperlabs.ipc.ExecutionEngineService/upgrade': grpclib.const.Handler(
                self.upgrade,
                grpclib.const.Cardinality.UNARY_UNARY,
                ipc_pb2.UpgradeRequest,
                ipc_pb2.UpgradeResponse,
            ),
        }


class ExecutionEngineServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.commit = grpclib.client.UnaryUnaryMethod(
            channel,
            '/io.casperlabs.ipc.ExecutionEngineService/commit',
            ipc_pb2.CommitRequest,
            ipc_pb2.CommitResponse,
        )
        self.query = grpclib.client.UnaryUnaryMethod(
            channel,
            '/io.casperlabs.ipc.ExecutionEngineService/query',
            ipc_pb2.QueryRequest,
            ipc_pb2.QueryResponse,
        )
        self.execute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/io.casperlabs.ipc.ExecutionEngineService/execute',
            ipc_pb2.ExecuteRequest,
            ipc_pb2.ExecuteResponse,
        )
        self.run_genesis = grpclib.client.UnaryUnaryMethod(
            channel,
            '/io.casperlabs.ipc.ExecutionEngineService/run_genesis',
            ipc_pb2.ChainSpec.GenesisConfig,
            ipc_pb2.GenesisResponse,
        )
        self.upgrade = grpclib.client.UnaryUnaryMethod(
            channel,
            '/io.casperlabs.ipc.ExecutionEngineService/upgrade',
            ipc_pb2.UpgradeRequest,
            ipc_pb2.UpgradeResponse,
        )
