# encoding: utf-8
# THIS FILE IS AUTOGENERATED!
from __future__ import unicode_literals
from setuptools import setup
setup(
    description=u'More Collections! Some useful data structures for dealing with Data',
    license=u'MPL 2.0',
    author=u'Kyle Lahnakoski',
    author_email=u'kyle@lahnakoski.com',
    long_description_content_type=u'text/markdown',
    include_package_data=True,
    classifiers=["Development Status :: 4 - Beta","Topic :: Software Development :: Libraries","Topic :: Software Development :: Libraries :: Python Modules","License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)"],
    install_requires=["mo-dots>=3.33.20028","mo-future>=3.32.20028","mo-kwargs>=3.38.20029","mo-logs>=3.38.20029"],
    version=u'3.38.20029',
    url=u'https://github.com/klahnakoski/mo-collections',
    packages=["mo_collections"],
    long_description=u"More Collections\n================\n\nSome useful data structures for collections of data\n\n\n### Class `Index`\n\nProvide indexing for a list. Inner properties can be used for keys, and keys can be tuples of properties.  \n\n### Class `UniqueIndex`\n\nSame as Index, but includes checks and optimization to ensure members' keys are unique.\n\n### Class `Queue`\n\nA `Queue` is a list, with `add()` and `pop()`. It ensures members in the queue are not duplicated by not adding the ones already found in the queue.\n\n### Class `Matrix`\n\nA multidimensional grid of values that can be used like a `Mapping` from a-tuple-of-coordinates to the value at that coordinate. Plus a few other convenience methods.\n\nThis is a naive implementation. The hope it is a simple facade to a faster implementation.\n\n### Class `Relation`\n\nStore the many-to-many relations between two domains     ",
    name=u'mo-collections'
)