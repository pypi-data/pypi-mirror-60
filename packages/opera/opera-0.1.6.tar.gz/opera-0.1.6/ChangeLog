CHANGES
=======

0.1.6
-----

* Default to localhost when searching for host

0.1.5
-----

* Properly terminate lookup on root type

0.1.4
-----

* Remove debug remnant

0.1.3
-----

* Update get\_input for TOSCA 1.2

0.1.2
-----

* Implement inputs
* Implement eval for Pass class

0.1.1
-----

* Delegate property access to parent type

0.1.0
-----

* Update project documentation
* Describe project as python 3 only
* Add extras section for OpenStack libraries
* Add fuzzy TOSCA version matching
* Update ansible dependency
* Fix incomplete instructions in README
* Add service template playbooks needed for undeploy
* Remove ansible dependency from requirements
* Add undeploy command
* Add support for saving deployment information
* Make ssh skip host check
* Implement requirement attribute lookup
* Add missing attributes to supported TOSCA constructs
* Add provisional README contents
* Add Apache 2.0 license text to repo
* Add support for shared interface inputs on templates
* Improve error reporting for bad attributes
* Add support for attributes on templates
* Ignore missing fields in service template merges
* Resolve attributes when searching for host
* Implement attribute and property data accessors
* Add iteration methods for collections
* Embed graph links in instances
* Remove clutter from the opera's output
* Generalize ansible inventory creation
* Remove useless future imports
* Update sample service template
* Add ignore file
* Restructure CLI interface
* Add more complex sample service template
* Refactor instance model
* Extend parser TOSCA support
* Add initial Ansible support
* Add paths to the parser
* Add initial support for template instantiation
* Add reference type and resolution step
* Generalize actionable key collection
* Separate parsing from object instantiation
* Implement service template merging
* Make internal storage ordered
* Remove deploy method from service template
* Add basic normative types to orchestrator
* Add ordered entity collection
* Add support for node type parsing
* Support parsing fields with multiple valid types
* Reparent EntityCollection
* Improve error messages in implementation checks
* Add initial implementation of the parser
* Initial commit
