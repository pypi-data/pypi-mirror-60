# This file was generated automatically by export.py

from typing import Iterator
from typing import Tuple
from typing import overload
from typing import BinaryIO
from typing import Callable
from typing import NamedTuple
from typing import TextIO
from typing import Sequence
from typing_extensions import Literal
from typing import Optional
class Stat(NamedTuple):
  size: int
  mtime: float
def copy(src: str, dst: str, overwrite: bool=..., return_md5: bool=...) -> Optional[str]:
  ...
def exists(path: str) -> bool:
  ...
def glob(pattern: str, parallel: bool=...) -> Iterator[str]:
  ...
def isdir(path: str) -> bool:
  ...
def listdir(path: str, shard_prefix_length: int=...) -> Iterator[str]:
  ...
def makedirs(path: str) -> None:
  ...
def remove(path: str) -> None:
  ...
def rmdir(path: str) -> None:
  ...
def rmtree(path: str) -> None:
  ...
def stat(path: str) -> Stat:
  ...
def walk(top: str, topdown: bool=..., onerror: Optional[Callable]=...) -> Iterator[Tuple[str, Sequence[str], Sequence[str]]]:
  ...
def basename(path: str) -> str:
  ...
def dirname(path: str) -> str:
  ...
def join(a: str) -> str:
  ...
def get_url(path: str) -> Tuple[str, Optional[float]]:
  ...
def md5(path: str) -> str:
  ...
def set_log_callback(fn: Callable[[str], None]) -> None:
  ...
@overload
def BlobFile(path: str, mode: Literal['rb'], buffer_size: int=...) -> BinaryIO:
  ...
@overload
def BlobFile(path: str, mode: Literal['wb'], buffer_size: int=...) -> BinaryIO:
  ...
@overload
def BlobFile(path: str, mode: Literal['r'], buffer_size: int=...) -> TextIO:
  ...
@overload
def BlobFile(path: str, mode: Literal['w'], buffer_size: int=...) -> TextIO:
  ...
def BlobFile(path: str, mode: Literal['r', 'rb', 'w', 'wb']=..., buffer_size: int=...):
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['rb'], cache_dir: Optional[str]=...) -> BinaryIO:
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['wb'], cache_dir: Optional[str]=...) -> BinaryIO:
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['ab'], cache_dir: Optional[str]=...) -> BinaryIO:
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['r'], cache_dir: Optional[str]=...) -> TextIO:
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['w'], cache_dir: Optional[str]=...) -> TextIO:
  ...
@overload
def LocalBlobFile(path: str, mode: Literal['a'], cache_dir: Optional[str]=...) -> TextIO:
  ...
def LocalBlobFile(path: str, mode: Literal['r', 'rb', 'w', 'wb', 'a', 'ab']=..., cache_dir: Optional[str]=...):
  ...
