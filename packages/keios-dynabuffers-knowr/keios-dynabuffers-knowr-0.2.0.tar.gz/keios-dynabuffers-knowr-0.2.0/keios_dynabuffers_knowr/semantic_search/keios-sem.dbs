class SEMMessage(primary) {
    message: SEMMessageType
}

union SEMMessageType {
   SEMQueryReadRequest
   SEMPhraseReadRequest
   SEMWriteRequest
   SEMReadResponse
   SEMWriteResponse
}

class SEMQueryReadRequest {
   field: string
   query: string
   minimumScore: float
   limit: int
}

class SEMPhraseReadRequest {
    terms: [string]
    field: string
    inOrder: boolean
    slop: int
    minimumScore: float
    limit: int
}

class SearchResult {
    score: float
    document: [Tuple]
}

class SEMReadResponse {
    results: [SearchResult]
}

enum WriteResult {
    SUCCESS
    FAILURE
}

class SEMWriteRequest {
   document: [Tuple]
}

class Tuple {
    key: string
    value: string
}

class SEMWriteResponse {
    writeResult: WriteResult
}

