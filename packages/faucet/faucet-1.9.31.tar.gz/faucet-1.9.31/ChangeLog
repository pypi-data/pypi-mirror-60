CHANGES
=======

1.9.31
------

* Update grafana/grafana-arm32v7-linux Docker tag to v6.6.0
* Update grafana/grafana Docker tag to v6.6.0
* Edge-learn to root algorithm
* Update dependency pytype to v2020.1.24
* jobs/include makes Travis run serial now
* stickler
* Avoid getting stuck in flowtable filename loop
* Print host info when debugging multidp tests
* Add chained stack test case

1.9.30
------

* Don't do a delete all on disconnect
* Should be using captured not received by filter
* Correct test for edge learning - remote port must be up
* Send delete all on controller initiated OF disconnect
* Implement forwarding/non forwarding status for non-stack ports
* re packet match
* Document multimirror restriction and change tests to accomodate only one copy of traffic mirrored between ports
* Add comments for linty
* edge\_learn\_port test
* Need test verifying set\_field action for ICMPV4\_TYPE, IPV4\_DST, IPV4\_SRC, IP\_DSCP
* fix test suite stack links overwriting redundant host links
* Update grafana/grafana-arm32v7-linux Docker tag to v6.5.3
* Update grafana/grafana Docker tag to v6.5.3
* Need test to verify switches can match IP\_DSCP field

1.9.29
------

* Convert to stderr
* Move table dump to fkeoftable
* Update dependency pytype to v2020.1.8
* Cleanup
* Adding unit test for learning
* test all topologies
* Reset vlan cache on cold-start
* Update dependency pytype to v2020
* stickler
* Simplify update\_stack\_topo by removing unused no-port code
* Missing now for tests
* stickler
* Use now from Ryu
* Need to relearn a host even if it didn't move from a port, if the port recently changed status
* Smarter handling of clearing port LIVE flag (ignore it when already up because we're expecting a down message)
* Update pyyaml version in debian/control
* Update dependency pyyaml to v5.3
* Add test for port move event
* Keep VLAN host cache on port status change
* marginal unit test performance under travis
* pylint,
* Update prom/prometheus-pi Docker tag to v2.15.2
* pylint
* Update prom/prometheus Docker tag to v2.15.2
* pylint
* Flood actions is tuple for stacking also
* flowmod()
* move output actions splitter staticmethod to valve\_of
* Increase performance of packet in parsing and flood rule generation with LRU cache
* Make dedupe and building match\_dict less expensive
* pylint
* Add test
* Update dependency sphinx to v2.3.1

1.9.28
------

* Re-add fault-tolerance tests + optimizations
* Remove debug
* Change to learned\_l2\_port
* Adding l2 learning varz
* Update dependency pytype to v2019.12.17
* Towards root port should be the port along the chosen shortest path
* Smoke test faucet to make sure installation was successful at build time. Speed up installation with parallel unit tests
* Clear swap file
* label fix for dp\_root\_hop\_port
* Update grafana/grafana-arm32v7-linux Docker tag to v6.5.2
* Update grafana/grafana Docker tag to v6.5.2
* Add dummy ports to tutorial to workaround issue #3383
* Modify the tutorial to go incremental with two routers instead of one super router as suggested by Brad Cowie

1.9.27
------

* pylint
* Document test debug mode
* Implement debug mode for single test runner
* Upgrade to test-base v7.0.0 which includes 'm' util
* Authenticate to pypi with API token instead of user/pass
* Upgrade to beka v0.3.4
* Upgrade to chewie v0.0.21
* Add myself to authors
* Mention to reload faucet after configuration file change
* Fix bgp routing tutorial. This patch fixes the following issues:
* Update dependency pytype to v2019.12.6
* Upgrade pyyaml to 5.2
* Add errors\_out to influx
* Stickler fix
* Upgrade to eventlet 0.25.1
* Remove extra paren
* Updating unit tests with tx\_erors
* Add tx\_errors to gauge
* Update dependency sphinx to v2.2.2

1.9.26
------

* Reorder loop protection test so that hosts learned internally first
* Add test for VLAN learning flow
* reset VLAN caches on changed VLANs only
* Cannot relearn hosts on stacking port after warm start
* Need to override external flooding flag for all ports not just stacking ports
* Could create a loop between external ports
* Don't override edge\_learn\_dp if peer DP is up, prioritize locally learned over external
* Ignore only KeyError
* Try just ignoring Exception
* Report config hash change
* Add support for --help
* Update grafana/grafana-arm32v7-linux Docker tag to v6.5.1
* Update grafana/grafana Docker tag to v6.5.1
* Update dependency pytype to v2019.11.27
* Make runtests.sh argument parsing more robust
* Need to install cython before python-afl
* Use Ubuntu 18.04 on travis for running tests

1.9.25
------

* Revert "Add Fault-Tolerance tests & generalise the Multi-DP integration tests"
* Update grafana/grafana-arm32v7-linux Docker tag to v6.5.0
* Update grafana/grafana Docker tag to v6.5.0
* fix tests
* Need new state for stack uninitalized, so that we don't continually flap in init
* Verification test
* adds metric
* docker/localtest.sh: Update with latest dependencies
* pytype: Cleanups
* docs: Clarify 802.1X Per User ACL activation requirements
* docs: Cleanup Sphinx warnings
* Remove unused dependency python3-oslo.config
* skip tests
* Travis & bug fixes
* stickler
* Fix test\_topo & pylint
* Add Fault-Tolerance tests & generalise the FaucetStringOfDP integration tests
* helper-funcs: Easier usage from any directory
* router.py: Add 'repr' implementation for vip\_map\_by\_ipv (#3347)
* stickler fixes
* fix int parse empty string
* remove unit form comments
* docs entry
* Check for EVENT\_SOCK\_HEARTBEAT in tests

1.9.24
------

* Adds heartbeat events to check for health of event sock conn
*  Update faucet/prometheus-pi Docker tag to v2.14.0
* pylint
* Switch to fping for basic fping case. Verify only expected packets mirrored
* stickler
* Make state enumeration congruent with lldp
* Update lacp state machine
* lint
* Fix \_\_str\_\_ when mask is None
* Add commands to fakeoftable
* Tidy argument handling
* Feature: Make fakeoftable \_\_str\_\_ more readable
* Comments for tests for events
* Update prom/prometheus Docker tag to v2.14.0
* Make want variable more descriptive
* Update unit test docstring
* Add unit tests to collect and distribute knob
* Update grafana/grafana-arm32v7-linux Docker tag to v6.4.4
* Update grafana/grafana Docker tag to v6.4.4
* copro table should miss to destination not source

1.9.23
------

* Add missing blank line
* Add (failing) tests for external links going down
* Cleanup verify test
* Update influxdb Docker tag to v1.7
* Update arm32v7/influxdb Docker tag to v1.7
* pyup -> renovate
* Configure .renovaterc.json
* Add renovate.json
* conf-zodiac.sh: set Zodiac and OF controller network details
* FAUCET can send truncated ICMP6 echo replies
* update grafana to 6.2.4
* err -> out
* Pin exabgp to 4.0.10
* Update apt dependency for python3-prometheus-client
* Update prometheus\_client from 0.6.0 to 0.7.0
* Update sphinx from 2.1.0 to 2.1.1
* test\_topo.py tests clib rather than faucet
* Simplify get\_config() in mininet\_tests.py

1.9.8
-----

* Changing age calculation for LACP response
* Fix LLDP redundant logging
* Log error for types
* Fix missing parsing of optional hw\_switch\_config.yaml parameters
* setup 1.9.9
* README 1.9.8
* self.threads continually grows leading to high CPU. thread schedule jitter can be a float for better load distribution
* Fix crash when optional include file does not exist

1.9.7
-----

* Handle shell still running
* setup 1.9.8
* README 1.9.7
* Update pytype from 2019.5.24 to 2019.5.31
* Update sphinx from 2.0.1 to 2.1.0
* Add diagnostics for docker container tests. Handle read() possibly returning more than ps1
* host/switch prefixes should be sorted
* Consolidate common hardware switch remap code. Explicitly garbage collect OVS switches in tearDown()
* Lengthen marginal test timeouts
* Make pip cache easier to use for docker test runs
* Fix SameDp test for hardware
* Simulated hardware switch needs to be able to configure two VLAN headers
* pylint
* DPIDs cannot be duplicated
* Remove dangling faucet\_log function
* Stricter syntax checking for hardware test config, and smoke tests for hardware tests
* Convert to \_lacp\_actions
* Making test work properly
* update readme to broaden potential adapters
* Include unicast and routed packets in egress acl unit tests
