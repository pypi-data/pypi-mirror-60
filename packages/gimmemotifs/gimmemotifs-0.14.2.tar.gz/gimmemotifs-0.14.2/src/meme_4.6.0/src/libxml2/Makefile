# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/libxml2/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/meme
pkglibdir = $(libdir)/meme
pkgincludedir = $(includedir)/meme
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
subdir = src/libxml2
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in ltmain.sh
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libxml2_la_DEPENDENCIES =
am__libxml2_la_SOURCES_DIST = entities.c encoding.c error.c \
	parserInternals.c parser.c tree.c hash.c list.c xmlIO.c \
	xmlmemory.c uri.c valid.c HTMLparser.c HTMLtree.c debugXML.c \
	xpath.c globals.c threads.c xmlstring.c xmlregexp.c \
	xmlschemas.c xmlschemastypes.c xmlunicode.c xmlreader.c \
	relaxng.c dict.c SAX2.c chvalid.c pattern.c xmlsave.c \
	trionan.c
am_libxml2_la_OBJECTS = libxml2_la-entities.lo \
	libxml2_la-encoding.lo libxml2_la-error.lo \
	libxml2_la-parserInternals.lo \
	libxml2_la-parser.lo libxml2_la-tree.lo \
	libxml2_la-hash.lo libxml2_la-list.lo \
	libxml2_la-xmlIO.lo \
	libxml2_la-xmlmemory.lo libxml2_la-uri.lo \
	libxml2_la-valid.lo \
	libxml2_la-HTMLparser.lo \
	libxml2_la-HTMLtree.lo \
	libxml2_la-debugXML.lo libxml2_la-xpath.lo \
	libxml2_la-globals.lo \
	libxml2_la-threads.lo \
	libxml2_la-xmlstring.lo \
	libxml2_la-xmlregexp.lo \
	libxml2_la-xmlschemas.lo \
	libxml2_la-xmlschemastypes.lo \
	libxml2_la-xmlunicode.lo \
	libxml2_la-xmlreader.lo \
	libxml2_la-relaxng.lo libxml2_la-dict.lo \
	libxml2_la-SAX2.lo libxml2_la-chvalid.lo \
	libxml2_la-pattern.lo \
	libxml2_la-xmlsave.lo \
	libxml2_la-trionan.lo
libxml2_la_OBJECTS = $(am_libxml2_la_OBJECTS)
am_libxml2_la_rpath =
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libxml2_la_SOURCES)
DIST_SOURCES = $(am__libxml2_la_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run tar
ANT = 
AR = ar
AUTOCONF = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run automake-1.9
AWK = gawk
BLOCKS_URL = http://blocks.fhcrc.org/blocks-bin/process_blocks.pl
BUILD_LIBXML2_FALSE = #
BUILD_LIBXML2_TRUE = 
BUILD_LIBXSLT_FALSE = #
BUILD_LIBXSLT_TRUE = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-unused -DUNIX -D__USE_FIXED_PROTOTYPES__   -O3
CONTACT = @gimme
CONVERT = /usr/bin/convert
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG_FLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GHOSTSCRIPT = /usr/bin/gs
GOSERVER_URL = http://amigo.geneontology.org/cgi-bin/amigo/
HOSTNAME = gimme
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LAMBIN = 
LD = /usr/bin/x86_64-linux-gnu-ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_CFLAGS = -I${top_srcdir}/src/libxml2/include
LIBXML2_LIBS = ${top_builddir}/src/libxml2/libxml2.la
LIBXSLT_CFLAGS = -I${top_srcdir}/src/
LIBXSLT_LIBS = ${top_builddir}/src/libxslt/libxslt.la
LN_S = ln -s
LTLIBOBJS = 
MACHID = linux
MAIL = 
MAKEINFO = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run makeinfo
MAST_PORT = 
MAXTIME = 7200
MEME_DB = ${prefix}/db
MEME_DIRECTORY = ${prefix}
MEME_LOGS = ${prefix}/LOGS
MEME_PORT = 
METAMEME_EXTERNAL_FALSE = 
METAMEME_EXTERNAL_TRUE = #
MPICC = 
MPIFLAGS = -DPARALLEL 
MPIINC = 
MPILIBDIR = 
MPITYPE = 
MPI_CMD = 
OBJEXT = o
OPAL_URL = no
OPAL_XML = no
OPT_FLAGS = -O3
PACKAGE = meme
PACKAGE_BUGREPORT = 
PACKAGE_NAME = meme
PACKAGE_STRING = meme 4.6.0
PACKAGE_TARNAME = meme
PACKAGE_VERSION = 4.6.0
PARALLEL_FALSE = 
PARALLEL_IS_LAM_FALSE = 
PARALLEL_IS_LAM_TRUE = #
PARALLEL_TRUE = #
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PYTHON = /usr/bin/python
RANLIB = ranlib
SED = /bin/sed
SENDMAIL = /usr/lib/sendmail
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
URL = http://gimme/meme
VERSION = 4.6.0
WANT_STRLCPY_FALSE = #
WANT_STRLCPY_TRUE = 
WEBDIR = ${prefix}/web
WEBSERVICE = 
WEBSERVICE_FALSE = 
WEBSERVICE_TRUE = #
WEBSITE_FALSE = 
WEBSITE_TRUE = #
XML2_CONFIG = 
XSLT_CONFIG = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/simon/git/gimmemotifs/src/meme_4.6.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /home/simon
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = include .
DIST_SUBDIRS = include .
noinst_LTLIBRARIES = libxml2.la
INCLUDES = -I. -I./include -I./include/libxml2

# We don't control this code so turn off warnings.
libxml2_la_CFLAGS = $(AM_CFLAGS) -w
libxml2_la_LIBADD = $(ICONV_LIBS) 
libxml2_la_SOURCES = entities.c encoding.c error.c parserInternals.c  \
		parser.c tree.c hash.c list.c xmlIO.c xmlmemory.c uri.c  \
		valid.c HTMLparser.c HTMLtree.c debugXML.c xpath.c  \
		globals.c threads.c xmlstring.c \
		xmlregexp.c xmlschemas.c xmlschemastypes.c xmlunicode.c \
		xmlreader.c relaxng.c dict.c SAX2.c \
		chvalid.c pattern.c xmlsave.c \
		trionan.c

EXTRA_DIST = \
  Copyright \
  elfgcchack.h \
  libxml.h \
  triodef.h \
  trio.h \
  trionan.h \
  triop.h \
  triostr.h

DEPS = ./libxml2.la
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/libxml2/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/libxml2/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libxml2.la: $(libxml2_la_OBJECTS) $(libxml2_la_DEPENDENCIES) 
	$(LINK) $(am_libxml2_la_rpath) $(libxml2_la_LDFLAGS) $(libxml2_la_OBJECTS) $(libxml2_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libxml2_la-HTMLparser.Plo
include ./$(DEPDIR)/libxml2_la-HTMLtree.Plo
include ./$(DEPDIR)/libxml2_la-SAX2.Plo
include ./$(DEPDIR)/libxml2_la-chvalid.Plo
include ./$(DEPDIR)/libxml2_la-debugXML.Plo
include ./$(DEPDIR)/libxml2_la-dict.Plo
include ./$(DEPDIR)/libxml2_la-encoding.Plo
include ./$(DEPDIR)/libxml2_la-entities.Plo
include ./$(DEPDIR)/libxml2_la-error.Plo
include ./$(DEPDIR)/libxml2_la-globals.Plo
include ./$(DEPDIR)/libxml2_la-hash.Plo
include ./$(DEPDIR)/libxml2_la-list.Plo
include ./$(DEPDIR)/libxml2_la-parser.Plo
include ./$(DEPDIR)/libxml2_la-parserInternals.Plo
include ./$(DEPDIR)/libxml2_la-pattern.Plo
include ./$(DEPDIR)/libxml2_la-relaxng.Plo
include ./$(DEPDIR)/libxml2_la-threads.Plo
include ./$(DEPDIR)/libxml2_la-tree.Plo
include ./$(DEPDIR)/libxml2_la-trionan.Plo
include ./$(DEPDIR)/libxml2_la-uri.Plo
include ./$(DEPDIR)/libxml2_la-valid.Plo
include ./$(DEPDIR)/libxml2_la-xmlIO.Plo
include ./$(DEPDIR)/libxml2_la-xmlmemory.Plo
include ./$(DEPDIR)/libxml2_la-xmlreader.Plo
include ./$(DEPDIR)/libxml2_la-xmlregexp.Plo
include ./$(DEPDIR)/libxml2_la-xmlsave.Plo
include ./$(DEPDIR)/libxml2_la-xmlschemas.Plo
include ./$(DEPDIR)/libxml2_la-xmlschemastypes.Plo
include ./$(DEPDIR)/libxml2_la-xmlstring.Plo
include ./$(DEPDIR)/libxml2_la-xmlunicode.Plo
include ./$(DEPDIR)/libxml2_la-xpath.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

libxml2_la-entities.lo: entities.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-entities.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-entities.Tpo" -c -o libxml2_la-entities.lo `test -f 'entities.c' || echo '$(srcdir)/'`entities.c; \
	then mv -f "$(DEPDIR)/libxml2_la-entities.Tpo" "$(DEPDIR)/libxml2_la-entities.Plo"; else rm -f "$(DEPDIR)/libxml2_la-entities.Tpo"; exit 1; fi
#	source='entities.c' object='libxml2_la-entities.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-entities.lo `test -f 'entities.c' || echo '$(srcdir)/'`entities.c

libxml2_la-encoding.lo: encoding.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-encoding.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-encoding.Tpo" -c -o libxml2_la-encoding.lo `test -f 'encoding.c' || echo '$(srcdir)/'`encoding.c; \
	then mv -f "$(DEPDIR)/libxml2_la-encoding.Tpo" "$(DEPDIR)/libxml2_la-encoding.Plo"; else rm -f "$(DEPDIR)/libxml2_la-encoding.Tpo"; exit 1; fi
#	source='encoding.c' object='libxml2_la-encoding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-encoding.lo `test -f 'encoding.c' || echo '$(srcdir)/'`encoding.c

libxml2_la-error.lo: error.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-error.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-error.Tpo" -c -o libxml2_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c; \
	then mv -f "$(DEPDIR)/libxml2_la-error.Tpo" "$(DEPDIR)/libxml2_la-error.Plo"; else rm -f "$(DEPDIR)/libxml2_la-error.Tpo"; exit 1; fi
#	source='error.c' object='libxml2_la-error.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-error.lo `test -f 'error.c' || echo '$(srcdir)/'`error.c

libxml2_la-parserInternals.lo: parserInternals.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-parserInternals.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-parserInternals.Tpo" -c -o libxml2_la-parserInternals.lo `test -f 'parserInternals.c' || echo '$(srcdir)/'`parserInternals.c; \
	then mv -f "$(DEPDIR)/libxml2_la-parserInternals.Tpo" "$(DEPDIR)/libxml2_la-parserInternals.Plo"; else rm -f "$(DEPDIR)/libxml2_la-parserInternals.Tpo"; exit 1; fi
#	source='parserInternals.c' object='libxml2_la-parserInternals.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-parserInternals.lo `test -f 'parserInternals.c' || echo '$(srcdir)/'`parserInternals.c

libxml2_la-parser.lo: parser.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-parser.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-parser.Tpo" -c -o libxml2_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c; \
	then mv -f "$(DEPDIR)/libxml2_la-parser.Tpo" "$(DEPDIR)/libxml2_la-parser.Plo"; else rm -f "$(DEPDIR)/libxml2_la-parser.Tpo"; exit 1; fi
#	source='parser.c' object='libxml2_la-parser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-parser.lo `test -f 'parser.c' || echo '$(srcdir)/'`parser.c

libxml2_la-tree.lo: tree.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-tree.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-tree.Tpo" -c -o libxml2_la-tree.lo `test -f 'tree.c' || echo '$(srcdir)/'`tree.c; \
	then mv -f "$(DEPDIR)/libxml2_la-tree.Tpo" "$(DEPDIR)/libxml2_la-tree.Plo"; else rm -f "$(DEPDIR)/libxml2_la-tree.Tpo"; exit 1; fi
#	source='tree.c' object='libxml2_la-tree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-tree.lo `test -f 'tree.c' || echo '$(srcdir)/'`tree.c

libxml2_la-hash.lo: hash.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-hash.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-hash.Tpo" -c -o libxml2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c; \
	then mv -f "$(DEPDIR)/libxml2_la-hash.Tpo" "$(DEPDIR)/libxml2_la-hash.Plo"; else rm -f "$(DEPDIR)/libxml2_la-hash.Tpo"; exit 1; fi
#	source='hash.c' object='libxml2_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-hash.lo `test -f 'hash.c' || echo '$(srcdir)/'`hash.c

libxml2_la-list.lo: list.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-list.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-list.Tpo" -c -o libxml2_la-list.lo `test -f 'list.c' || echo '$(srcdir)/'`list.c; \
	then mv -f "$(DEPDIR)/libxml2_la-list.Tpo" "$(DEPDIR)/libxml2_la-list.Plo"; else rm -f "$(DEPDIR)/libxml2_la-list.Tpo"; exit 1; fi
#	source='list.c' object='libxml2_la-list.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-list.lo `test -f 'list.c' || echo '$(srcdir)/'`list.c

libxml2_la-xmlIO.lo: xmlIO.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlIO.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlIO.Tpo" -c -o libxml2_la-xmlIO.lo `test -f 'xmlIO.c' || echo '$(srcdir)/'`xmlIO.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlIO.Tpo" "$(DEPDIR)/libxml2_la-xmlIO.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlIO.Tpo"; exit 1; fi
#	source='xmlIO.c' object='libxml2_la-xmlIO.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlIO.lo `test -f 'xmlIO.c' || echo '$(srcdir)/'`xmlIO.c

libxml2_la-xmlmemory.lo: xmlmemory.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlmemory.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlmemory.Tpo" -c -o libxml2_la-xmlmemory.lo `test -f 'xmlmemory.c' || echo '$(srcdir)/'`xmlmemory.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlmemory.Tpo" "$(DEPDIR)/libxml2_la-xmlmemory.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlmemory.Tpo"; exit 1; fi
#	source='xmlmemory.c' object='libxml2_la-xmlmemory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlmemory.lo `test -f 'xmlmemory.c' || echo '$(srcdir)/'`xmlmemory.c

libxml2_la-uri.lo: uri.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-uri.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-uri.Tpo" -c -o libxml2_la-uri.lo `test -f 'uri.c' || echo '$(srcdir)/'`uri.c; \
	then mv -f "$(DEPDIR)/libxml2_la-uri.Tpo" "$(DEPDIR)/libxml2_la-uri.Plo"; else rm -f "$(DEPDIR)/libxml2_la-uri.Tpo"; exit 1; fi
#	source='uri.c' object='libxml2_la-uri.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-uri.lo `test -f 'uri.c' || echo '$(srcdir)/'`uri.c

libxml2_la-valid.lo: valid.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-valid.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-valid.Tpo" -c -o libxml2_la-valid.lo `test -f 'valid.c' || echo '$(srcdir)/'`valid.c; \
	then mv -f "$(DEPDIR)/libxml2_la-valid.Tpo" "$(DEPDIR)/libxml2_la-valid.Plo"; else rm -f "$(DEPDIR)/libxml2_la-valid.Tpo"; exit 1; fi
#	source='valid.c' object='libxml2_la-valid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-valid.lo `test -f 'valid.c' || echo '$(srcdir)/'`valid.c

libxml2_la-HTMLparser.lo: HTMLparser.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-HTMLparser.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-HTMLparser.Tpo" -c -o libxml2_la-HTMLparser.lo `test -f 'HTMLparser.c' || echo '$(srcdir)/'`HTMLparser.c; \
	then mv -f "$(DEPDIR)/libxml2_la-HTMLparser.Tpo" "$(DEPDIR)/libxml2_la-HTMLparser.Plo"; else rm -f "$(DEPDIR)/libxml2_la-HTMLparser.Tpo"; exit 1; fi
#	source='HTMLparser.c' object='libxml2_la-HTMLparser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-HTMLparser.lo `test -f 'HTMLparser.c' || echo '$(srcdir)/'`HTMLparser.c

libxml2_la-HTMLtree.lo: HTMLtree.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-HTMLtree.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-HTMLtree.Tpo" -c -o libxml2_la-HTMLtree.lo `test -f 'HTMLtree.c' || echo '$(srcdir)/'`HTMLtree.c; \
	then mv -f "$(DEPDIR)/libxml2_la-HTMLtree.Tpo" "$(DEPDIR)/libxml2_la-HTMLtree.Plo"; else rm -f "$(DEPDIR)/libxml2_la-HTMLtree.Tpo"; exit 1; fi
#	source='HTMLtree.c' object='libxml2_la-HTMLtree.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-HTMLtree.lo `test -f 'HTMLtree.c' || echo '$(srcdir)/'`HTMLtree.c

libxml2_la-debugXML.lo: debugXML.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-debugXML.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-debugXML.Tpo" -c -o libxml2_la-debugXML.lo `test -f 'debugXML.c' || echo '$(srcdir)/'`debugXML.c; \
	then mv -f "$(DEPDIR)/libxml2_la-debugXML.Tpo" "$(DEPDIR)/libxml2_la-debugXML.Plo"; else rm -f "$(DEPDIR)/libxml2_la-debugXML.Tpo"; exit 1; fi
#	source='debugXML.c' object='libxml2_la-debugXML.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-debugXML.lo `test -f 'debugXML.c' || echo '$(srcdir)/'`debugXML.c

libxml2_la-xpath.lo: xpath.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xpath.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xpath.Tpo" -c -o libxml2_la-xpath.lo `test -f 'xpath.c' || echo '$(srcdir)/'`xpath.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xpath.Tpo" "$(DEPDIR)/libxml2_la-xpath.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xpath.Tpo"; exit 1; fi
#	source='xpath.c' object='libxml2_la-xpath.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xpath.lo `test -f 'xpath.c' || echo '$(srcdir)/'`xpath.c

libxml2_la-globals.lo: globals.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-globals.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-globals.Tpo" -c -o libxml2_la-globals.lo `test -f 'globals.c' || echo '$(srcdir)/'`globals.c; \
	then mv -f "$(DEPDIR)/libxml2_la-globals.Tpo" "$(DEPDIR)/libxml2_la-globals.Plo"; else rm -f "$(DEPDIR)/libxml2_la-globals.Tpo"; exit 1; fi
#	source='globals.c' object='libxml2_la-globals.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-globals.lo `test -f 'globals.c' || echo '$(srcdir)/'`globals.c

libxml2_la-threads.lo: threads.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-threads.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-threads.Tpo" -c -o libxml2_la-threads.lo `test -f 'threads.c' || echo '$(srcdir)/'`threads.c; \
	then mv -f "$(DEPDIR)/libxml2_la-threads.Tpo" "$(DEPDIR)/libxml2_la-threads.Plo"; else rm -f "$(DEPDIR)/libxml2_la-threads.Tpo"; exit 1; fi
#	source='threads.c' object='libxml2_la-threads.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-threads.lo `test -f 'threads.c' || echo '$(srcdir)/'`threads.c

libxml2_la-xmlstring.lo: xmlstring.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlstring.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlstring.Tpo" -c -o libxml2_la-xmlstring.lo `test -f 'xmlstring.c' || echo '$(srcdir)/'`xmlstring.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlstring.Tpo" "$(DEPDIR)/libxml2_la-xmlstring.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlstring.Tpo"; exit 1; fi
#	source='xmlstring.c' object='libxml2_la-xmlstring.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlstring.lo `test -f 'xmlstring.c' || echo '$(srcdir)/'`xmlstring.c

libxml2_la-xmlregexp.lo: xmlregexp.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlregexp.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlregexp.Tpo" -c -o libxml2_la-xmlregexp.lo `test -f 'xmlregexp.c' || echo '$(srcdir)/'`xmlregexp.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlregexp.Tpo" "$(DEPDIR)/libxml2_la-xmlregexp.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlregexp.Tpo"; exit 1; fi
#	source='xmlregexp.c' object='libxml2_la-xmlregexp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlregexp.lo `test -f 'xmlregexp.c' || echo '$(srcdir)/'`xmlregexp.c

libxml2_la-xmlschemas.lo: xmlschemas.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlschemas.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlschemas.Tpo" -c -o libxml2_la-xmlschemas.lo `test -f 'xmlschemas.c' || echo '$(srcdir)/'`xmlschemas.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlschemas.Tpo" "$(DEPDIR)/libxml2_la-xmlschemas.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlschemas.Tpo"; exit 1; fi
#	source='xmlschemas.c' object='libxml2_la-xmlschemas.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlschemas.lo `test -f 'xmlschemas.c' || echo '$(srcdir)/'`xmlschemas.c

libxml2_la-xmlschemastypes.lo: xmlschemastypes.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlschemastypes.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlschemastypes.Tpo" -c -o libxml2_la-xmlschemastypes.lo `test -f 'xmlschemastypes.c' || echo '$(srcdir)/'`xmlschemastypes.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlschemastypes.Tpo" "$(DEPDIR)/libxml2_la-xmlschemastypes.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlschemastypes.Tpo"; exit 1; fi
#	source='xmlschemastypes.c' object='libxml2_la-xmlschemastypes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlschemastypes.lo `test -f 'xmlschemastypes.c' || echo '$(srcdir)/'`xmlschemastypes.c

libxml2_la-xmlunicode.lo: xmlunicode.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlunicode.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlunicode.Tpo" -c -o libxml2_la-xmlunicode.lo `test -f 'xmlunicode.c' || echo '$(srcdir)/'`xmlunicode.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlunicode.Tpo" "$(DEPDIR)/libxml2_la-xmlunicode.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlunicode.Tpo"; exit 1; fi
#	source='xmlunicode.c' object='libxml2_la-xmlunicode.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlunicode.lo `test -f 'xmlunicode.c' || echo '$(srcdir)/'`xmlunicode.c

libxml2_la-xmlreader.lo: xmlreader.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlreader.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlreader.Tpo" -c -o libxml2_la-xmlreader.lo `test -f 'xmlreader.c' || echo '$(srcdir)/'`xmlreader.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlreader.Tpo" "$(DEPDIR)/libxml2_la-xmlreader.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlreader.Tpo"; exit 1; fi
#	source='xmlreader.c' object='libxml2_la-xmlreader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlreader.lo `test -f 'xmlreader.c' || echo '$(srcdir)/'`xmlreader.c

libxml2_la-relaxng.lo: relaxng.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-relaxng.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-relaxng.Tpo" -c -o libxml2_la-relaxng.lo `test -f 'relaxng.c' || echo '$(srcdir)/'`relaxng.c; \
	then mv -f "$(DEPDIR)/libxml2_la-relaxng.Tpo" "$(DEPDIR)/libxml2_la-relaxng.Plo"; else rm -f "$(DEPDIR)/libxml2_la-relaxng.Tpo"; exit 1; fi
#	source='relaxng.c' object='libxml2_la-relaxng.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-relaxng.lo `test -f 'relaxng.c' || echo '$(srcdir)/'`relaxng.c

libxml2_la-dict.lo: dict.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-dict.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-dict.Tpo" -c -o libxml2_la-dict.lo `test -f 'dict.c' || echo '$(srcdir)/'`dict.c; \
	then mv -f "$(DEPDIR)/libxml2_la-dict.Tpo" "$(DEPDIR)/libxml2_la-dict.Plo"; else rm -f "$(DEPDIR)/libxml2_la-dict.Tpo"; exit 1; fi
#	source='dict.c' object='libxml2_la-dict.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-dict.lo `test -f 'dict.c' || echo '$(srcdir)/'`dict.c

libxml2_la-SAX2.lo: SAX2.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-SAX2.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-SAX2.Tpo" -c -o libxml2_la-SAX2.lo `test -f 'SAX2.c' || echo '$(srcdir)/'`SAX2.c; \
	then mv -f "$(DEPDIR)/libxml2_la-SAX2.Tpo" "$(DEPDIR)/libxml2_la-SAX2.Plo"; else rm -f "$(DEPDIR)/libxml2_la-SAX2.Tpo"; exit 1; fi
#	source='SAX2.c' object='libxml2_la-SAX2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-SAX2.lo `test -f 'SAX2.c' || echo '$(srcdir)/'`SAX2.c

libxml2_la-chvalid.lo: chvalid.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-chvalid.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-chvalid.Tpo" -c -o libxml2_la-chvalid.lo `test -f 'chvalid.c' || echo '$(srcdir)/'`chvalid.c; \
	then mv -f "$(DEPDIR)/libxml2_la-chvalid.Tpo" "$(DEPDIR)/libxml2_la-chvalid.Plo"; else rm -f "$(DEPDIR)/libxml2_la-chvalid.Tpo"; exit 1; fi
#	source='chvalid.c' object='libxml2_la-chvalid.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-chvalid.lo `test -f 'chvalid.c' || echo '$(srcdir)/'`chvalid.c

libxml2_la-pattern.lo: pattern.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-pattern.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-pattern.Tpo" -c -o libxml2_la-pattern.lo `test -f 'pattern.c' || echo '$(srcdir)/'`pattern.c; \
	then mv -f "$(DEPDIR)/libxml2_la-pattern.Tpo" "$(DEPDIR)/libxml2_la-pattern.Plo"; else rm -f "$(DEPDIR)/libxml2_la-pattern.Tpo"; exit 1; fi
#	source='pattern.c' object='libxml2_la-pattern.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-pattern.lo `test -f 'pattern.c' || echo '$(srcdir)/'`pattern.c

libxml2_la-xmlsave.lo: xmlsave.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-xmlsave.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-xmlsave.Tpo" -c -o libxml2_la-xmlsave.lo `test -f 'xmlsave.c' || echo '$(srcdir)/'`xmlsave.c; \
	then mv -f "$(DEPDIR)/libxml2_la-xmlsave.Tpo" "$(DEPDIR)/libxml2_la-xmlsave.Plo"; else rm -f "$(DEPDIR)/libxml2_la-xmlsave.Tpo"; exit 1; fi
#	source='xmlsave.c' object='libxml2_la-xmlsave.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-xmlsave.lo `test -f 'xmlsave.c' || echo '$(srcdir)/'`xmlsave.c

libxml2_la-trionan.lo: trionan.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -MT libxml2_la-trionan.lo -MD -MP -MF "$(DEPDIR)/libxml2_la-trionan.Tpo" -c -o libxml2_la-trionan.lo `test -f 'trionan.c' || echo '$(srcdir)/'`trionan.c; \
	then mv -f "$(DEPDIR)/libxml2_la-trionan.Tpo" "$(DEPDIR)/libxml2_la-trionan.Plo"; else rm -f "$(DEPDIR)/libxml2_la-trionan.Tpo"; exit 1; fi
#	source='trionan.c' object='libxml2_la-trionan.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libxml2_la_CFLAGS) $(CFLAGS) -c -o libxml2_la-trionan.lo `test -f 'trionan.c' || echo '$(srcdir)/'`trionan.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am


cleanup:
	-@(find . -name .\#\* -exec rm {} \;)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
