# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/parallel/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# To MAKE in DEBUG mode (it will write out lots of status info):
#	make CFLAGS=" -DDEBUG_PARALLEL"

# redefine make macros 
#CC = $(MPICC)
# TLB: FIXME This command makes things at least compile with the -DPARALLEL switch,
# but there are two -O switches
#CFLAGS=
#INCLUDES = -I.. $(MPIINC)
#COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES)
#LINK = $(CCLD) $(AM_CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#LINK = $(LIBTOOL) --mode=link --tag=CC $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
#	$(AM_LDFLAGS) $(LDFLAGS) -o $@ 

srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/meme
pkglibdir = $(libdir)/meme
pkgincludedir = $(includedir)/meme
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = meme_p$(EXEEXT)
subdir = src/parallel
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_meme_p_OBJECTS = meme_p-banner.$(OBJEXT) \
	meme_p-branching_search.$(OBJEXT) \
	meme_p-calculate_p_y.$(OBJEXT) meme_p-discretize.$(OBJEXT) \
	meme_p-display.$(OBJEXT) meme_p-dpalign.$(OBJEXT) \
	meme_p-em.$(OBJEXT) meme_p-init.$(OBJEXT) \
	meme_p-justlike.$(OBJEXT) meme_p-likelihood.$(OBJEXT) \
	meme_p-llr.$(OBJEXT) meme_p-logs.$(OBJEXT) \
	meme_p-meme.$(OBJEXT) meme_p-meme-print-html.$(OBJEXT) \
	meme_p-meme_util.$(OBJEXT) meme_p-message.$(OBJEXT) \
	meme_p-mp.$(OBJEXT) meme_p-oops.$(OBJEXT) \
	meme_p-partition.$(OBJEXT) meme_p-prior.$(OBJEXT) \
	meme_p-psp.$(OBJEXT) meme_p-pssm-distr.$(OBJEXT) \
	meme_p-read_seq_file.$(OBJEXT) meme_p-regress.$(OBJEXT) \
	meme_p-seed.$(OBJEXT) meme_p-seed_diffs.$(OBJEXT) \
	meme_p-seq2theta.$(OBJEXT) meme_p-sp_matrix.$(OBJEXT) \
	meme_p-starts.$(OBJEXT) meme_p-subseq7.$(OBJEXT) \
	meme_p-tcm.$(OBJEXT) meme_p-verbosity.$(OBJEXT)
meme_p_OBJECTS = $(am_meme_p_OBJECTS)
am__DEPENDENCIES_1 =
meme_p_DEPENDENCIES = ../libcommon.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(meme_p_SOURCES)
DIST_SOURCES = $(meme_p_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run tar
ANT = 
AR = ar
AUTOCONF = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run automake-1.9
AWK = gawk
BLOCKS_URL = http://blocks.fhcrc.org/blocks-bin/process_blocks.pl
BUILD_LIBXML2_FALSE = #
BUILD_LIBXML2_TRUE = 
BUILD_LIBXSLT_FALSE = #
BUILD_LIBXSLT_TRUE = 
CC = $(MPICC)
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wno-unused -DUNIX -D__USE_FIXED_PROTOTYPES__   -O3
CONTACT = @gimme
CONVERT = /usr/bin/convert
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEBUG_FLAGS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = f77
FFLAGS = -g -O2
GHOSTSCRIPT = /usr/bin/gs
GOSERVER_URL = http://amigo.geneontology.org/cgi-bin/amigo/
HOSTNAME = gimme
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LAMBIN = 
LD = /usr/bin/x86_64-linux-gnu-ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML2_CFLAGS = -I${top_srcdir}/src/libxml2/include
LIBXML2_LIBS = ${top_builddir}/src/libxml2/libxml2.la
LIBXSLT_CFLAGS = -I${top_srcdir}/src/
LIBXSLT_LIBS = ${top_builddir}/src/libxslt/libxslt.la
LN_S = ln -s
LTLIBOBJS = 
MACHID = linux
MAIL = 
MAKEINFO = ${SHELL} /home/simon/git/gimmemotifs/src/meme_4.6.0/config/missing --run makeinfo
MAST_PORT = 
MAXTIME = 7200
MEME_DB = ${prefix}/db
MEME_DIRECTORY = ${prefix}
MEME_LOGS = ${prefix}/LOGS
MEME_PORT = 
METAMEME_EXTERNAL_FALSE = 
METAMEME_EXTERNAL_TRUE = #
MPICC = 
MPIFLAGS = -DPARALLEL 
MPIINC = 
MPILIBDIR = 
MPITYPE = 
MPI_CMD = 
OBJEXT = o
OPAL_URL = no
OPAL_XML = no
OPT_FLAGS = -O3
PACKAGE = meme
PACKAGE_BUGREPORT = 
PACKAGE_NAME = meme
PACKAGE_STRING = meme 4.6.0
PACKAGE_TARNAME = meme
PACKAGE_VERSION = 4.6.0
PARALLEL_FALSE = 
PARALLEL_IS_LAM_FALSE = 
PARALLEL_IS_LAM_TRUE = #
PARALLEL_TRUE = #
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PYTHON = /usr/bin/python
RANLIB = ranlib
SED = /bin/sed
SENDMAIL = /usr/lib/sendmail
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
URL = http://gimme/meme
VERSION = 4.6.0
WANT_STRLCPY_FALSE = #
WANT_STRLCPY_TRUE = 
WEBDIR = ${prefix}/web
WEBSERVICE = 
WEBSERVICE_FALSE = 
WEBSERVICE_TRUE = #
WEBSITE_FALSE = 
WEBSITE_TRUE = #
XML2_CONFIG = 
XSLT_CONFIG = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/simon/git/gimmemotifs/src/meme_4.6.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /home/simon
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
meme_p_LDADD = ../libcommon.la $(LIBXML2_LIBS) $(LIBXSLT_LIBS)
meme_p_CFLAGS = -I.. $(MPIFLAGS) $(LIBXML2_CFLAGS) $(LIBXSLT_CFLAGS)
meme_p_SOURCES = \
  ../banner.c \
  ../branching_search.c \
  ../calculate_p_y.c \
  ../discretize.c \
  ../display.c \
  ../dpalign.c \
  ../em.c  \
  ../init.c  \
  ../justlike.c \
  ../likelihood.c \
  ../llr.c \
  ../logs.c \
  ../meme.c \
  ../meme-print-html.c \
  ../meme_util.c \
  ../message.c \
  ../mp.c \
  ../oops.c \
	../partition.c \
  ../prior.c  \
  ../psp.c \
  ../pssm-distr.c  \
  ../read_seq_file.c \
  ../regress.c \
  ../seed.c \
  ../seed_diffs.c \
  ../seq2theta.c \
  ../sp_matrix.c \
  ../starts.c \
  ../subseq7.c \
  ../tcm.c \
  ../verbosity.c

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/parallel/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/parallel/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
meme_p$(EXEEXT): $(meme_p_OBJECTS) $(meme_p_DEPENDENCIES) 
	@rm -f meme_p$(EXEEXT)
	$(LINK) $(meme_p_LDFLAGS) $(meme_p_OBJECTS) $(meme_p_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/meme_p-banner.Po
include ./$(DEPDIR)/meme_p-branching_search.Po
include ./$(DEPDIR)/meme_p-calculate_p_y.Po
include ./$(DEPDIR)/meme_p-discretize.Po
include ./$(DEPDIR)/meme_p-display.Po
include ./$(DEPDIR)/meme_p-dpalign.Po
include ./$(DEPDIR)/meme_p-em.Po
include ./$(DEPDIR)/meme_p-init.Po
include ./$(DEPDIR)/meme_p-justlike.Po
include ./$(DEPDIR)/meme_p-likelihood.Po
include ./$(DEPDIR)/meme_p-llr.Po
include ./$(DEPDIR)/meme_p-logs.Po
include ./$(DEPDIR)/meme_p-meme-print-html.Po
include ./$(DEPDIR)/meme_p-meme.Po
include ./$(DEPDIR)/meme_p-meme_util.Po
include ./$(DEPDIR)/meme_p-message.Po
include ./$(DEPDIR)/meme_p-mp.Po
include ./$(DEPDIR)/meme_p-oops.Po
include ./$(DEPDIR)/meme_p-partition.Po
include ./$(DEPDIR)/meme_p-prior.Po
include ./$(DEPDIR)/meme_p-psp.Po
include ./$(DEPDIR)/meme_p-pssm-distr.Po
include ./$(DEPDIR)/meme_p-read_seq_file.Po
include ./$(DEPDIR)/meme_p-regress.Po
include ./$(DEPDIR)/meme_p-seed.Po
include ./$(DEPDIR)/meme_p-seed_diffs.Po
include ./$(DEPDIR)/meme_p-seq2theta.Po
include ./$(DEPDIR)/meme_p-sp_matrix.Po
include ./$(DEPDIR)/meme_p-starts.Po
include ./$(DEPDIR)/meme_p-subseq7.Po
include ./$(DEPDIR)/meme_p-tcm.Po
include ./$(DEPDIR)/meme_p-verbosity.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

meme_p-banner.o: ../banner.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-banner.o -MD -MP -MF "$(DEPDIR)/meme_p-banner.Tpo" -c -o meme_p-banner.o `test -f '../banner.c' || echo '$(srcdir)/'`../banner.c; \
	then mv -f "$(DEPDIR)/meme_p-banner.Tpo" "$(DEPDIR)/meme_p-banner.Po"; else rm -f "$(DEPDIR)/meme_p-banner.Tpo"; exit 1; fi
#	source='../banner.c' object='meme_p-banner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-banner.o `test -f '../banner.c' || echo '$(srcdir)/'`../banner.c

meme_p-banner.obj: ../banner.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-banner.obj -MD -MP -MF "$(DEPDIR)/meme_p-banner.Tpo" -c -o meme_p-banner.obj `if test -f '../banner.c'; then $(CYGPATH_W) '../banner.c'; else $(CYGPATH_W) '$(srcdir)/../banner.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-banner.Tpo" "$(DEPDIR)/meme_p-banner.Po"; else rm -f "$(DEPDIR)/meme_p-banner.Tpo"; exit 1; fi
#	source='../banner.c' object='meme_p-banner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-banner.obj `if test -f '../banner.c'; then $(CYGPATH_W) '../banner.c'; else $(CYGPATH_W) '$(srcdir)/../banner.c'; fi`

meme_p-branching_search.o: ../branching_search.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-branching_search.o -MD -MP -MF "$(DEPDIR)/meme_p-branching_search.Tpo" -c -o meme_p-branching_search.o `test -f '../branching_search.c' || echo '$(srcdir)/'`../branching_search.c; \
	then mv -f "$(DEPDIR)/meme_p-branching_search.Tpo" "$(DEPDIR)/meme_p-branching_search.Po"; else rm -f "$(DEPDIR)/meme_p-branching_search.Tpo"; exit 1; fi
#	source='../branching_search.c' object='meme_p-branching_search.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-branching_search.o `test -f '../branching_search.c' || echo '$(srcdir)/'`../branching_search.c

meme_p-branching_search.obj: ../branching_search.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-branching_search.obj -MD -MP -MF "$(DEPDIR)/meme_p-branching_search.Tpo" -c -o meme_p-branching_search.obj `if test -f '../branching_search.c'; then $(CYGPATH_W) '../branching_search.c'; else $(CYGPATH_W) '$(srcdir)/../branching_search.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-branching_search.Tpo" "$(DEPDIR)/meme_p-branching_search.Po"; else rm -f "$(DEPDIR)/meme_p-branching_search.Tpo"; exit 1; fi
#	source='../branching_search.c' object='meme_p-branching_search.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-branching_search.obj `if test -f '../branching_search.c'; then $(CYGPATH_W) '../branching_search.c'; else $(CYGPATH_W) '$(srcdir)/../branching_search.c'; fi`

meme_p-calculate_p_y.o: ../calculate_p_y.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-calculate_p_y.o -MD -MP -MF "$(DEPDIR)/meme_p-calculate_p_y.Tpo" -c -o meme_p-calculate_p_y.o `test -f '../calculate_p_y.c' || echo '$(srcdir)/'`../calculate_p_y.c; \
	then mv -f "$(DEPDIR)/meme_p-calculate_p_y.Tpo" "$(DEPDIR)/meme_p-calculate_p_y.Po"; else rm -f "$(DEPDIR)/meme_p-calculate_p_y.Tpo"; exit 1; fi
#	source='../calculate_p_y.c' object='meme_p-calculate_p_y.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-calculate_p_y.o `test -f '../calculate_p_y.c' || echo '$(srcdir)/'`../calculate_p_y.c

meme_p-calculate_p_y.obj: ../calculate_p_y.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-calculate_p_y.obj -MD -MP -MF "$(DEPDIR)/meme_p-calculate_p_y.Tpo" -c -o meme_p-calculate_p_y.obj `if test -f '../calculate_p_y.c'; then $(CYGPATH_W) '../calculate_p_y.c'; else $(CYGPATH_W) '$(srcdir)/../calculate_p_y.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-calculate_p_y.Tpo" "$(DEPDIR)/meme_p-calculate_p_y.Po"; else rm -f "$(DEPDIR)/meme_p-calculate_p_y.Tpo"; exit 1; fi
#	source='../calculate_p_y.c' object='meme_p-calculate_p_y.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-calculate_p_y.obj `if test -f '../calculate_p_y.c'; then $(CYGPATH_W) '../calculate_p_y.c'; else $(CYGPATH_W) '$(srcdir)/../calculate_p_y.c'; fi`

meme_p-discretize.o: ../discretize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-discretize.o -MD -MP -MF "$(DEPDIR)/meme_p-discretize.Tpo" -c -o meme_p-discretize.o `test -f '../discretize.c' || echo '$(srcdir)/'`../discretize.c; \
	then mv -f "$(DEPDIR)/meme_p-discretize.Tpo" "$(DEPDIR)/meme_p-discretize.Po"; else rm -f "$(DEPDIR)/meme_p-discretize.Tpo"; exit 1; fi
#	source='../discretize.c' object='meme_p-discretize.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-discretize.o `test -f '../discretize.c' || echo '$(srcdir)/'`../discretize.c

meme_p-discretize.obj: ../discretize.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-discretize.obj -MD -MP -MF "$(DEPDIR)/meme_p-discretize.Tpo" -c -o meme_p-discretize.obj `if test -f '../discretize.c'; then $(CYGPATH_W) '../discretize.c'; else $(CYGPATH_W) '$(srcdir)/../discretize.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-discretize.Tpo" "$(DEPDIR)/meme_p-discretize.Po"; else rm -f "$(DEPDIR)/meme_p-discretize.Tpo"; exit 1; fi
#	source='../discretize.c' object='meme_p-discretize.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-discretize.obj `if test -f '../discretize.c'; then $(CYGPATH_W) '../discretize.c'; else $(CYGPATH_W) '$(srcdir)/../discretize.c'; fi`

meme_p-display.o: ../display.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-display.o -MD -MP -MF "$(DEPDIR)/meme_p-display.Tpo" -c -o meme_p-display.o `test -f '../display.c' || echo '$(srcdir)/'`../display.c; \
	then mv -f "$(DEPDIR)/meme_p-display.Tpo" "$(DEPDIR)/meme_p-display.Po"; else rm -f "$(DEPDIR)/meme_p-display.Tpo"; exit 1; fi
#	source='../display.c' object='meme_p-display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-display.o `test -f '../display.c' || echo '$(srcdir)/'`../display.c

meme_p-display.obj: ../display.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-display.obj -MD -MP -MF "$(DEPDIR)/meme_p-display.Tpo" -c -o meme_p-display.obj `if test -f '../display.c'; then $(CYGPATH_W) '../display.c'; else $(CYGPATH_W) '$(srcdir)/../display.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-display.Tpo" "$(DEPDIR)/meme_p-display.Po"; else rm -f "$(DEPDIR)/meme_p-display.Tpo"; exit 1; fi
#	source='../display.c' object='meme_p-display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-display.obj `if test -f '../display.c'; then $(CYGPATH_W) '../display.c'; else $(CYGPATH_W) '$(srcdir)/../display.c'; fi`

meme_p-dpalign.o: ../dpalign.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-dpalign.o -MD -MP -MF "$(DEPDIR)/meme_p-dpalign.Tpo" -c -o meme_p-dpalign.o `test -f '../dpalign.c' || echo '$(srcdir)/'`../dpalign.c; \
	then mv -f "$(DEPDIR)/meme_p-dpalign.Tpo" "$(DEPDIR)/meme_p-dpalign.Po"; else rm -f "$(DEPDIR)/meme_p-dpalign.Tpo"; exit 1; fi
#	source='../dpalign.c' object='meme_p-dpalign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-dpalign.o `test -f '../dpalign.c' || echo '$(srcdir)/'`../dpalign.c

meme_p-dpalign.obj: ../dpalign.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-dpalign.obj -MD -MP -MF "$(DEPDIR)/meme_p-dpalign.Tpo" -c -o meme_p-dpalign.obj `if test -f '../dpalign.c'; then $(CYGPATH_W) '../dpalign.c'; else $(CYGPATH_W) '$(srcdir)/../dpalign.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-dpalign.Tpo" "$(DEPDIR)/meme_p-dpalign.Po"; else rm -f "$(DEPDIR)/meme_p-dpalign.Tpo"; exit 1; fi
#	source='../dpalign.c' object='meme_p-dpalign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-dpalign.obj `if test -f '../dpalign.c'; then $(CYGPATH_W) '../dpalign.c'; else $(CYGPATH_W) '$(srcdir)/../dpalign.c'; fi`

meme_p-em.o: ../em.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-em.o -MD -MP -MF "$(DEPDIR)/meme_p-em.Tpo" -c -o meme_p-em.o `test -f '../em.c' || echo '$(srcdir)/'`../em.c; \
	then mv -f "$(DEPDIR)/meme_p-em.Tpo" "$(DEPDIR)/meme_p-em.Po"; else rm -f "$(DEPDIR)/meme_p-em.Tpo"; exit 1; fi
#	source='../em.c' object='meme_p-em.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-em.o `test -f '../em.c' || echo '$(srcdir)/'`../em.c

meme_p-em.obj: ../em.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-em.obj -MD -MP -MF "$(DEPDIR)/meme_p-em.Tpo" -c -o meme_p-em.obj `if test -f '../em.c'; then $(CYGPATH_W) '../em.c'; else $(CYGPATH_W) '$(srcdir)/../em.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-em.Tpo" "$(DEPDIR)/meme_p-em.Po"; else rm -f "$(DEPDIR)/meme_p-em.Tpo"; exit 1; fi
#	source='../em.c' object='meme_p-em.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-em.obj `if test -f '../em.c'; then $(CYGPATH_W) '../em.c'; else $(CYGPATH_W) '$(srcdir)/../em.c'; fi`

meme_p-init.o: ../init.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-init.o -MD -MP -MF "$(DEPDIR)/meme_p-init.Tpo" -c -o meme_p-init.o `test -f '../init.c' || echo '$(srcdir)/'`../init.c; \
	then mv -f "$(DEPDIR)/meme_p-init.Tpo" "$(DEPDIR)/meme_p-init.Po"; else rm -f "$(DEPDIR)/meme_p-init.Tpo"; exit 1; fi
#	source='../init.c' object='meme_p-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-init.o `test -f '../init.c' || echo '$(srcdir)/'`../init.c

meme_p-init.obj: ../init.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-init.obj -MD -MP -MF "$(DEPDIR)/meme_p-init.Tpo" -c -o meme_p-init.obj `if test -f '../init.c'; then $(CYGPATH_W) '../init.c'; else $(CYGPATH_W) '$(srcdir)/../init.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-init.Tpo" "$(DEPDIR)/meme_p-init.Po"; else rm -f "$(DEPDIR)/meme_p-init.Tpo"; exit 1; fi
#	source='../init.c' object='meme_p-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-init.obj `if test -f '../init.c'; then $(CYGPATH_W) '../init.c'; else $(CYGPATH_W) '$(srcdir)/../init.c'; fi`

meme_p-justlike.o: ../justlike.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-justlike.o -MD -MP -MF "$(DEPDIR)/meme_p-justlike.Tpo" -c -o meme_p-justlike.o `test -f '../justlike.c' || echo '$(srcdir)/'`../justlike.c; \
	then mv -f "$(DEPDIR)/meme_p-justlike.Tpo" "$(DEPDIR)/meme_p-justlike.Po"; else rm -f "$(DEPDIR)/meme_p-justlike.Tpo"; exit 1; fi
#	source='../justlike.c' object='meme_p-justlike.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-justlike.o `test -f '../justlike.c' || echo '$(srcdir)/'`../justlike.c

meme_p-justlike.obj: ../justlike.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-justlike.obj -MD -MP -MF "$(DEPDIR)/meme_p-justlike.Tpo" -c -o meme_p-justlike.obj `if test -f '../justlike.c'; then $(CYGPATH_W) '../justlike.c'; else $(CYGPATH_W) '$(srcdir)/../justlike.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-justlike.Tpo" "$(DEPDIR)/meme_p-justlike.Po"; else rm -f "$(DEPDIR)/meme_p-justlike.Tpo"; exit 1; fi
#	source='../justlike.c' object='meme_p-justlike.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-justlike.obj `if test -f '../justlike.c'; then $(CYGPATH_W) '../justlike.c'; else $(CYGPATH_W) '$(srcdir)/../justlike.c'; fi`

meme_p-likelihood.o: ../likelihood.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-likelihood.o -MD -MP -MF "$(DEPDIR)/meme_p-likelihood.Tpo" -c -o meme_p-likelihood.o `test -f '../likelihood.c' || echo '$(srcdir)/'`../likelihood.c; \
	then mv -f "$(DEPDIR)/meme_p-likelihood.Tpo" "$(DEPDIR)/meme_p-likelihood.Po"; else rm -f "$(DEPDIR)/meme_p-likelihood.Tpo"; exit 1; fi
#	source='../likelihood.c' object='meme_p-likelihood.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-likelihood.o `test -f '../likelihood.c' || echo '$(srcdir)/'`../likelihood.c

meme_p-likelihood.obj: ../likelihood.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-likelihood.obj -MD -MP -MF "$(DEPDIR)/meme_p-likelihood.Tpo" -c -o meme_p-likelihood.obj `if test -f '../likelihood.c'; then $(CYGPATH_W) '../likelihood.c'; else $(CYGPATH_W) '$(srcdir)/../likelihood.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-likelihood.Tpo" "$(DEPDIR)/meme_p-likelihood.Po"; else rm -f "$(DEPDIR)/meme_p-likelihood.Tpo"; exit 1; fi
#	source='../likelihood.c' object='meme_p-likelihood.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-likelihood.obj `if test -f '../likelihood.c'; then $(CYGPATH_W) '../likelihood.c'; else $(CYGPATH_W) '$(srcdir)/../likelihood.c'; fi`

meme_p-llr.o: ../llr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-llr.o -MD -MP -MF "$(DEPDIR)/meme_p-llr.Tpo" -c -o meme_p-llr.o `test -f '../llr.c' || echo '$(srcdir)/'`../llr.c; \
	then mv -f "$(DEPDIR)/meme_p-llr.Tpo" "$(DEPDIR)/meme_p-llr.Po"; else rm -f "$(DEPDIR)/meme_p-llr.Tpo"; exit 1; fi
#	source='../llr.c' object='meme_p-llr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-llr.o `test -f '../llr.c' || echo '$(srcdir)/'`../llr.c

meme_p-llr.obj: ../llr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-llr.obj -MD -MP -MF "$(DEPDIR)/meme_p-llr.Tpo" -c -o meme_p-llr.obj `if test -f '../llr.c'; then $(CYGPATH_W) '../llr.c'; else $(CYGPATH_W) '$(srcdir)/../llr.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-llr.Tpo" "$(DEPDIR)/meme_p-llr.Po"; else rm -f "$(DEPDIR)/meme_p-llr.Tpo"; exit 1; fi
#	source='../llr.c' object='meme_p-llr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-llr.obj `if test -f '../llr.c'; then $(CYGPATH_W) '../llr.c'; else $(CYGPATH_W) '$(srcdir)/../llr.c'; fi`

meme_p-logs.o: ../logs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-logs.o -MD -MP -MF "$(DEPDIR)/meme_p-logs.Tpo" -c -o meme_p-logs.o `test -f '../logs.c' || echo '$(srcdir)/'`../logs.c; \
	then mv -f "$(DEPDIR)/meme_p-logs.Tpo" "$(DEPDIR)/meme_p-logs.Po"; else rm -f "$(DEPDIR)/meme_p-logs.Tpo"; exit 1; fi
#	source='../logs.c' object='meme_p-logs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-logs.o `test -f '../logs.c' || echo '$(srcdir)/'`../logs.c

meme_p-logs.obj: ../logs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-logs.obj -MD -MP -MF "$(DEPDIR)/meme_p-logs.Tpo" -c -o meme_p-logs.obj `if test -f '../logs.c'; then $(CYGPATH_W) '../logs.c'; else $(CYGPATH_W) '$(srcdir)/../logs.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-logs.Tpo" "$(DEPDIR)/meme_p-logs.Po"; else rm -f "$(DEPDIR)/meme_p-logs.Tpo"; exit 1; fi
#	source='../logs.c' object='meme_p-logs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-logs.obj `if test -f '../logs.c'; then $(CYGPATH_W) '../logs.c'; else $(CYGPATH_W) '$(srcdir)/../logs.c'; fi`

meme_p-meme.o: ../meme.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme.o -MD -MP -MF "$(DEPDIR)/meme_p-meme.Tpo" -c -o meme_p-meme.o `test -f '../meme.c' || echo '$(srcdir)/'`../meme.c; \
	then mv -f "$(DEPDIR)/meme_p-meme.Tpo" "$(DEPDIR)/meme_p-meme.Po"; else rm -f "$(DEPDIR)/meme_p-meme.Tpo"; exit 1; fi
#	source='../meme.c' object='meme_p-meme.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme.o `test -f '../meme.c' || echo '$(srcdir)/'`../meme.c

meme_p-meme.obj: ../meme.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme.obj -MD -MP -MF "$(DEPDIR)/meme_p-meme.Tpo" -c -o meme_p-meme.obj `if test -f '../meme.c'; then $(CYGPATH_W) '../meme.c'; else $(CYGPATH_W) '$(srcdir)/../meme.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-meme.Tpo" "$(DEPDIR)/meme_p-meme.Po"; else rm -f "$(DEPDIR)/meme_p-meme.Tpo"; exit 1; fi
#	source='../meme.c' object='meme_p-meme.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme.obj `if test -f '../meme.c'; then $(CYGPATH_W) '../meme.c'; else $(CYGPATH_W) '$(srcdir)/../meme.c'; fi`

meme_p-meme-print-html.o: ../meme-print-html.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme-print-html.o -MD -MP -MF "$(DEPDIR)/meme_p-meme-print-html.Tpo" -c -o meme_p-meme-print-html.o `test -f '../meme-print-html.c' || echo '$(srcdir)/'`../meme-print-html.c; \
	then mv -f "$(DEPDIR)/meme_p-meme-print-html.Tpo" "$(DEPDIR)/meme_p-meme-print-html.Po"; else rm -f "$(DEPDIR)/meme_p-meme-print-html.Tpo"; exit 1; fi
#	source='../meme-print-html.c' object='meme_p-meme-print-html.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme-print-html.o `test -f '../meme-print-html.c' || echo '$(srcdir)/'`../meme-print-html.c

meme_p-meme-print-html.obj: ../meme-print-html.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme-print-html.obj -MD -MP -MF "$(DEPDIR)/meme_p-meme-print-html.Tpo" -c -o meme_p-meme-print-html.obj `if test -f '../meme-print-html.c'; then $(CYGPATH_W) '../meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/../meme-print-html.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-meme-print-html.Tpo" "$(DEPDIR)/meme_p-meme-print-html.Po"; else rm -f "$(DEPDIR)/meme_p-meme-print-html.Tpo"; exit 1; fi
#	source='../meme-print-html.c' object='meme_p-meme-print-html.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme-print-html.obj `if test -f '../meme-print-html.c'; then $(CYGPATH_W) '../meme-print-html.c'; else $(CYGPATH_W) '$(srcdir)/../meme-print-html.c'; fi`

meme_p-meme_util.o: ../meme_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme_util.o -MD -MP -MF "$(DEPDIR)/meme_p-meme_util.Tpo" -c -o meme_p-meme_util.o `test -f '../meme_util.c' || echo '$(srcdir)/'`../meme_util.c; \
	then mv -f "$(DEPDIR)/meme_p-meme_util.Tpo" "$(DEPDIR)/meme_p-meme_util.Po"; else rm -f "$(DEPDIR)/meme_p-meme_util.Tpo"; exit 1; fi
#	source='../meme_util.c' object='meme_p-meme_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme_util.o `test -f '../meme_util.c' || echo '$(srcdir)/'`../meme_util.c

meme_p-meme_util.obj: ../meme_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-meme_util.obj -MD -MP -MF "$(DEPDIR)/meme_p-meme_util.Tpo" -c -o meme_p-meme_util.obj `if test -f '../meme_util.c'; then $(CYGPATH_W) '../meme_util.c'; else $(CYGPATH_W) '$(srcdir)/../meme_util.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-meme_util.Tpo" "$(DEPDIR)/meme_p-meme_util.Po"; else rm -f "$(DEPDIR)/meme_p-meme_util.Tpo"; exit 1; fi
#	source='../meme_util.c' object='meme_p-meme_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-meme_util.obj `if test -f '../meme_util.c'; then $(CYGPATH_W) '../meme_util.c'; else $(CYGPATH_W) '$(srcdir)/../meme_util.c'; fi`

meme_p-message.o: ../message.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-message.o -MD -MP -MF "$(DEPDIR)/meme_p-message.Tpo" -c -o meme_p-message.o `test -f '../message.c' || echo '$(srcdir)/'`../message.c; \
	then mv -f "$(DEPDIR)/meme_p-message.Tpo" "$(DEPDIR)/meme_p-message.Po"; else rm -f "$(DEPDIR)/meme_p-message.Tpo"; exit 1; fi
#	source='../message.c' object='meme_p-message.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-message.o `test -f '../message.c' || echo '$(srcdir)/'`../message.c

meme_p-message.obj: ../message.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-message.obj -MD -MP -MF "$(DEPDIR)/meme_p-message.Tpo" -c -o meme_p-message.obj `if test -f '../message.c'; then $(CYGPATH_W) '../message.c'; else $(CYGPATH_W) '$(srcdir)/../message.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-message.Tpo" "$(DEPDIR)/meme_p-message.Po"; else rm -f "$(DEPDIR)/meme_p-message.Tpo"; exit 1; fi
#	source='../message.c' object='meme_p-message.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-message.obj `if test -f '../message.c'; then $(CYGPATH_W) '../message.c'; else $(CYGPATH_W) '$(srcdir)/../message.c'; fi`

meme_p-mp.o: ../mp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-mp.o -MD -MP -MF "$(DEPDIR)/meme_p-mp.Tpo" -c -o meme_p-mp.o `test -f '../mp.c' || echo '$(srcdir)/'`../mp.c; \
	then mv -f "$(DEPDIR)/meme_p-mp.Tpo" "$(DEPDIR)/meme_p-mp.Po"; else rm -f "$(DEPDIR)/meme_p-mp.Tpo"; exit 1; fi
#	source='../mp.c' object='meme_p-mp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-mp.o `test -f '../mp.c' || echo '$(srcdir)/'`../mp.c

meme_p-mp.obj: ../mp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-mp.obj -MD -MP -MF "$(DEPDIR)/meme_p-mp.Tpo" -c -o meme_p-mp.obj `if test -f '../mp.c'; then $(CYGPATH_W) '../mp.c'; else $(CYGPATH_W) '$(srcdir)/../mp.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-mp.Tpo" "$(DEPDIR)/meme_p-mp.Po"; else rm -f "$(DEPDIR)/meme_p-mp.Tpo"; exit 1; fi
#	source='../mp.c' object='meme_p-mp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-mp.obj `if test -f '../mp.c'; then $(CYGPATH_W) '../mp.c'; else $(CYGPATH_W) '$(srcdir)/../mp.c'; fi`

meme_p-oops.o: ../oops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-oops.o -MD -MP -MF "$(DEPDIR)/meme_p-oops.Tpo" -c -o meme_p-oops.o `test -f '../oops.c' || echo '$(srcdir)/'`../oops.c; \
	then mv -f "$(DEPDIR)/meme_p-oops.Tpo" "$(DEPDIR)/meme_p-oops.Po"; else rm -f "$(DEPDIR)/meme_p-oops.Tpo"; exit 1; fi
#	source='../oops.c' object='meme_p-oops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-oops.o `test -f '../oops.c' || echo '$(srcdir)/'`../oops.c

meme_p-oops.obj: ../oops.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-oops.obj -MD -MP -MF "$(DEPDIR)/meme_p-oops.Tpo" -c -o meme_p-oops.obj `if test -f '../oops.c'; then $(CYGPATH_W) '../oops.c'; else $(CYGPATH_W) '$(srcdir)/../oops.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-oops.Tpo" "$(DEPDIR)/meme_p-oops.Po"; else rm -f "$(DEPDIR)/meme_p-oops.Tpo"; exit 1; fi
#	source='../oops.c' object='meme_p-oops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-oops.obj `if test -f '../oops.c'; then $(CYGPATH_W) '../oops.c'; else $(CYGPATH_W) '$(srcdir)/../oops.c'; fi`

meme_p-partition.o: ../partition.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-partition.o -MD -MP -MF "$(DEPDIR)/meme_p-partition.Tpo" -c -o meme_p-partition.o `test -f '../partition.c' || echo '$(srcdir)/'`../partition.c; \
	then mv -f "$(DEPDIR)/meme_p-partition.Tpo" "$(DEPDIR)/meme_p-partition.Po"; else rm -f "$(DEPDIR)/meme_p-partition.Tpo"; exit 1; fi
#	source='../partition.c' object='meme_p-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-partition.o `test -f '../partition.c' || echo '$(srcdir)/'`../partition.c

meme_p-partition.obj: ../partition.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-partition.obj -MD -MP -MF "$(DEPDIR)/meme_p-partition.Tpo" -c -o meme_p-partition.obj `if test -f '../partition.c'; then $(CYGPATH_W) '../partition.c'; else $(CYGPATH_W) '$(srcdir)/../partition.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-partition.Tpo" "$(DEPDIR)/meme_p-partition.Po"; else rm -f "$(DEPDIR)/meme_p-partition.Tpo"; exit 1; fi
#	source='../partition.c' object='meme_p-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-partition.obj `if test -f '../partition.c'; then $(CYGPATH_W) '../partition.c'; else $(CYGPATH_W) '$(srcdir)/../partition.c'; fi`

meme_p-prior.o: ../prior.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-prior.o -MD -MP -MF "$(DEPDIR)/meme_p-prior.Tpo" -c -o meme_p-prior.o `test -f '../prior.c' || echo '$(srcdir)/'`../prior.c; \
	then mv -f "$(DEPDIR)/meme_p-prior.Tpo" "$(DEPDIR)/meme_p-prior.Po"; else rm -f "$(DEPDIR)/meme_p-prior.Tpo"; exit 1; fi
#	source='../prior.c' object='meme_p-prior.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-prior.o `test -f '../prior.c' || echo '$(srcdir)/'`../prior.c

meme_p-prior.obj: ../prior.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-prior.obj -MD -MP -MF "$(DEPDIR)/meme_p-prior.Tpo" -c -o meme_p-prior.obj `if test -f '../prior.c'; then $(CYGPATH_W) '../prior.c'; else $(CYGPATH_W) '$(srcdir)/../prior.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-prior.Tpo" "$(DEPDIR)/meme_p-prior.Po"; else rm -f "$(DEPDIR)/meme_p-prior.Tpo"; exit 1; fi
#	source='../prior.c' object='meme_p-prior.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-prior.obj `if test -f '../prior.c'; then $(CYGPATH_W) '../prior.c'; else $(CYGPATH_W) '$(srcdir)/../prior.c'; fi`

meme_p-psp.o: ../psp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-psp.o -MD -MP -MF "$(DEPDIR)/meme_p-psp.Tpo" -c -o meme_p-psp.o `test -f '../psp.c' || echo '$(srcdir)/'`../psp.c; \
	then mv -f "$(DEPDIR)/meme_p-psp.Tpo" "$(DEPDIR)/meme_p-psp.Po"; else rm -f "$(DEPDIR)/meme_p-psp.Tpo"; exit 1; fi
#	source='../psp.c' object='meme_p-psp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-psp.o `test -f '../psp.c' || echo '$(srcdir)/'`../psp.c

meme_p-psp.obj: ../psp.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-psp.obj -MD -MP -MF "$(DEPDIR)/meme_p-psp.Tpo" -c -o meme_p-psp.obj `if test -f '../psp.c'; then $(CYGPATH_W) '../psp.c'; else $(CYGPATH_W) '$(srcdir)/../psp.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-psp.Tpo" "$(DEPDIR)/meme_p-psp.Po"; else rm -f "$(DEPDIR)/meme_p-psp.Tpo"; exit 1; fi
#	source='../psp.c' object='meme_p-psp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-psp.obj `if test -f '../psp.c'; then $(CYGPATH_W) '../psp.c'; else $(CYGPATH_W) '$(srcdir)/../psp.c'; fi`

meme_p-pssm-distr.o: ../pssm-distr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-pssm-distr.o -MD -MP -MF "$(DEPDIR)/meme_p-pssm-distr.Tpo" -c -o meme_p-pssm-distr.o `test -f '../pssm-distr.c' || echo '$(srcdir)/'`../pssm-distr.c; \
	then mv -f "$(DEPDIR)/meme_p-pssm-distr.Tpo" "$(DEPDIR)/meme_p-pssm-distr.Po"; else rm -f "$(DEPDIR)/meme_p-pssm-distr.Tpo"; exit 1; fi
#	source='../pssm-distr.c' object='meme_p-pssm-distr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-pssm-distr.o `test -f '../pssm-distr.c' || echo '$(srcdir)/'`../pssm-distr.c

meme_p-pssm-distr.obj: ../pssm-distr.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-pssm-distr.obj -MD -MP -MF "$(DEPDIR)/meme_p-pssm-distr.Tpo" -c -o meme_p-pssm-distr.obj `if test -f '../pssm-distr.c'; then $(CYGPATH_W) '../pssm-distr.c'; else $(CYGPATH_W) '$(srcdir)/../pssm-distr.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-pssm-distr.Tpo" "$(DEPDIR)/meme_p-pssm-distr.Po"; else rm -f "$(DEPDIR)/meme_p-pssm-distr.Tpo"; exit 1; fi
#	source='../pssm-distr.c' object='meme_p-pssm-distr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-pssm-distr.obj `if test -f '../pssm-distr.c'; then $(CYGPATH_W) '../pssm-distr.c'; else $(CYGPATH_W) '$(srcdir)/../pssm-distr.c'; fi`

meme_p-read_seq_file.o: ../read_seq_file.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-read_seq_file.o -MD -MP -MF "$(DEPDIR)/meme_p-read_seq_file.Tpo" -c -o meme_p-read_seq_file.o `test -f '../read_seq_file.c' || echo '$(srcdir)/'`../read_seq_file.c; \
	then mv -f "$(DEPDIR)/meme_p-read_seq_file.Tpo" "$(DEPDIR)/meme_p-read_seq_file.Po"; else rm -f "$(DEPDIR)/meme_p-read_seq_file.Tpo"; exit 1; fi
#	source='../read_seq_file.c' object='meme_p-read_seq_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-read_seq_file.o `test -f '../read_seq_file.c' || echo '$(srcdir)/'`../read_seq_file.c

meme_p-read_seq_file.obj: ../read_seq_file.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-read_seq_file.obj -MD -MP -MF "$(DEPDIR)/meme_p-read_seq_file.Tpo" -c -o meme_p-read_seq_file.obj `if test -f '../read_seq_file.c'; then $(CYGPATH_W) '../read_seq_file.c'; else $(CYGPATH_W) '$(srcdir)/../read_seq_file.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-read_seq_file.Tpo" "$(DEPDIR)/meme_p-read_seq_file.Po"; else rm -f "$(DEPDIR)/meme_p-read_seq_file.Tpo"; exit 1; fi
#	source='../read_seq_file.c' object='meme_p-read_seq_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-read_seq_file.obj `if test -f '../read_seq_file.c'; then $(CYGPATH_W) '../read_seq_file.c'; else $(CYGPATH_W) '$(srcdir)/../read_seq_file.c'; fi`

meme_p-regress.o: ../regress.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-regress.o -MD -MP -MF "$(DEPDIR)/meme_p-regress.Tpo" -c -o meme_p-regress.o `test -f '../regress.c' || echo '$(srcdir)/'`../regress.c; \
	then mv -f "$(DEPDIR)/meme_p-regress.Tpo" "$(DEPDIR)/meme_p-regress.Po"; else rm -f "$(DEPDIR)/meme_p-regress.Tpo"; exit 1; fi
#	source='../regress.c' object='meme_p-regress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-regress.o `test -f '../regress.c' || echo '$(srcdir)/'`../regress.c

meme_p-regress.obj: ../regress.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-regress.obj -MD -MP -MF "$(DEPDIR)/meme_p-regress.Tpo" -c -o meme_p-regress.obj `if test -f '../regress.c'; then $(CYGPATH_W) '../regress.c'; else $(CYGPATH_W) '$(srcdir)/../regress.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-regress.Tpo" "$(DEPDIR)/meme_p-regress.Po"; else rm -f "$(DEPDIR)/meme_p-regress.Tpo"; exit 1; fi
#	source='../regress.c' object='meme_p-regress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-regress.obj `if test -f '../regress.c'; then $(CYGPATH_W) '../regress.c'; else $(CYGPATH_W) '$(srcdir)/../regress.c'; fi`

meme_p-seed.o: ../seed.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seed.o -MD -MP -MF "$(DEPDIR)/meme_p-seed.Tpo" -c -o meme_p-seed.o `test -f '../seed.c' || echo '$(srcdir)/'`../seed.c; \
	then mv -f "$(DEPDIR)/meme_p-seed.Tpo" "$(DEPDIR)/meme_p-seed.Po"; else rm -f "$(DEPDIR)/meme_p-seed.Tpo"; exit 1; fi
#	source='../seed.c' object='meme_p-seed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seed.o `test -f '../seed.c' || echo '$(srcdir)/'`../seed.c

meme_p-seed.obj: ../seed.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seed.obj -MD -MP -MF "$(DEPDIR)/meme_p-seed.Tpo" -c -o meme_p-seed.obj `if test -f '../seed.c'; then $(CYGPATH_W) '../seed.c'; else $(CYGPATH_W) '$(srcdir)/../seed.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-seed.Tpo" "$(DEPDIR)/meme_p-seed.Po"; else rm -f "$(DEPDIR)/meme_p-seed.Tpo"; exit 1; fi
#	source='../seed.c' object='meme_p-seed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seed.obj `if test -f '../seed.c'; then $(CYGPATH_W) '../seed.c'; else $(CYGPATH_W) '$(srcdir)/../seed.c'; fi`

meme_p-seed_diffs.o: ../seed_diffs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seed_diffs.o -MD -MP -MF "$(DEPDIR)/meme_p-seed_diffs.Tpo" -c -o meme_p-seed_diffs.o `test -f '../seed_diffs.c' || echo '$(srcdir)/'`../seed_diffs.c; \
	then mv -f "$(DEPDIR)/meme_p-seed_diffs.Tpo" "$(DEPDIR)/meme_p-seed_diffs.Po"; else rm -f "$(DEPDIR)/meme_p-seed_diffs.Tpo"; exit 1; fi
#	source='../seed_diffs.c' object='meme_p-seed_diffs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seed_diffs.o `test -f '../seed_diffs.c' || echo '$(srcdir)/'`../seed_diffs.c

meme_p-seed_diffs.obj: ../seed_diffs.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seed_diffs.obj -MD -MP -MF "$(DEPDIR)/meme_p-seed_diffs.Tpo" -c -o meme_p-seed_diffs.obj `if test -f '../seed_diffs.c'; then $(CYGPATH_W) '../seed_diffs.c'; else $(CYGPATH_W) '$(srcdir)/../seed_diffs.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-seed_diffs.Tpo" "$(DEPDIR)/meme_p-seed_diffs.Po"; else rm -f "$(DEPDIR)/meme_p-seed_diffs.Tpo"; exit 1; fi
#	source='../seed_diffs.c' object='meme_p-seed_diffs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seed_diffs.obj `if test -f '../seed_diffs.c'; then $(CYGPATH_W) '../seed_diffs.c'; else $(CYGPATH_W) '$(srcdir)/../seed_diffs.c'; fi`

meme_p-seq2theta.o: ../seq2theta.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seq2theta.o -MD -MP -MF "$(DEPDIR)/meme_p-seq2theta.Tpo" -c -o meme_p-seq2theta.o `test -f '../seq2theta.c' || echo '$(srcdir)/'`../seq2theta.c; \
	then mv -f "$(DEPDIR)/meme_p-seq2theta.Tpo" "$(DEPDIR)/meme_p-seq2theta.Po"; else rm -f "$(DEPDIR)/meme_p-seq2theta.Tpo"; exit 1; fi
#	source='../seq2theta.c' object='meme_p-seq2theta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seq2theta.o `test -f '../seq2theta.c' || echo '$(srcdir)/'`../seq2theta.c

meme_p-seq2theta.obj: ../seq2theta.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-seq2theta.obj -MD -MP -MF "$(DEPDIR)/meme_p-seq2theta.Tpo" -c -o meme_p-seq2theta.obj `if test -f '../seq2theta.c'; then $(CYGPATH_W) '../seq2theta.c'; else $(CYGPATH_W) '$(srcdir)/../seq2theta.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-seq2theta.Tpo" "$(DEPDIR)/meme_p-seq2theta.Po"; else rm -f "$(DEPDIR)/meme_p-seq2theta.Tpo"; exit 1; fi
#	source='../seq2theta.c' object='meme_p-seq2theta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-seq2theta.obj `if test -f '../seq2theta.c'; then $(CYGPATH_W) '../seq2theta.c'; else $(CYGPATH_W) '$(srcdir)/../seq2theta.c'; fi`

meme_p-sp_matrix.o: ../sp_matrix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-sp_matrix.o -MD -MP -MF "$(DEPDIR)/meme_p-sp_matrix.Tpo" -c -o meme_p-sp_matrix.o `test -f '../sp_matrix.c' || echo '$(srcdir)/'`../sp_matrix.c; \
	then mv -f "$(DEPDIR)/meme_p-sp_matrix.Tpo" "$(DEPDIR)/meme_p-sp_matrix.Po"; else rm -f "$(DEPDIR)/meme_p-sp_matrix.Tpo"; exit 1; fi
#	source='../sp_matrix.c' object='meme_p-sp_matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-sp_matrix.o `test -f '../sp_matrix.c' || echo '$(srcdir)/'`../sp_matrix.c

meme_p-sp_matrix.obj: ../sp_matrix.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-sp_matrix.obj -MD -MP -MF "$(DEPDIR)/meme_p-sp_matrix.Tpo" -c -o meme_p-sp_matrix.obj `if test -f '../sp_matrix.c'; then $(CYGPATH_W) '../sp_matrix.c'; else $(CYGPATH_W) '$(srcdir)/../sp_matrix.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-sp_matrix.Tpo" "$(DEPDIR)/meme_p-sp_matrix.Po"; else rm -f "$(DEPDIR)/meme_p-sp_matrix.Tpo"; exit 1; fi
#	source='../sp_matrix.c' object='meme_p-sp_matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-sp_matrix.obj `if test -f '../sp_matrix.c'; then $(CYGPATH_W) '../sp_matrix.c'; else $(CYGPATH_W) '$(srcdir)/../sp_matrix.c'; fi`

meme_p-starts.o: ../starts.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-starts.o -MD -MP -MF "$(DEPDIR)/meme_p-starts.Tpo" -c -o meme_p-starts.o `test -f '../starts.c' || echo '$(srcdir)/'`../starts.c; \
	then mv -f "$(DEPDIR)/meme_p-starts.Tpo" "$(DEPDIR)/meme_p-starts.Po"; else rm -f "$(DEPDIR)/meme_p-starts.Tpo"; exit 1; fi
#	source='../starts.c' object='meme_p-starts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-starts.o `test -f '../starts.c' || echo '$(srcdir)/'`../starts.c

meme_p-starts.obj: ../starts.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-starts.obj -MD -MP -MF "$(DEPDIR)/meme_p-starts.Tpo" -c -o meme_p-starts.obj `if test -f '../starts.c'; then $(CYGPATH_W) '../starts.c'; else $(CYGPATH_W) '$(srcdir)/../starts.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-starts.Tpo" "$(DEPDIR)/meme_p-starts.Po"; else rm -f "$(DEPDIR)/meme_p-starts.Tpo"; exit 1; fi
#	source='../starts.c' object='meme_p-starts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-starts.obj `if test -f '../starts.c'; then $(CYGPATH_W) '../starts.c'; else $(CYGPATH_W) '$(srcdir)/../starts.c'; fi`

meme_p-subseq7.o: ../subseq7.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-subseq7.o -MD -MP -MF "$(DEPDIR)/meme_p-subseq7.Tpo" -c -o meme_p-subseq7.o `test -f '../subseq7.c' || echo '$(srcdir)/'`../subseq7.c; \
	then mv -f "$(DEPDIR)/meme_p-subseq7.Tpo" "$(DEPDIR)/meme_p-subseq7.Po"; else rm -f "$(DEPDIR)/meme_p-subseq7.Tpo"; exit 1; fi
#	source='../subseq7.c' object='meme_p-subseq7.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-subseq7.o `test -f '../subseq7.c' || echo '$(srcdir)/'`../subseq7.c

meme_p-subseq7.obj: ../subseq7.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-subseq7.obj -MD -MP -MF "$(DEPDIR)/meme_p-subseq7.Tpo" -c -o meme_p-subseq7.obj `if test -f '../subseq7.c'; then $(CYGPATH_W) '../subseq7.c'; else $(CYGPATH_W) '$(srcdir)/../subseq7.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-subseq7.Tpo" "$(DEPDIR)/meme_p-subseq7.Po"; else rm -f "$(DEPDIR)/meme_p-subseq7.Tpo"; exit 1; fi
#	source='../subseq7.c' object='meme_p-subseq7.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-subseq7.obj `if test -f '../subseq7.c'; then $(CYGPATH_W) '../subseq7.c'; else $(CYGPATH_W) '$(srcdir)/../subseq7.c'; fi`

meme_p-tcm.o: ../tcm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-tcm.o -MD -MP -MF "$(DEPDIR)/meme_p-tcm.Tpo" -c -o meme_p-tcm.o `test -f '../tcm.c' || echo '$(srcdir)/'`../tcm.c; \
	then mv -f "$(DEPDIR)/meme_p-tcm.Tpo" "$(DEPDIR)/meme_p-tcm.Po"; else rm -f "$(DEPDIR)/meme_p-tcm.Tpo"; exit 1; fi
#	source='../tcm.c' object='meme_p-tcm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-tcm.o `test -f '../tcm.c' || echo '$(srcdir)/'`../tcm.c

meme_p-tcm.obj: ../tcm.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-tcm.obj -MD -MP -MF "$(DEPDIR)/meme_p-tcm.Tpo" -c -o meme_p-tcm.obj `if test -f '../tcm.c'; then $(CYGPATH_W) '../tcm.c'; else $(CYGPATH_W) '$(srcdir)/../tcm.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-tcm.Tpo" "$(DEPDIR)/meme_p-tcm.Po"; else rm -f "$(DEPDIR)/meme_p-tcm.Tpo"; exit 1; fi
#	source='../tcm.c' object='meme_p-tcm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-tcm.obj `if test -f '../tcm.c'; then $(CYGPATH_W) '../tcm.c'; else $(CYGPATH_W) '$(srcdir)/../tcm.c'; fi`

meme_p-verbosity.o: ../verbosity.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-verbosity.o -MD -MP -MF "$(DEPDIR)/meme_p-verbosity.Tpo" -c -o meme_p-verbosity.o `test -f '../verbosity.c' || echo '$(srcdir)/'`../verbosity.c; \
	then mv -f "$(DEPDIR)/meme_p-verbosity.Tpo" "$(DEPDIR)/meme_p-verbosity.Po"; else rm -f "$(DEPDIR)/meme_p-verbosity.Tpo"; exit 1; fi
#	source='../verbosity.c' object='meme_p-verbosity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-verbosity.o `test -f '../verbosity.c' || echo '$(srcdir)/'`../verbosity.c

meme_p-verbosity.obj: ../verbosity.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -MT meme_p-verbosity.obj -MD -MP -MF "$(DEPDIR)/meme_p-verbosity.Tpo" -c -o meme_p-verbosity.obj `if test -f '../verbosity.c'; then $(CYGPATH_W) '../verbosity.c'; else $(CYGPATH_W) '$(srcdir)/../verbosity.c'; fi`; \
	then mv -f "$(DEPDIR)/meme_p-verbosity.Tpo" "$(DEPDIR)/meme_p-verbosity.Po"; else rm -f "$(DEPDIR)/meme_p-verbosity.Tpo"; exit 1; fi
#	source='../verbosity.c' object='meme_p-verbosity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(meme_p_CFLAGS) $(CFLAGS) -c -o meme_p-verbosity.obj `if test -f '../verbosity.c'; then $(CYGPATH_W) '../verbosity.c'; else $(CYGPATH_W) '$(srcdir)/../verbosity.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
