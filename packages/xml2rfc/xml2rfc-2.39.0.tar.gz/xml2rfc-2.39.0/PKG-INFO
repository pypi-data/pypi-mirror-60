Metadata-Version: 1.2
Name: xml2rfc
Version: 2.39.0
Summary: Xml2rfc generates RFCs and IETF drafts from document source in XML according to the IETF xml2rfc v2 and v3 vocabularies.
Home-page: https://tools.ietf.org/tools/xml2rfc/trac/
Author: Henrik Levkowetz, Josh Bothun
Author-email: tools-discuss@ietf.org
Maintainer: Henrik Levkowetz
Maintainer-email: henrik@levkowetz.com
License: BSD-3-Clause
Download-URL: https://pypi.python.org/pypi/xml2rfc
Description: Introduction
        ============
        
        The IETF_ uses a specific format for the standards and other documents it
        publishes as RFCs_, and for the draft documents which are produced when
        developing documents for publications.  There exists a number of different
        tools to facilitate the formatting of drafts and RFCs according to the
        existing rules, and this tool, **xml2rfc**, is one of them.  It takes as input
        an xml file which contains the text and meta-information about author names
        etc., and transforms it into suitably formatted output.  The input xml file
        should follow the grammars in RFC7749_ (for v2 documents) or RFC7991_ (for 
        v3 documents). Note that the grammar for v3 is still being refined, and 
        changes will eventually be captured in the `bis draft for 7991`_. 
        Changes not yet captured can be seen in the xml2rfc source `v3.rng`_.
        
        **xml2rfc** provides a variety of output formats. See the command line
        help for a full list of formats. It also provides conversion from v2 to
        v3, and can run the preptool_ on its input.
        
        .. _IETF: https://www.ietf.org/
        .. _RFCs: https://www.rfc-editor.org/
        .. _RFC7749: https://tools.ietf.org/html/rfc7749
        .. _RFC7991: https://tools.ietf.org/html/rfc7991
        .. _bis draft for 7991: https://tools.ietf.org/html/draft-iab-rfc7991bis
        .. _v3.rng: https://trac.tools.ietf.org/tools/xml2rfc/trac/browser/trunk/cli/xml2rfc/data/v3.rng
        .. _preptool: https://tools.ietf.org/html/rfc7998
        
        Installation
        ============
        
        Installation of the python package is done as usual with 'pip install xml2rfc',
        using appropriate switches and/or sudo.
        
        Installation of support libraries for the PDF-formatter
        -------------------------------------------------------
        
        In order to generate PDFs, xml2rfc uses the WeasyPrint module, which
        depends on external libaries that must be installed as native packages
        on your platform, separately from the xml2rfc install.
        
        First, install the Cairo, Pango, and GDK-PixBuf library files on your
        system.  See installation instructions on the WeasyPrint Docs:
        
            https://weasyprint.readthedocs.io/en/stable/install.html
        
        (Python 3 is not needed if your system Python is 2.7, though).
        
        (On some OS X systems with System Integrity Protection active, you may
        need to create a symlink from your home directory to the library installation
        directory (often /opt/local/lib):
        
            ln -s /opt/local/lib ~/lib
        
        in order for weasyprint to find the installed cairo and pango libraries.
        Whether this is needed or not depends on whether you used macports or homebrew
        to install cairo and pango, and the homebrew / macport version.)
        
        Next, install the pycairo and weasyprint python modules using pip.
        Depending on your system, you may need to use 'sudo' or install in
        user-specific directories, using the --user switch.  On OS X in
        particular, you may also need to install a newer version of setuptools
        using --user before weasyprint can be installed.  If you install with 
        the --user switch, you may need to also set PYTHONPATH, e.g.,
        
            PYTHONPATH=/Users/henrik/Library/Python/2.7/lib/python/site-packages
        
        for Python 2.7.
        
        The basic pip commands (modify as needed according to the text above)
        are:
        
            pip install 'pycairo>=1.18' 'weasyprint<=0.42.3'
        
        With these installed and available to xml2rfc, the --pdf switch will be
        enabled.
        
        For PDF output, you also need to install the Noto font set.  Download the full
        set from https://noto-website-2.storage.googleapis.com/pkgs/Noto-unhinted.zip,
        and install as appropriate for your platform.
        
        Usage
        =====
        
        xml2rfc accepts a single XML document as input and outputs to one or more conversion formats.
        
        **Basic Usage**: ``xml2rfc SOURCE [options] FORMATS...``
        
        Run ``xml2rfc --help`` for a full listing of command-line options.
        
        
        Changelog
        =========
        
        
        Version 2.39.0 (31 Jan 2020)
        ------------------------------------------------
        
        
        
          * Provided a rendering for <xref> with reference targets which are part of 
            a <referencegroup> and don't have a reference tag.
        
          * Added a --pdf-help command-like option, and tweaked the order of some 
            command-line options in the --help output.
        
          * Added a new filter for pdf-gneration library warnings, to avoid it 
            appearing on every xml2rfc invocation.
        
          * Added a v2v3 converter for dates with non-numeric years.
        
          * Added an error for attempting to insert a missing XInclude namespace 
            prefix when 'xi' is already defined as something else.
        
          * Fixed a bug introduced with the refactoring in [3438].
        
        
        
        
        
        
        
        Version 2.38.2 (27 Jan 2020)
        ------------------------------------------------
        
        
        
          * Provided a rendering for <xref> with reference targets which are part
            of a <referencegroup> and don't have a reference tag.
        
          * Added a --pdf-help command-line option, and tweaked the order of some
            command-line options in the --help output.
        
          * Added a new filter for pdf-gneration library warnings, to avoid it 
            appearing on every xml2rfc invocation.
        
          * Added a v2v3 converter for dates with non-numeric years.
        
          * Added an error for attempting to insert a missing XInclude namespace 
            prefix when 'xi' is already defined as something else.
        
          * Fixed a bug introduced with the refactoring in [3438].
        
        
        
        
        
        
        
        Version 2.38.1 (20 Jan 2020)
        ------------------------------------------------
        
        
          * Added a preptool check for numbered sections occurring after or under
            unnumbered sections, and changed the code for Reference sections to
            not emit section numbers if the previous section was unnumbered.  
            Fixes issue #433
        
          * Refactored the code for reference anchor to display string mapping,
            locating it in a base class method.  Updated it to honour the symRefs
            setting.  Fixes issue #476.
        
          * Added installation of Python 3.8 to Dockerfile, and updated the minor
            version numbers for the other Python installation stanzas.
        
          * Fixed a problem rendering multiple authors with organization 
            showOnFrontPage='false'.  Further addresses issue #483.
        
          * Added a switch --no-external-js, and some other --no-* switches to 
            invert boolean settings.  Fixes issue #486.
        
          * Added an early return from cache() when repeated attempts to fetch an 
            URL fails.
        
        
        
        
        
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python
Classifier: Topic :: Text Processing
Classifier: Topic :: Text Processing :: Markup :: XML
Classifier: License :: OSI Approved :: BSD License
