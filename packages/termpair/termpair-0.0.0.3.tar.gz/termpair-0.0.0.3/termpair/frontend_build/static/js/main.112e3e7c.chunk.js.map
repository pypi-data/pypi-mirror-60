{"version":3,"sources":["logo.png","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Led","props","react_default","a","createElement","className","concat","color","text","BottomBar","id","href","TopBar","height","src","logo","alt","StatusBar","status","allow_browser_control","num_clients","moment","broadcast_start_time_iso","format","Terminal","ref","terminalEl","TerminalIdEntry","_useState","useState","_useState2","Object","slicedToArray","setId","value","onChange","event","target","onKeyDown","keyCode","window","location","onClick","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","rows","cols","terminal_id","term","Xterm","cursorBlink","macOptionIsMeta","scrollback","React","createRef","resize","style","display","flexDirection","assign","App_Terminal","_this2","open","document","getElementById","writeln","setState","ws_protocol","protocol","socket","WebSocket","hostname","port","on","key","ev","send","addEventListener","data","JSON","parse","write","atob","payload","clearTimeout","resizeTimeout","setTimeout","console","error","Component","ReactDOM","render","src_App_0","initial_data"],"mappings":"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","file":"static/js/main.112e3e7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.74cdedb8.png\";","import React, { Component, useState } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.png\"; // logomakr.com/4N54oK\nimport { Terminal as Xterm } from \"xterm\";\nimport moment from \"moment\";\n\nfunction Led(props) {\n  return (\n    <div className=\"flexnowrap\">\n      <div className={`led led-${props.color}`} />\n      <div>{props.text}</div>\n    </div>\n  );\n}\n\nfunction BottomBar() {\n  return (\n    <div id=\"bottom\">\n      <div>\n        A <a href=\"https://grassfedcode.com\">Chad Smith</a> project\n      </div>\n      <div>\n        <a href=\"https://github.com/cs01\">GitHub</a>\n      </div>\n      <div>\n        <a href=\"https://twitter.com/grassfedcode\">Twitter</a>\n      </div>\n    </div>\n  );\n}\nfunction TopBar(props) {\n  return (\n    <div id=\"top\">\n      <a href=\"https://github.com/cs01/termpair\">\n        <img height=\"30px\" src={logo} alt=\"logo\" />\n      </a>\n    </div>\n  );\n}\nfunction StatusBar(props) {\n  return (\n    <div id=\"statusbar\">\n      {\" \"}\n      <div>\n        {props.status === \"connected\" ? (\n          <Led color=\"green\" text={props.status} />\n        ) : (\n          <Led color=\"red\" text={props.status} />\n        )}\n      </div>\n      <div>\n        {props.allow_browser_control ? (\n          <Led color=\"green\" text=\"can type\" />\n        ) : (\n          <Led color=\"orange\" text=\"cannot type\" />\n        )}\n      </div>\n      <div>{props.num_clients ? props.num_clients : \"0\"} Connected Clients</div>\n      <div>\n        Started at{\" \"}\n        {moment(props.broadcast_start_time_iso).format(\n          \"h:mm:ss a on MMM Do YYYY\"\n        )}\n      </div>\n    </div>\n  );\n}\nfunction Terminal(props) {\n  return <div id=\"terminal\" className={props.status} ref={props.terminalEl} />;\n}\n\nfunction TerminalIdEntry(props) {\n  const [id, setId] = useState(\"\");\n  return (\n    <div id=\"terminal-entry\">\n      Enter terminal id\n      <input\n        value={id}\n        onChange={event => {\n          setId(event.target.value);\n        }}\n        onKeyDown={event => {\n          if (event.keyCode === 13) {\n            window.location = `?terminal_id=${id}`;\n          }\n        }}\n      />\n      <button onClick={() => (window.location = `?terminal_id=${id}`)}>\n        Connect\n      </button>\n      <p>\n        To view or broadcast a terminal, see instructions at{\" \"}\n        <a href=\"https://github.com/cs01/termpair\">\n          https://github.com/cs01/termpair\n        </a>\n      </p>\n    </div>\n  );\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rows: this.props.rows || 20,\n      cols: this.props.cols || 60,\n      status: \"connection-pending\",\n      num_clients: this.props.num_clients,\n      terminal_id: this.props.terminal_id\n    };\n    this.term = new Xterm({\n      cursorBlink: true,\n      macOptionIsMeta: true,\n      scrollback: 1000\n    });\n    this.terminalEl = React.createRef();\n    this.term.resize(this.state.cols, this.state.rows);\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <TopBar {...this.props} {...this.state} />\n        {this.state.terminal_id ? (\n          <Terminal {...this.props} terminalEl={this.terminalEl} />\n        ) : (\n          <TerminalIdEntry />\n        )}\n\n        <StatusBar {...this.props} {...this.state} />\n        <BottomBar />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    if (!this.state.terminal_id) {\n      return;\n    }\n    const term = this.term;\n\n    term.open(document.getElementById(\"terminal\"));\n    term.writeln(`Welcome to TermPair!`);\n    term.writeln(\"https://github.com/cs01/termpair\");\n    if (!this.state.terminal_id) {\n      term.writeln(\"\");\n      term.writeln(\"A valid terminal id was not provided.\");\n      term.writeln(\"To view or broadcast a terminal, see instructions at\");\n      term.writeln(\"https://github.com/cs01/termpair\");\n      this.setState({ status: \"disconnected\" });\n      return;\n    }\n    term.writeln(\"Connecting to terminal...\");\n    const ws_protocol = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n    const socket = new WebSocket(\n      `${ws_protocol}://${window.location.hostname}:${window.location.port}/connect_browser_to_terminal?terminal_id=${this.state.terminal_id}`\n    );\n\n    term.on(\"key\", (key, ev) => {\n      socket.send(key);\n    });\n    socket.addEventListener(\"open\", event => {\n      this.setState({ status: \"connected\" });\n      term.writeln(\"Connection established\");\n    });\n\n    socket.addEventListener(\"close\", event => {\n      this.setState({ status: \"disconnected\" });\n      term.writeln(\"Connection ended\");\n      this.setState({ num_clients: 0, terminal_id: null });\n    });\n\n    socket.addEventListener(\"message\", event => {\n      const data = JSON.parse(event.data);\n      if (data.event === \"new_output\") {\n        term.write(atob(data.payload));\n      } else if (data.event === \"resize\") {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n          this.term.resize(data.payload.cols, data.payload.rows);\n          this.setState({ rows: data.payload.rows, cols: data.payload.cols });\n        }, 500);\n      } else if (data.event === \"num_clients\") {\n        this.setState({ num_clients: data.payload });\n      } else {\n        console.error(\"unknown event type\", data);\n      }\n    });\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App {...window.initial_data} />, document.getElementById('root'));\n\n"],"sourceRoot":""}