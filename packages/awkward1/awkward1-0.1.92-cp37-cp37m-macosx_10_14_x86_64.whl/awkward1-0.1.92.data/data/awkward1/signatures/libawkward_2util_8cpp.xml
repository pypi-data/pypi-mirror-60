<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="libawkward_2util_8cpp" kind="file" language="C++">
    <compoundname>util.cpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">sstream</includes>
    <includes local="no">set</includes>
    <includes local="yes">rapidjson/document.h</includes>
    <includes local="yes">awkward/cpu-kernels/identities.h</includes>
    <includes local="yes">awkward/cpu-kernels/getitem.h</includes>
    <includes local="yes">awkward/cpu-kernels/operations.h</includes>
    <includes local="yes">awkward/util.h</includes>
    <includes local="yes">awkward/Identities.h</includes>
    <incdepgraph>
      <node id="8">
        <label>awkward/cpu-kernels/operations.h</label>
      </node>
      <node id="1">
        <label>src/libawkward/util.cpp</label>
        <link refid="libawkward_2util_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>awkward/util.h</label>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="7">
        <label>awkward/cpu-kernels/getitem.h</label>
      </node>
      <node id="5">
        <label>rapidjson/document.h</label>
      </node>
      <node id="6">
        <label>awkward/cpu-kernels/identities.h</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>awkward/Identities.h</label>
      </node>
      <node id="4">
        <label>set</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceawkward">awkward</innernamespace>
    <innernamespace refid="namespaceawkward_1_1util">awkward::util</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceawkward_1_1util_1a59e9e406e10c16cbe5a43e297fac511d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; RecordLookup &gt;</type>
        <definition>std::shared_ptr&lt;RecordLookup&gt; awkward::util::init_recordlookup</definition>
        <argsstring>(int64_t numfields)</argsstring>
        <name>init_recordlookup</name>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="20" column="21" bodyfile="src/libawkward/util.cpp" bodystart="20" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a60c549ed8a8040819b34954813813fe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t awkward::util::fieldindex</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>fieldindex</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="28" column="13" bodyfile="src/libawkward/util.cpp" bodystart="28" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a96d7483cb27ab5c1a85412fa5348528d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string</type>
        <definition>const std::string awkward::util::key</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t fieldindex, int64_t numfields)</argsstring>
        <name>key</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fieldindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="52" column="23" bodyfile="src/libawkward/util.cpp" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7edf467c33f32026419e65ef0b80e712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::haskey</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, const std::string &amp;key, int64_t numfields)</argsstring>
        <name>haskey</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="64" column="10" bodyfile="src/libawkward/util.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5a6b04fdbf7f630a775ec95c968a12d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt;</type>
        <definition>const std::vector&lt;std::string&gt; awkward::util::keys</definition>
        <argsstring>(const std::shared_ptr&lt; RecordLookup &gt; &amp;recordlookup, int64_t numfields)</argsstring>
        <name>keys</name>
        <param>
          <type>const std::shared_ptr&lt; RecordLookup &gt; &amp;</type>
          <declname>recordlookup</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>numfields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="74" column="23" bodyfile="src/libawkward/util.cpp" bodystart="74" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad26802b2772a48bb0589859e3c138100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameter_equals</definition>
        <argsstring>(const Parameters &amp;parameters, const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>parameter_equals</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="88" column="10" bodyfile="src/libawkward/util.cpp" bodystart="88" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa515755f3ae5039f0e9ea330e823ac37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::parameters_equal</definition>
        <argsstring>(const Parameters &amp;self, const Parameters &amp;other)</argsstring>
        <name>parameters_equal</name>
        <param>
          <type>const Parameters &amp;</type>
          <declname>self</declname>
        </param>
        <param>
          <type>const Parameters &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="104" column="10" bodyfile="src/libawkward/util.cpp" bodystart="104" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0c0ee9730e162bb57e17694a503dafa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void awkward::util::handle_error</definition>
        <argsstring>(const struct Error &amp;err, const std::string &amp;classname, const Identities *identities)</argsstring>
        <name>handle_error</name>
        <param>
          <type>const struct Error &amp;</type>
          <declname>err</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>classname</declname>
        </param>
        <param>
          <type>const Identities *</type>
          <declname>identities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="122" column="10" bodyfile="src/libawkward/util.cpp" bodystart="122" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a945d62c19d05d0598581fbae333c8fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string awkward::util::quote</definition>
        <argsstring>(const std::string &amp;x, bool doublequote)</argsstring>
        <name>quote</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>doublequote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="143" column="17" bodyfile="src/libawkward/util.cpp" bodystart="143" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a615ff48b62091268459c1c8b3a65bc45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool awkward::util::subset</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;super, const std::vector&lt; std::string &gt; &amp;sub)</argsstring>
        <name>subset</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>super</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>sub</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="153" column="10" bodyfile="src/libawkward/util.cpp" bodystart="153" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad4352d8063234b998dd37ce07ef7f2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const int32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="173" column="5" bodyfile="src/libawkward/util.cpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1a1ba05a1b4bda3c2b732f28e49f206d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="177" column="5" bodyfile="src/libawkward/util.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5a353297f9bab69daf3bbbe1593e4821" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int32_t *toptr, const int32_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="181" column="5" bodyfile="src/libawkward/util.cpp" bodystart="181" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac342ae0d10448aa6aa21ba1e0b2c3960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="185" column="5" bodyfile="src/libawkward/util.cpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cbb19ed4389f759b25ecc694448ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const uint32_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="189" column="5" bodyfile="src/libawkward/util.cpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a73949ff843b38ba437f19732c876ca24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toptr, const int64_t *fromptr, const int64_t *fromoffsets, int64_t fromptroffset, int64_t offsetsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listoffsetarray&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="193" column="5" bodyfile="src/libawkward/util.cpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aadcb21355a633d3087042a614f32538a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int32_t *fromstarts, const int32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="198" column="5" bodyfile="src/libawkward/util.cpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9a50f10c8940b929bbeba55461eab257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="202" column="5" bodyfile="src/libawkward/util.cpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9e616b5afd79e85c54a00141e2763ea2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="206" column="5" bodyfile="src/libawkward/util.cpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a80843bccda3bca0ea11164d69118ef16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int32_t *fromstarts, const int32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="210" column="5" bodyfile="src/libawkward/util.cpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9a0312f5cb1b37672e5bb0c955974013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="214" column="5" bodyfile="src/libawkward/util.cpp" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8ca51f647e9acc326b8ce3fdd3c7743d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_listarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int64_t *fromstarts, const int64_t *fromstops, int64_t fromptroffset, int64_t startsoffset, int64_t stopsoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_listarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="218" column="5" bodyfile="src/libawkward/util.cpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a301f2ab2068ab5309d9588a471558898" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="223" column="5" bodyfile="src/libawkward/util.cpp" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9d3c35ba5e99e89bb853df7db5cd60db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const uint32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="227" column="5" bodyfile="src/libawkward/util.cpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a37e0b3df6f007f51ad9d5d3c3ac1c809" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_indexedarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int64_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities32_from_indexedarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="231" column="5" bodyfile="src/libawkward/util.cpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6c4572cfdb8c86623b7df41102582725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="235" column="5" bodyfile="src/libawkward/util.cpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a59083eaa2076a08a1a3b964e3989b073" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const uint32_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="239" column="5" bodyfile="src/libawkward/util.cpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1d4645612b557477e677d18e8638aa58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_indexedarray&lt; int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int64_t *fromindex, int64_t fromptroffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth)</argsstring>
        <name>awkward_identities64_from_indexedarray&lt; int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="243" column="5" bodyfile="src/libawkward/util.cpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace78203a25d8ea01e7b51d1ce8f5e398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const int32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="248" column="5" bodyfile="src/libawkward/util.cpp" bodystart="248" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27f63d4d502e0432a853dafdda1854a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const uint32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="252" column="5" bodyfile="src/libawkward/util.cpp" bodystart="252" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1a7c85bba1be2be21f0976320d1a6d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities32_from_unionarray&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int32_t *toptr, const int32_t *fromptr, const int8_t *fromtags, const int64_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities32_from_unionarray&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="256" column="5" bodyfile="src/libawkward/util.cpp" bodystart="256" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9936932cc23fde48414d1fa5e852999c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const int32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="260" column="5" bodyfile="src/libawkward/util.cpp" bodystart="260" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8eae722354b1eeeaffa978d3f9328130" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const uint32_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="264" column="5" bodyfile="src/libawkward/util.cpp" bodystart="264" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a502b331472d3e5de5f47f2009c3cf98c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_identities64_from_unionarray&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(bool *uniquecontents, int64_t *toptr, const int64_t *fromptr, const int8_t *fromtags, const int64_t *fromindex, int64_t fromptroffset, int64_t tagsoffset, int64_t indexoffset, int64_t tolength, int64_t fromlength, int64_t fromwidth, int64_t which)</argsstring>
        <name>awkward_identities64_from_unionarray&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>bool *</type>
          <declname>uniquecontents</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toptr</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromptr</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromptroffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tolength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromlength</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromwidth</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="268" column="5" bodyfile="src/libawkward/util.cpp" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7adf29c144a4937aa86d3f2df3ef1303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int8_t &gt;</definition>
        <argsstring>(int8_t *toindex, const int8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int8_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="273" column="5" bodyfile="src/libawkward/util.cpp" bodystart="273" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af996a1de65ada59617c3e40c605dccbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t *toindex, const uint8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="277" column="5" bodyfile="src/libawkward/util.cpp" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad4ac227748eacbe86016709c46a75047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="281" column="5" bodyfile="src/libawkward/util.cpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a44d00220c2f008c7d12b73880478b433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="285" column="5" bodyfile="src/libawkward/util.cpp" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7a95e10f3bba319da8344c267d4866ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t lenfromindex, int64_t length)</argsstring>
        <name>awkward_index_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenfromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="289" column="5" bodyfile="src/libawkward/util.cpp" bodystart="289" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0ee880e5bee52f8b3166b33e87e17c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int8_t &gt;</definition>
        <argsstring>(int8_t *toindex, const int8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int8_t &gt;</name>
        <param>
          <type>int8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="294" column="5" bodyfile="src/libawkward/util.cpp" bodystart="294" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a7d628f1149fc5ac5f5e25779e887350a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; uint8_t &gt;</definition>
        <argsstring>(uint8_t *toindex, const uint8_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; uint8_t &gt;</name>
        <param>
          <type>uint8_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="298" column="5" bodyfile="src/libawkward/util.cpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a07c08bbda9b809f0e4238e45e14053b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="302" column="5" bodyfile="src/libawkward/util.cpp" bodystart="302" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a63a1979429cd3d992c4d2a13517b3c61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="306" column="5" bodyfile="src/libawkward/util.cpp" bodystart="306" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a19b580ec6db4d848eae16e799e408c15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_index_carry_nocheck_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *carry, int64_t fromindexoffset, int64_t length)</argsstring>
        <name>awkward_index_carry_nocheck_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>carry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fromindexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="310" column="5" bodyfile="src/libawkward/util.cpp" bodystart="310" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35cdf735524b577a33696b6dfbe507c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="315" column="5" bodyfile="src/libawkward/util.cpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a332e036036f0a2a7b6ae1ccbd5fb9328" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="319" column="5" bodyfile="src/libawkward/util.cpp" bodystart="319" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a6669b4753da68138261314266664870f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t at)</argsstring>
        <name>awkward_listarray_getitem_next_at_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="323" column="5" bodyfile="src/libawkward/util.cpp" bodystart="323" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af6d5697f061dd5b2bc6d6371fab63406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="328" column="5" bodyfile="src/libawkward/util.cpp" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5994a80cfed68d5ca9a74ec77532eec6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="332" column="5" bodyfile="src/libawkward/util.cpp" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab91ff6d314c26700c4e4130b6ab4e6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *carrylength, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_carrylength&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>carrylength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="336" column="5" bodyfile="src/libawkward/util.cpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ace2f8fb19c1c5895a11057e5f06ba44a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tooffsets, int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="341" column="5" bodyfile="src/libawkward/util.cpp" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a35f040e2474502f3ebcd72814d81697d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tooffsets, int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="345" column="5" bodyfile="src/libawkward/util.cpp" bodystart="345" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a27301acf05d62d2cddc63402f113186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tooffsets, int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset, int64_t start, int64_t stop, int64_t step)</argsstring>
        <name>awkward_listarray_getitem_next_range_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>start</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stop</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="349" column="5" bodyfile="src/libawkward/util.cpp" bodystart="349" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a821d22c5eb2612a50ccd25fad385d50c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *total, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="354" column="5" bodyfile="src/libawkward/util.cpp" bodystart="354" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab7818ea817b037e54c287c5e6209e8a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *total, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="358" column="5" bodyfile="src/libawkward/util.cpp" bodystart="358" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad129226cfdbe60197ecfef8bb310799d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *total, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_counts_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>total</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="362" column="5" bodyfile="src/libawkward/util.cpp" bodystart="362" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a24d53416cb24aeef4b57ca3b206006f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="367" column="5" bodyfile="src/libawkward/util.cpp" bodystart="367" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab0ff064b87b541a65ddcba92a1b2292e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const uint32_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="371" column="5" bodyfile="src/libawkward/util.cpp" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a55f52d86ee9c4cc0959c9d5123830143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toadvanced, const int64_t *fromadvanced, const int64_t *fromoffsets, int64_t lenstarts)</argsstring>
        <name>awkward_listarray_getitem_next_range_spreadadvanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="375" column="5" bodyfile="src/libawkward/util.cpp" bodystart="375" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4bc0f3e2a70ded4d83275a82befbf25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="380" column="5" bodyfile="src/libawkward/util.cpp" bodystart="380" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5ed659284b8769b5f1a86c4f80b3d91a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="384" column="5" bodyfile="src/libawkward/util.cpp" bodystart="384" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1e4359f0b4b6cd14f0c3655abc01efa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="388" column="5" bodyfile="src/libawkward/util.cpp" bodystart="388" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3c9079e2d6d2eff270b7df911801b07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="393" column="5" bodyfile="src/libawkward/util.cpp" bodystart="393" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a5ce7851259ae74844da07ed068ab7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="397" column="5" bodyfile="src/libawkward/util.cpp" bodystart="397" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a3853c79e8dfd566edb8c1c2affc70934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toadvanced, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromarray, const int64_t *fromadvanced, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lenarray, int64_t lencontent)</argsstring>
        <name>awkward_listarray_getitem_next_array_advanced_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toadvanced</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromarray</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromadvanced</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenarray</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="401" column="5" bodyfile="src/libawkward/util.cpp" bodystart="401" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a56c8f0daa473f11d34e367c7f6d7100e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tostarts, int32_t *tostops, const int32_t *fromstarts, const int32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="406" column="5" bodyfile="src/libawkward/util.cpp" bodystart="406" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab998cec0a24c51454bdf93e04ee173a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tostarts, uint32_t *tostops, const uint32_t *fromstarts, const uint32_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="410" column="5" bodyfile="src/libawkward/util.cpp" bodystart="410" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a02e137f16fe72a0671a42b43cc5bb543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tostarts, int64_t *tostops, const int64_t *fromstarts, const int64_t *fromstops, const int64_t *fromcarry, int64_t startsoffset, int64_t stopsoffset, int64_t lenstarts, int64_t lencarry)</argsstring>
        <name>awkward_listarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tostarts</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tostops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="414" column="5" bodyfile="src/libawkward/util.cpp" bodystart="414" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1adabbc3fd9ee2f199f2360a9abf874e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="419" column="5" bodyfile="src/libawkward/util.cpp" bodystart="419" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aad6e08abe78d74e3b42b950b0a8dd2a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="423" column="5" bodyfile="src/libawkward/util.cpp" bodystart="423" bodyend="425"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5c847326109e9069e99cdb789c7fa303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="427" column="5" bodyfile="src/libawkward/util.cpp" bodystart="427" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9999a0418c342ea8b55aee4aa991654c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="432" column="5" bodyfile="src/libawkward/util.cpp" bodystart="432" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a46d432cc0e7521b442c5fcfc4a1edf26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="436" column="5" bodyfile="src/libawkward/util.cpp" bodystart="436" bodyend="438"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a45bf853853c0cf2101311be1df2731e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_count_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_count_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="440" column="5" bodyfile="src/libawkward/util.cpp" bodystart="440" bodyend="442"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a2a273f9fb3238ffb993058f729d5217f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="445" column="5" bodyfile="src/libawkward/util.cpp" bodystart="445" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ae684ec0bd651e580283384b4d0fc0af8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const uint32_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="449" column="5" bodyfile="src/libawkward/util.cpp" bodystart="449" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0e54f351e82388b7cc08a3ba6b60655f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_count&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocount, const int64_t *contentcount, int64_t lencontent, const int64_t *fromindex, int64_t lenindex, int64_t indexoffset)</argsstring>
        <name>awkward_indexedarray_count&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocount</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>contentcount</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="453" column="5" bodyfile="src/libawkward/util.cpp" bodystart="453" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aca5f1e14100c19931238421a073e50f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="458" column="5" bodyfile="src/libawkward/util.cpp" bodystart="458" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a97be6a13ed51d9a183a853731d5fdd94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tolen, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="462" column="5" bodyfile="src/libawkward/util.cpp" bodystart="462" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a63f6ba29e4d11425f7b86dd5e58e579e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_length&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tolen, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_length&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tolen</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="466" column="5" bodyfile="src/libawkward/util.cpp" bodystart="466" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abe23cccf3145a78dd81d4fb0ac9c3207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromstarts, const int32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="471" column="5" bodyfile="src/libawkward/util.cpp" bodystart="471" bodyend="473"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac42d6252b768793e8715a97640ad3f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="475" column="5" bodyfile="src/libawkward/util.cpp" bodystart="475" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a78332e9832f380f0f193c2c69869b01e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_flatten_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromstarts, const int64_t *fromstops, int64_t lenstarts, int64_t startsoffset, int64_t stopsoffset)</argsstring>
        <name>awkward_listarray_flatten_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="479" column="5" bodyfile="src/libawkward/util.cpp" bodystart="479" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aea5171bc10a588aa86bf198071707c9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="484" column="5" bodyfile="src/libawkward/util.cpp" bodystart="484" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1af4a8629654a9d2470cd30a59c5b7c2ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="488" column="5" bodyfile="src/libawkward/util.cpp" bodystart="488" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abc67b80fe1a320fd621f6cf55bd36650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_flatten_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="492" column="5" bodyfile="src/libawkward/util.cpp" bodystart="492" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a1d56d4f9ab9c383037c991fda5370b81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="497" column="5" bodyfile="src/libawkward/util.cpp" bodystart="497" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aee4779761624416b38184d79b086fa75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *numnull, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="501" column="5" bodyfile="src/libawkward/util.cpp" bodystart="501" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ad00dafc7121e5db0300ac3402cb86ddf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_numnull&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *numnull, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex)</argsstring>
        <name>awkward_indexedarray_numnull&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>numnull</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="505" column="5" bodyfile="src/libawkward/util.cpp" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a36e85b0bbeb595c549b2aa2de24ae42a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int32_t *toindex, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="510" column="5" bodyfile="src/libawkward/util.cpp" bodystart="510" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa169949eda9e95aca7984af9535cf2a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, uint32_t *toindex, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="514" column="5" bodyfile="src/libawkward/util.cpp" bodystart="514" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1abb2590671331bab7477b8d601600f1a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, int64_t *toindex, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_outindex_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="518" column="5" bodyfile="src/libawkward/util.cpp" bodystart="518" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a99fc644fac801537e856bfbb5e0c4cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="523" column="5" bodyfile="src/libawkward/util.cpp" bodystart="523" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5600742dbc7116f452ac2b460d0c1424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const uint32_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="527" column="5" bodyfile="src/libawkward/util.cpp" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a4704aaa89fde12845d0fe9027dd8be05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromindex, int64_t indexoffset, int64_t lenindex, int64_t lencontent)</argsstring>
        <name>awkward_indexedarray_getitem_nextcarry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="531" column="5" bodyfile="src/libawkward/util.cpp" bodystart="531" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac0ef1572a678d80a83fcb5980eb344cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="536" column="5" bodyfile="src/libawkward/util.cpp" bodystart="536" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a07aa69687919af479d328c04d598a4ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const uint32_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="540" column="5" bodyfile="src/libawkward/util.cpp" bodystart="540" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a87bf82ce8f0f2d3603c836d25ea718c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int64_t *fromindex, const int64_t *fromcarry, int64_t indexoffset, int64_t lenindex, int64_t lencarry)</argsstring>
        <name>awkward_indexedarray_getitem_carry_64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromcarry</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lenindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencarry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="544" column="5" bodyfile="src/libawkward/util.cpp" bodystart="544" bodyend="546"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aea9e17bb914da8e203612bbfc4428d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_andmask_8&lt; int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int8_t *mask, int64_t maskoffset, const int32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_andmask_8&lt; int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="549" column="5" bodyfile="src/libawkward/util.cpp" bodystart="549" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a265f1f26f791ec8953df45469cc4a4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_andmask_8&lt; uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const int8_t *mask, int64_t maskoffset, const uint32_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_andmask_8&lt; uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="553" column="5" bodyfile="src/libawkward/util.cpp" bodystart="553" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a5968b78589e5f888a57fcb7e817d007d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_indexedarray_andmask_8&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *mask, int64_t maskoffset, const int64_t *fromindex, int64_t indexoffset, int64_t length)</argsstring>
        <name>awkward_indexedarray_andmask_8&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>maskoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="557" column="5" bodyfile="src/libawkward/util.cpp" bodystart="557" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac3b9777f92b6e13bd33992e6b97e2f3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int32_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="562" column="5" bodyfile="src/libawkward/util.cpp" bodystart="562" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ab870db03f58650d908b8ed888715fd19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(uint32_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>uint32_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="566" column="5" bodyfile="src/libawkward/util.cpp" bodystart="566" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a64e129867d99882e5980c349cba0b2d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_regular_index&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int64_t *toindex, const int8_t *fromtags, int64_t tagsoffset, int64_t length)</argsstring>
        <name>awkward_unionarray_regular_index&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>toindex</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="570" column="5" bodyfile="src/libawkward/util.cpp" bodystart="570" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a8dd65f3dcbf96ba8bbd6c10d33f1d300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, int32_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const int32_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="575" column="5" bodyfile="src/libawkward/util.cpp" bodystart="575" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1ac1c425e7d63a6ad035abd0187168bb57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, uint32_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const uint32_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="579" column="5" bodyfile="src/libawkward/util.cpp" bodystart="579" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa5ea37295fef6c9d842566d7ec2e54e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_unionarray_project_64&lt; int8_t, int64_t &gt;</definition>
        <argsstring>(int64_t *lenout, int64_t *tocarry, const int8_t *fromtags, int64_t tagsoffset, const int64_t *fromindex, int64_t indexoffset, int64_t length, int64_t which)</argsstring>
        <name>awkward_unionarray_project_64&lt; int8_t, int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>lenout</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>fromtags</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>tagsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromindex</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>indexoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="583" column="5" bodyfile="src/libawkward/util.cpp" bodystart="583" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a98286d30d2e0ee8d76f9e451e0760270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int32_t *fromstarts, const int32_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="588" column="11" bodyfile="src/libawkward/util.cpp" bodystart="588" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a0a69a760910f1ccbec8fb3c9d7787eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const uint32_t *fromstarts, const uint32_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="592" column="11" bodyfile="src/libawkward/util.cpp" bodystart="592" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a232ff4f26765f9c9a3ac0fb1b398eea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *fromstarts, const int64_t *fromstops, int64_t startsoffset, int64_t stopsoffset, int64_t length)</argsstring>
        <name>awkward_listarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="596" column="11" bodyfile="src/libawkward/util.cpp" bodystart="596" bodyend="598"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa81b223ffcf1323fd99e4d4d6a58f9d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int32_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="601" column="11" bodyfile="src/libawkward/util.cpp" bodystart="601" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aef109a4ffb66b1fb9c69e1bb4659b448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const uint32_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="605" column="11" bodyfile="src/libawkward/util.cpp" bodystart="605" bodyend="607"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1aa1191c09bf3e10f0fb3d3705b354915c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listoffsetarray_compact_offsets64</definition>
        <argsstring>(int64_t *tooffsets, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t length)</argsstring>
        <name>awkward_listoffsetarray_compact_offsets64</name>
        <param>
          <type>int64_t *</type>
          <declname>tooffsets</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="609" column="11" bodyfile="src/libawkward/util.cpp" bodystart="609" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a949612d5395bfa3cf67963c989ec7664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; int32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const int32_t *fromstarts, int64_t startsoffset, const int32_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; int32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="614" column="5" bodyfile="src/libawkward/util.cpp" bodystart="614" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a33a26bd5f621bc7081343a2abbe81a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; uint32_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const uint32_t *fromstarts, int64_t startsoffset, const uint32_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; uint32_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="618" column="5" bodyfile="src/libawkward/util.cpp" bodystart="618" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1_1util_1a9af3033d5ded2f5940050a45b2af1806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>Error</type>
        <definition>Error awkward::util::awkward_listarray_broadcast_tooffsets64&lt; int64_t &gt;</definition>
        <argsstring>(int64_t *tocarry, const int64_t *fromoffsets, int64_t offsetsoffset, int64_t offsetslength, const int64_t *fromstarts, int64_t startsoffset, const int64_t *fromstops, int64_t stopsoffset, int64_t lencontent)</argsstring>
        <name>awkward_listarray_broadcast_tooffsets64&lt; int64_t &gt;</name>
        <param>
          <type>int64_t *</type>
          <declname>tocarry</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromoffsets</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>offsetslength</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstarts</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>startsoffset</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>fromstops</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>stopsoffset</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>lencontent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/util.cpp" line="622" column="5" bodyfile="src/libawkward/util.cpp" bodystart="622" bodyend="624"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/libawkward/util.cpp"/>
  </compounddef>
</doxygen>
