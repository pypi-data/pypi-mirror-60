<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="ListOffsetArray_8cpp" kind="file" language="C++">
    <compoundname>ListOffsetArray.cpp</compoundname>
    <includes local="no">sstream</includes>
    <includes local="no">type_traits</includes>
    <includes local="yes">awkward/cpu-kernels/identities.h</includes>
    <includes local="yes">awkward/cpu-kernels/getitem.h</includes>
    <includes local="yes">awkward/type/ListType.h</includes>
    <includes local="yes">awkward/type/ArrayType.h</includes>
    <includes local="yes">awkward/type/UnknownType.h</includes>
    <includes local="yes">awkward/Slice.h</includes>
    <includes local="yes">awkward/array/ListArray.h</includes>
    <includes local="yes">awkward/array/RegularArray.h</includes>
    <includes local="yes">awkward/array/NumpyArray.h</includes>
    <includes local="yes">awkward/array/ListOffsetArray.h</includes>
    <incdepgraph>
      <node id="7">
        <label>awkward/type/ArrayType.h</label>
      </node>
      <node id="6">
        <label>awkward/type/ListType.h</label>
      </node>
      <node id="5">
        <label>awkward/cpu-kernels/getitem.h</label>
      </node>
      <node id="8">
        <label>awkward/type/UnknownType.h</label>
      </node>
      <node id="4">
        <label>awkward/cpu-kernels/identities.h</label>
      </node>
      <node id="11">
        <label>awkward/array/RegularArray.h</label>
      </node>
      <node id="12">
        <label>awkward/array/NumpyArray.h</label>
      </node>
      <node id="1">
        <label>src/libawkward/array/ListOffsetArray.cpp</label>
        <link refid="ListOffsetArray_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>awkward/array/ListOffsetArray.h</label>
      </node>
      <node id="2">
        <label>sstream</label>
      </node>
      <node id="10">
        <label>awkward/array/ListArray.h</label>
      </node>
      <node id="9">
        <label>awkward/Slice.h</label>
      </node>
      <node id="3">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceawkward">awkward</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceawkward_1abc7dccb4d2b3ebf70c1f9028d74ad447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>IndexOf&lt; T &gt;</type>
        <definition>IndexOf&lt;T&gt; awkward::make_starts</definition>
        <argsstring>(const IndexOf&lt; T &gt; &amp;offsets)</argsstring>
        <name>make_starts</name>
        <param>
          <type>const IndexOf&lt; T &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/array/ListOffsetArray.cpp" line="20" column="11" bodyfile="src/libawkward/array/ListOffsetArray.cpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="namespaceawkward_1aa3d73a21953e0578aa577329c38dc0ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>IndexOf&lt; T &gt;</type>
        <definition>IndexOf&lt;T&gt; awkward::make_stops</definition>
        <argsstring>(const IndexOf&lt; T &gt; &amp;offsets)</argsstring>
        <name>make_stops</name>
        <param>
          <type>const IndexOf&lt; T &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/libawkward/array/ListOffsetArray.cpp" line="25" column="11" bodyfile="src/libawkward/array/ListOffsetArray.cpp" bodystart="25" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/libawkward/array/ListOffsetArray.cpp"/>
  </compounddef>
</doxygen>
