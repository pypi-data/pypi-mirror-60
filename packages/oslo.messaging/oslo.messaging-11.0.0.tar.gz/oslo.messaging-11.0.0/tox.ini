[tox]
minversion = 3.1
envlist = py37,pep8
ignore_basepython_conflict = true

[testenv]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
passenv = OS_*
          ZUUL_CACHE_DIR
          REQUIREMENTS_PIP_LOCATION
install_command = pip install {opts} {packages}
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands = stestr run --slowest {posargs}

[testenv:pep8]
commands =
  flake8
  # run security linter
  bandit -r oslo_messaging -x tests -n5

[testenv:cover]
setenv =
    PYTHON=coverage run --source oslo_messaging --parallel-mode
commands =
  stestr run --slowest {posargs}
  coverage combine
  coverage html -d cover
  coverage report

[testenv:venv]
commands = {posargs}

[testenv:docs]
whitelist_externals = rm
deps = -r{toxinidir}/doc/requirements.txt
commands =
  rm -fr doc/build
  sphinx-build -W --keep-going -b html doc/source doc/build/html

[testenv:py36-func-rabbit]
setenv =
    {[testenv]setenv}
    TRANSPORT_DRIVER=rabbit
commands = pifpaf run rabbitmq --  stestr run --slowest {posargs:oslo_messaging.tests.functional}

[testenv:py36-func-amqp1]
setenv =
    {[testenv]setenv}
    TRANSPORT_URL=amqp://stackqpid:secretqpid@127.0.0.1:5672//
    ENVNAME={envname}
    WORKDIR={toxworkdir}
commands = {toxinidir}/tools/setup-test-env-amqp1.sh stestr run --slowest {posargs:oslo_messaging.tests.functional}

[testenv:py36-func-kafka]
setenv =
    {[testenv]setenv}
    TRANSPORT_URL=kafka://127.0.0.1:9092/
    OS_GROUP_REGEX=oslo_messaging.tests.functional
commands = {toxinidir}/setup-test-env-kafka.sh stestr run --slowest {posargs:oslo_messaging.tests.functional}


[testenv:bandit]
# NOTE(kgiusti): This is required for the integration test job of the bandit
# project. Please do not remove.
commands = bandit -r oslo_messaging -x tests -n5

[flake8]
# E731 skipped as assign a lambda expression

show-source = True
enable-extensions = H203,H106
ignore = E731,H405
exclude = .tox,dist,doc,*.egg,build,__init__.py

[hacking]
import_exceptions =
  six.moves
local-check-factory = oslo_messaging.hacking.checks.factory

[testenv:releasenotes]
whitelist_externals = rm
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -W -d releasenotes/build/doctrees --keep-going -b html releasenotes/source releasenotes/build/html
deps = -r{toxinidir}/doc/requirements.txt

[testenv:bindep]
deps = bindep
commands = bindep {posargs}

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
