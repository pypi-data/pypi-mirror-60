Metadata-Version: 2.1
Name: apd.sensors
Version: 2.0.0
Summary: APD Sensor package
Home-page: UNKNOWN
License: MIT
Keywords: iot
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
Requires-Dist: psutil
Requires-Dist: click
Requires-Dist: adafruit-circuitpython-dht ; "arm" in platform_machine
Provides-Extra: webapp
Requires-Dist: flask ; extra == 'webapp'

# Advanced Python Development Sensors

This is the data collection package that forms part of the running example
for the book [Advanced Python Development](https://advancedpython.dev).

## Usage

This installs a console script called `sensors` that returns a report on
various aspects of the system. The available sensors are:

* Python version
* IP Addresses
* CPU Usage
* RAM Available
* Battery charging state
* Ambient Temperature
* Ambient Humidity

There are no command-line options, to view the report run `sensors` on the
command line.

## Caveats

The Ambient Temperature and Ambient Humidity sensors are only available on
RaspberryPi hosts and assume that a DHT22 sensor is connected to pin `D20`.

The location and type of the sensor can be controlled by setting a pair of
environment variables: `APD_SENSORS_TEMPERATURE_BOARD` and
`APD_SENSORS_TEMPERATURE_PIN`.

If there is an entry in `/etc/hosts` for the current machine's hostname that
value will be the only result from the IP Addresses sensor.

## Installation

You can install with `pip3 install apd.sensors` under Python 3.7 or higher.

We recommend using pipenv to manage your environment, in which case you would
install using `pipenv --three install apd.sensors` and run the programme using 
`pipenv run sensors`.

## API server

There is an optional API server shipped with apd.sensors. To use this you
should install the `apd.sensors[webapp]` extra. The API can then be started
with the non-production quality wsgiref server using:

    python -m apd.sensors.wsgi.serve

or through Waitress (if installed) using:

    waitress-serve --call apd.sensors.wsgi:set_up_config

Other WSGI servers will also work, you should use set_up_config as a factory
function.

An environment variable is required to use the API server, `APD_SENSORS_API_KEY`
should be set to the API key required to gain access. One can be generated
using:

    python -c "import uuid; print(uuid.uuid4().hex)"

The following endpoints are supported:

* /v/2.0/sensors
* /v/2.0/sensors/sensorid

## Changes

### 2.0.0 (2019-09-08)

* Add `to_json_compatible` and `from_json_compatible` methods to Sensor
  to facilitate better HTTP API (Matthew Wilkes)

* HTTP API is now versioned. The API from 1.3.0 is available at /v/1.0
  and an updated version is at /v/2.0 (Matthew Wilkes)

### 1.3.0 (2019-08-20)

* WSGI HTTP API support added (Matthew Wilkes)

### 1.2.0 (2019-08-05)

* Add external plugin support through `apd.sensors.sensors` entrypoint (Matthew Wilkes)

### 1.1.0 (2019-07-12)

* Add --develop argument (Matthew Wilkes)

### 1.0.1 (2019-06-20)

* Fix broken 1.0.0 release (Matthew Wilkes)

### 1.0.0 (2019-06-20)

* Added initial sensors (Matthew Wilkes)

Copyright (c) 2019 Matthew Wilkes

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


