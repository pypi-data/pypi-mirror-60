# Generated by Django 2.2.5 on 2020-01-30 09:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('etsy', '0001_initial'),
        ('marketplace', '0002_auto_20200117_1440'),
        ('etsy_listing', '0003_auto_20200129_2044'),
    ]

    operations = [
        migrations.CreateModel(
            name='EtsyReceipt',
            fields=[
                ('receipt_id', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('buyer_user_id', models.PositiveIntegerField(verbose_name='ID покупателя')),
                ('buyer_email', models.EmailField(max_length=254, verbose_name='E-mail покупателя')),
                ('creation_tsz', models.DateTimeField(verbose_name='Дата создания')),
                ('can_refund', models.BooleanField(verbose_name='Возврат возможен')),
                ('last_modified_tsz', models.DateTimeField(verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=255, verbose_name='Имя получателя')),
                ('first_line', models.CharField(max_length=255, verbose_name='Первая строка адреса')),
                ('second_line', models.CharField(max_length=255, verbose_name='Вторая строка адреса')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('state', models.CharField(max_length=255, verbose_name='Область')),
                ('zip', models.CharField(max_length=255, verbose_name='Почтовый индекс')),
                ('formatted_address', models.CharField(max_length=255, verbose_name='Отформатированный адрес доставки')),
                ('was_shipped', models.BooleanField(verbose_name='Заказ отправлен')),
                ('payment_method', models.CharField(choices=[('pp', 'PayPal'), ('cc', 'Credit card'), ('ck', 'Check'), ('mo', 'Money order'), ('other', 'Other')], max_length=5, verbose_name='Тип оплаты')),
                ('payment_email', models.EmailField(max_length=254, verbose_name='E-mail покупателя для получения информации о платеже')),
                ('message_from_seller', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сообщение от продавца')),
                ('message_from_buyer', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сообщение от покупателя')),
                ('was_paid', models.BooleanField(verbose_name='Заказ оплачен')),
                ('message_from_payment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сгенерированное системное сообщение об оплате')),
                ('total_tax_cost', models.FloatField(verbose_name='Общая сумма налогов')),
                ('total_vat_cost', models.FloatField(verbose_name='Общая сумма НДС')),
                ('total_price', models.FloatField(help_text='Формируется из цены помноженной на кол-во, не включая налоги и цену доставки', verbose_name='Общая сумма заказа')),
                ('total_shipping_cost', models.FloatField(verbose_name='Общая цена доставки')),
                ('currency_code', models.CharField(choices=[('USD', 'USD')], max_length=3, verbose_name='Валюта')),
                ('is_gift', models.BooleanField(verbose_name='Заказ оформлен как подарок')),
                ('needs_gift_wrap', models.BooleanField(verbose_name='Оформлена подарочная упаковка')),
                ('gift_wrap_price', models.FloatField(default=0.0, verbose_name='Цена подарочной упаковки')),
                ('gift_message', models.CharField(max_length=255, verbose_name='Сообщение получателю подарка')),
                ('discount_amt', models.FloatField(help_text='Купоны для бесплатной доставки не учитываются в данной сумме скидки', verbose_name='Итоговая сумма скидки')),
                ('subtotal', models.FloatField(help_text='Не включает в себя налоги и цену доставки', verbose_name='Итоговая сумма заказа с учетом скидки')),
                ('grandtotal', models.FloatField(verbose_name='Итоговая сумма заказа (с учетом скидки, налогов и цены доставки)')),
                ('adjusted_grandtotal', models.FloatField(verbose_name='Итоговая сумма заказа после возврата одного или нескольких товаров')),
                ('buyer_adjusted_grandtotal', models.FloatField(verbose_name='Итоговая сумма заказа после возврата одного или нескольких товаров с точки зрения покупателя')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='etsy.EtsyCountry', verbose_name='Страна')),
                ('marketplace_user_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etsy_orders', related_query_name='etsy_order', to='marketplace.MarketplaceUserAccount', verbose_name='Пользовательский аккаунт для маркетплейса')),
            ],
            options={
                'verbose_name': 'Заказ Etsy',
                'verbose_name_plural': 'Заказы Etsy',
            },
        ),
        migrations.CreateModel(
            name='EtsyReceiptTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=30, verbose_name='ID')),
                ('seller_user_id', models.CharField(max_length=30, verbose_name='ID продавца')),
                ('buyer_user_id', models.CharField(max_length=30, verbose_name='ID покупателя')),
                ('creation_tsz', models.DateTimeField(verbose_name='Дата и время создания')),
                ('paid_tsz', models.DateTimeField(verbose_name='Дата и время оплаты')),
                ('shipped_tsz', models.DateTimeField(verbose_name='Дата и время отправки')),
                ('shipping_cost', models.FloatField(verbose_name='Цена доставки')),
                ('is_quick_sale', models.BooleanField(verbose_name='Быстрая продажа')),
                ('transaction_type', models.CharField(max_length=30, verbose_name='Тип')),
                ('url', models.URLField(verbose_name='URL')),
                ('listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', related_query_name='transaction', to='etsy_listing.EtsyListing')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', related_query_name='transaction', to='etsy_order.EtsyReceipt', verbose_name='Транзакция для заказа')),
            ],
            options={
                'verbose_name': 'Проданная позиция в заказе',
                'verbose_name_plural': 'Проданные позиции в заказе',
            },
        ),
        migrations.CreateModel(
            name='EtsyReceiptShipment',
            fields=[
                ('receipt_shipping_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('carrier_name', models.CharField(max_length=255, verbose_name='Наименование службы доставки')),
                ('tracking_code', models.CharField(max_length=255, verbose_name='Код для отслеживания доставки')),
                ('tracking_url', models.URLField(verbose_name='Сайт службы доставки')),
                ('buyer_note', models.CharField(blank=True, max_length=255, null=True, verbose_name='Заметка от покупателя')),
                ('notification_date', models.DateTimeField(verbose_name='Дата отправки уведомления об отправке заказа')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipments', related_query_name='shipment', to='etsy_order.EtsyReceipt', verbose_name='Заказ Etsy')),
            ],
            options={
                'verbose_name': 'Информация по доставке заказа',
                'verbose_name_plural': 'Информация по доставкам заказов',
            },
        ),
    ]
