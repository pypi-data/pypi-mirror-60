class CarpApiException(Exception):
    """Base exception, all other exceptions generated by framework should go
    from here.
    """


class RoutingConfigurationError(CarpApiException):
    """Exception happens when attempt to register endpoint fails. As such is
    never to be visible for a flask application.
    """


class DuplicateEndpointError(RoutingConfigurationError):
    """Exception happens when two endpoints with same name are registered for
    same namespace and same version.
    """


class ConflictingUrlsError(RoutingConfigurationError):
    """Exception happens when flask attempts to add url rule for same url and
    methods combination.
    """


class EndpointNotImplementedError(CarpApiException):
    """When endpoint was defined but is missing action method (that actually
    does things)
    """


class NotFoundError(CarpApiException):
    """Used exclusively when requested asset is not found.
    """


class VersionDoesNotExistError(NotFoundError):
    pass


class AccessForbidden(CarpApiException):
    pass


class Unauthorised(CarpApiException):
    pass


class BaseDataError(CarpApiException):
    """Exception is able to aggregate any number of errors and then display
    them as a dictionary of problems.
    """


class BasePayloadError(BaseDataError):
    pass


class PayloadError(BasePayloadError):
    pass


class InvalidPayloadError(BasePayloadError):
    pass


class ResponseError(BaseDataError):
    pass


class BaseValidationError(CarpApiException):
    pass


class ValidationError(BaseValidationError):
    """Individual validation error, will be thrown typically from validator.
    """
