// schema definition used for lexical normalization
class LEXNMessage(primary) {
    message: LEXNMessageType
}

union LEXNMessageType {
    LEXNResponse
    LEXNRequest
}

class LEXNResponse {
    nodes: [LEXNNode]
}

class LEXNNode {
    lemma: string
    labels: [string]
    outgoing: [Edge]
    incoming: [Edge]
    attributes: [Tuple]
}

class LEXNRequest {
    tokens: [string]
}

class Tuple {
    key: string
    value: string
}

class Edge {
    type: EdgeType
    node: LEXNNodeRef
    attributes: [Tuple]
}

class LEXNNodeRef {
    name: string
}

enum EdgeType  {
    FLEXION COLLOCATION HYPERONYM MERONYM SYNONYM ABBREVIATION CAUSATION DIALECT GENDER
}