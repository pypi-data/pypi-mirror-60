---
- name: Starting first MariaDB container
  vars:
    service_name: "mariadb"
    service: "{{ mariadb_services[service_name] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    environment:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
      BOOTSTRAP_ARGS: "--wsrep-new-cluster"
    image: "{{ service.image }}"
    labels:
      BOOTSTRAP:
    name: "{{ service.container_name }}"
    restart_policy: no
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - bootstrap_host is defined
    - bootstrap_host == inventory_hostname
  listen: Bootstrap MariaDB cluster
  notify:
    - restart mariadb

# TODO(jeffrey4l), remove the task check when the wait_for bug is fixed
# https://github.com/ansible/ansible-modules-core/issues/2788
- name: wait first mariadb container
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ mariadb_port }}"
    connect_timeout: 1
    timeout: 60
    search_regex: "MariaDB"
  register: check_mariadb_port
  until: check_mariadb_port is success
  retries: 10
  delay: 6
  when:
    - bootstrap_host is defined
    - bootstrap_host == inventory_hostname
  listen: Bootstrap MariaDB cluster

- name: Wait for MariaDB to become operational
  become: true
  command: >-
    docker exec {{ mariadb_service.container_name }}
    mysql -uroot -p{{ database_password }}
    --silent --skip-column-names
    -e 'SHOW STATUS LIKE "wsrep_evs_state"'
  changed_when: false
  register: result
  until: '"OPERATIONAL" in result.stdout'
  retries: 10
  delay: 6
  no_log: true
  when:
    - bootstrap_host is defined
    - bootstrap_host == inventory_hostname
  listen: Bootstrap MariaDB cluster

- name: restart slave mariadb
  vars:
    service_name: "mariadb"
    service: "{{ mariadb_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname != master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

# TODO(jeffrey4l), remove the task check when the wait_for bug is fixed
# https://github.com/ansible/ansible-modules-core/issues/2788
- name: wait for slave mariadb
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ mariadb_port }}"
    connect_timeout: 1
    timeout: 60
    search_regex: "MariaDB"
  register: check_mariadb_port
  until: check_mariadb_port is success
  retries: 10
  delay: 6
  when:
    - kolla_action != "config"
    - inventory_hostname != master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

- name: run upgrade on slave
  vars:
    service_name: "mariadb"
    service: "{{ mariadb_services[service_name] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    detach: False
    dimensions: "{{ service.dimensions }}"
    environment:
      KOLLA_UPGRADE:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
      DB_HOST: "{{ api_interface_address }}"
      DB_PORT: "{{ mariadb_port }}"
      DB_ROOT_PASSWORD: "{{ database_password }}"
    image: "{{ service.image }}"
    labels:
      UPGRADE:
    name: "upgrade_mariadb"
    restart_policy: no
    volumes: "{{ service.volumes }}"
  no_log: true
  when:
    - kolla_action == "upgrade"
    - inventory_hostname != master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

- name: restart master mariadb
  vars:
    service_name: "mariadb"
    service: "{{ mariadb_services[service_name] }}"
  become: true
  kolla_docker:
    action: "recreate_or_restart_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ service.container_name }}"
    image: "{{ service.image }}"
    volumes: "{{ service.volumes }}"
    dimensions: "{{ service.dimensions }}"
  when:
    - kolla_action != "config"
    - inventory_hostname == master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

# TODO(jeffrey4l), remove the task check when the wait_for bug is fixed
# https://github.com/ansible/ansible-modules-core/issues/2788
- name: Waiting for master mariadb
  wait_for:
    host: "{{ api_interface_address }}"
    port: "{{ mariadb_port }}"
    connect_timeout: 1
    timeout: 60
    search_regex: "MariaDB"
  register: check_mariadb_port
  until: check_mariadb_port is success
  retries: 10
  delay: 6
  when:
    - kolla_action != "config"
    - inventory_hostname == master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

- name: run upgrade on master
  vars:
    service_name: "mariadb"
    service: "{{ mariadb_services[service_name] }}"
  become: true
  kolla_docker:
    action: "start_container"
    common_options: "{{ docker_common_options }}"
    detach: False
    dimensions: "{{ service.dimensions }}"
    environment:
      KOLLA_UPGRADE:
      KOLLA_CONFIG_STRATEGY: "{{ config_strategy }}"
      DB_HOST: "{{ api_interface_address }}"
      DB_PORT: "{{ mariadb_port }}"
      DB_ROOT_PASSWORD: "{{ database_password }}"
    image: "{{ service.image }}"
    labels:
      UPGRADE:
    name: "upgrade_mariadb"
    restart_policy: no
    volumes: "{{ service.volumes }}"
  no_log: true
  when:
    - kolla_action == "upgrade"
    - inventory_hostname == master_host
    - not mariadb_recover | default(false)
  listen: restart mariadb

# NOTE(yoctozepto): due to older (<=10.1) MariaDB releases defaulting to
# non-dynamic (compact) row format, we have to change tables on upgrade
# to dynamic to allow for current migrations to pass
# see also https://bugs.launchpad.net/nova/+bug/1856296 and
# https://mariadb.com/kb/en/library/troubleshooting-row-size-too-large-errors-with-innodb

- name: Find tables to change row format to DYNAMIC
  vars:
    service_name: "mariadb"
    mariadb_service: "{{ mariadb_services[service_name] }}"
  become: True
  command: >-
    docker exec {{ mariadb_service.container_name }}
    mysql -uroot -p{{ database_password }}
    --silent --skip-column-names
    -e "SELECT NAME
    FROM information_schema.INNODB_SYS_TABLES
    WHERE ROW_FORMAT IN('Redundant', 'Compact')
    AND NAME NOT IN('SYS_DATAFILES', 'SYS_FOREIGN', 'SYS_FOREIGN_COLS', 'SYS_TABLESPACES', 'SYS_VIRTUAL', 'SYS_ZIP_DICT', 'SYS_ZIP_DICT_COLS');"
  changed_when: False
  register: tables_needing_row_format_change
  run_once: True
  no_log: True
  when: kolla_action == "upgrade"
  listen: restart mariadb

- name: Change row format to DYNAMIC for legacy tables
  vars:
    service_name: "mariadb"
    mariadb_service: "{{ mariadb_services[service_name] }}"
  become: True
  command: >-
    docker exec {{ mariadb_service.container_name }}
    mysql -uroot -p{{ database_password }}
    --silent --skip-column-names
    -e "{% for table in tables_needing_row_format_change.stdout_lines %}ALTER TABLE {{ table | regex_replace('/', '.') }} ROW_FORMAT=DYNAMIC;{% endfor %}"
  changed_when: True
  run_once: True
  no_log: True
  when:
    - kolla_action == "upgrade"
    - tables_needing_row_format_change.stdout != ''
  listen: restart mariadb
