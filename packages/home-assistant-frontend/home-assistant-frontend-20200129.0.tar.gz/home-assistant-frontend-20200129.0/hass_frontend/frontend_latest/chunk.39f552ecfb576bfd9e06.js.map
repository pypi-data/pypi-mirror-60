{"version":3,"sources":["webpack:///./src/common/util/render-status.ts","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/data/core.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/onboarding/onboarding-core-config.ts"],"names":["__webpack_require__","d","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","setupLeafletMap","createTileLayer","async","mapElement","darkMode","draw","parentNode","Error","Leaflet","e","then","t","bind","Icon","Default","imagePath","map","style","document","createElement","setAttribute","appendChild","setView","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","customElement","LocationEditor","_LitElement","[object Object]","args","super","_initialize","this","property","_leafletMap","location","_locationMarker","getBounds","fitBounds","fitZoom","_ignoreFitToMap","html","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","has","_updateMarker","fitMap","_updateRadius","_updateIcon","shadowRoot","querySelector","_mapEl","Boolean","radius","addEventListener","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","undefined","bubbles","getRadius","icon","_iconEl","iconHTML","el","outerHTML","divIcon","iconSize","className","_setIcon","setIcon","editing","_moveMarker","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","setLatLng","disable","_setupEdit","circle","color","addLayer","marker","draggable","remove","setRadius","css","LitElement","saveCoreConfig","detectCoreConfig","hass","values","callWS","Object","assign","type","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystem","_unitSystemValue","_unitSystemChanged","_save","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","err","alert","message","preventDefault","location_name","result","onboardCoreConfigStep"],"mappings":"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","file":"chunk.39f552ecfb576bfd9e06.js","sourcesContent":["export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\nexport type LeafletDrawModuleType = typeof import(\"leaflet-draw\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false,\n  draw = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  if (draw) {\n    await import(/* webpackChunkName: \"leaflet-draw\" */ \"leaflet-draw\");\n  }\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: \"#FF9800\",\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this._unitSystem === \"metric\"\n              ? this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n                )\n              : this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_feet\"\n                )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(`Failed to save: ${err.message}`);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n"],"sourceRoot":""}