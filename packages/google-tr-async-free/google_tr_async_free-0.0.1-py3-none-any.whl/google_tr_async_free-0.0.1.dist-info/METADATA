Metadata-Version: 2.1
Name: google-tr-async-free
Version: 0.0.1
Summary: google trnaslate async for free
Home-page: http://github.com/ffreemt/google-tr-async-free
Author: mikeee
License: MIT License
Download-URL: https://github.com/ffreemt/google-tr-free/archive/v_0.0.1.tar.gz
Keywords: machine translation,free,scraping
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: MIT License
Description-Content-Type: text/markdown
Requires-Dist: httpx
Requires-Dist: js2py
Requires-Dist: loguru

# google-tr-async-free ![Python3637 package](https://github.com/ffreemt/google-tr-async-free/workflows/Python%203637%20package/badge.svg)

Google translate for free -- based on httpx with proxy support. Let's hope it lasts.

### Installation

```pip install google-tr-async-free```

or

* Install (pip or whatever) necessary requirements, e.g. ```
pip install httpx js2py loguru``` or ```
pip install -r requirements.txt```
* Drop the file google_tr.py in any folder in your PYTHONPATH (check with import sys; print(sys.path)
* or clone the repo (e.g., ```git clone https://github.com/ffreemt/google-tr-async-free.git``` or download https://github.com/ffreemt/google-tr-async-free/archive/master.zip and unzip) and change to the google-tr-free folder and do a ```
python setup.py develop```

### Usage

```
import asyncio
loop = asyncio.new_event_loop()
asyncio.set_event_loop(loop)
arun = lambda x: loop.run_until_complete(x)

from google_tr_async import google_tr_async

_ = [google_tr_async('hello world'),
  google_tr_async('hello world', to_lang='de'),
  google_tr_async('hello world', to_lang='fr'),
  google_tr_async('hello world', to_lang='ja')]
res = arun(asyncio.gather(*_))

print(res[0])  # ->'你好，世界'
print(res[1])  # ->'Hallo Welt'
print(res[2])  # ->'Bonjour le monde'
print(res[3])  # ->'こんにちは世界'
```

### Acknowledgments

* Thanks to everyone whose code was used


