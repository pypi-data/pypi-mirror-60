#!/usr/bin/env python

#############################################################################
#                                                                           #
# Script to compress/decompress MRC files using MRCZ                        #
#                                                                           #
# (C) focus-em.org, GNU Public License.                                     #
#                                                                           #
# Created..........: 20/09/2017                                             #
# Last Modification: 20/09/2019                                             #
# Author...........: Ricardo Righetto                                       #
#                                                                           #
# This Python script is distributed with the Focus package                  #
# under the terms of the GNU Public License.                                #
#                                                                           #
#############################################################################

import sys
import os
# from focustools import util
import mrcz
from optparse import OptionParser


def main():

	progname = os.path.basename(sys.argv[0])
	usage = progname + """ <mrc(s) file> [options]

	Given a list of MRC(Z) files, will compress/decompress them.
	Compressing is the default behavior.
	For decompressing, use the --decompress flag.

	If MRCZ is useful in your research, please cite:

	R.A. McLeod, R. Diogo-Righetto, A. Stewart, H. Stahlberg, "MRCZ - A file format for cryo-TEM data with fast compression," Journal of Structural Biology, 201 (3) (March 2018): 252-267, https://doi.org/10.1016/j.jsb.2017.11.012
	"""

	parser = OptionParser(usage)

	parser.add_option("--compressor", metavar='zstd', type="string", default='zstd',
					  help="Will use this compressor. Options are: blosclz, lz4, lz4hc, zlib or zstd (default).")

	parser.add_option("--decompress", action="store_true", help="Decompress the input files.", default=False)

	parser.add_option("--suffix", metavar='compressed', type="string", default="", help="Will add this suffix to the output files.")

	parser.add_option("--outdir", metavar='output/', type="string", default=".", help="Output files will be stored in this location.")


	(options, args) = parser.parse_args()

	command = ' '.join(sys.argv)

	if options.suffix != "":

		options.suffix = '_'+options.suffix

	if options.decompress:

		for file in args:

			# file = os.path.abspath(file)
			# dirname = os.path.dirname(file)
			filename = os.path.basename(file)
			ext = os.path.splitext(filename)[-1]
			filename = os.path.splitext(filename)[0]

			mrcin,hed = mrcz.ioMRC.readMRC(file)
			mrcz.writeMRC(mrcin, options.outdir+'/'+filename+options.suffix+'.mrc', compressor=None)

	else:

		for file in args:

			# file = os.path.abspath(file)
			# dirname = os.path.dirname(file)
			filename = os.path.basename(file)
			ext = os.path.splitext(filename)[-1]
			filename = os.path.splitext(filename)[0]

			mrcin,hed = mrcz.ioMRC.readMRC(file)
			mrcz.writeMRC(mrcin, options.outdir+'/'+filename+options.suffix+'.mrcz', compressor=options.compressor)


if __name__ == "__main__":
	main()
