'use strict';

const cachecontrol =
STRING_EVAL_FUNCTIONS_IN_CFG
get_endvalue('LambdaAtEdgeAddHeadersCacheControl')
STRING_EVAL_FUNCTIONS_IN_CFG
;

const headerCacheControl = [{key: 'cache-control', value: 'max-age=' + cachecontrol}];
const headerXRobotsTag = [{ key: 'x-robots-tag', value: 'noindex, follow' }];

exports.lambda_handler = (event, context, callback) => {
    const response = event.Records[0].cf.response;
    const request = event.Records[0].cf.request;
    const headers = response.headers;

    if ( response.status.startsWith('2') ) {
      if ( request.uri.startsWith('/sitemap/') ) {
        headers['x-robots-tag'] = headerXRobotsTag;
      } else {
        headers['cache-control'] = headerCacheControl;
      }
    }

    callback(null, response);
};
