Metadata-Version: 2.1
Name: guillotina
Version: 5.3.13
Summary: asyncio REST API Resource database
Home-page: https://github.com/plone/guillotina
Author: Ramon Navarro Bosch & Nathan Van Gheem
Author-email: ramon@plone.org
License: BSD
Description: Introduction
        ============
        
        .. image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat
           :target: http://guillotina.readthedocs.io/en/latest/
        
        .. image:: https://travis-ci.org/plone/guillotina.svg?branch=master
           :target: https://travis-ci.org/plone/guillotina
        
        .. image:: https://codecov.io/gh/plone/guillotina/branch/master/graph/badge.svg
           :target: https://codecov.io/gh/plone/guillotina/branch/master
           :alt: Test Coverage
        
        .. image:: https://img.shields.io/pypi/pyversions/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: Python Versions
        
        .. image:: https://img.shields.io/pypi/v/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina
        
        .. image:: https://img.shields.io/pypi/l/guillotina.svg
           :target: https://pypi.python.org/pypi/guillotina/
           :alt: License
        
        .. image:: https://badges.gitter.im/plone/guillotina.png
           :target: https://gitter.im/plone/guillotina
           :alt: Chat
        
        Please `read the detailed docs <http://guillotina.readthedocs.io/en/latest/>`_
        
        
        This is the working project of the next generation Guillotina server based on asyncio.
        
        
        Dependencies
        ------------
        
        * Python >= 3.7
        * PostgreSQL >= 9.6
        
        
        Quickstart
        ----------
        
        We use pip
        
        .. code-block:: shell
        
            pip install guillotina
        
        
        Run PostgreSQL
        --------------
        
        If you don't have a PostgreSQL server to play with, you can run one with Docker.
        
        Download and start the Docker container by running
        
        .. code-block:: shell
        
            make run-postgres
        
        
        
        Run the server
        --------------
        
        To run the server
        
        .. code-block:: shell
        
            g
        
        
        Then...
        
        .. code-block:: shell
        
            curl http://localhost:8080
        
        
        Or, better yet, use `Postman <https://www.getpostman.com/>`_ to start playing with API.
        
        You can also navigate in your Guillotina server with its built-in web admin interface by visiting http://localhost:8080/+admin/.
        
        Deploy on Heroku
        ----------------
        
        Read more `Guillotina-Heroku <https://github.com/guillotinaweb/guillotina-heroku>`_.
        
        .. image:: https://www.herokucdn.com/deploy/button.svg
           :target: https://www.heroku.com/deploy?template=https://github.com/guillotinaweb/guillotina-heroku
        
        Getting started with development
        --------------------------------
        
        Using pip (requires Python > 3.7)
        
        .. code-block:: shell
        
            git clone git@github.com:plone/guillotina.git
            cd guillotina
            python3.7 -m venv .
            ./bin/pip install -r requirements.txt
            ./bin/pip install -r contrib-requirements.txt
            ./bin/pip install -e .[test]
            ./bin/pre-commit install
        
        
        Run tests
        ---------
        
        We're using `pytest <https://docs.pytest.org/en/latest/>`_
        
        .. code-block:: shell
        
            ./bin/pytest guillotina
        
        and for test coverage
        
        .. code-block:: shell
        
            ./bin/pytest --cov=guillotina guillotina/
        
        With file watcher...
        
        .. code-block:: shell
        
            ./bin/ptw guillotina --runner=./bin/py.test
        
        
        To run tests with cockroach db
        
        .. code-block:: shell
        
            USE_COCKROACH=true ./bin/pytest guillotina
        
        Default
        -------
        
        Default root access can be done with AUTHORIZATION header : Basic root:root
        
        
        Docker
        ------
        
        You can also run Guillotina with Docker!
        
        
        First, run PostgreSQL
        
        .. code-block:: shell
        
            docker run --rm \
                -e POSTGRES_DB=guillotina \
                -e POSTGRES_USER=guillotina \
                -p 127.0.0.1:5432:5432 \
                --name postgres \
                postgres:9.6
        
        Then, run Guillotina
        
        .. code-block:: shell
        
            docker run --rm -it \
                --link=postgres -p 127.0.0.1:8080:8080 \
                guillotina/guillotina:latest \
                g -c '{"databases": [{"db": {"storage": "postgresql", "dsn": "postgres://guillotina:@postgres/guillotina"}}], "root_user": {"password": "root"}}'
        
        
        This assumes you have a config.yaml in your current working directory
        
        
        Chat
        ----
        
        Join us to talk about Guillotina at https://gitter.im/plone/guillotina
        
        
        CHANGELOG
        =========
        
        5.3.13 (2020-01-22)
        -------------------
        
        - Correctly bubble http errors for file downloads
          [vangheem]
        
        
        5.3.12 (2020-01-21)
        -------------------
        
        - Add title/description to json schema field serialization
          [vangheem]
        
        
        5.3.11 (2020-01-16)
        -------------------
        
        - Better error handling on redis connection issues
          [vangheem]
        
        
        5.3.10 (2020-01-16)
        -------------------
        
        - JSON Schema and open api serialization fixes
          [vangheem]
        
        
        5.3.9 (2020-01-15)
        ------------------
        
        - Fix validating array params in query parameters [lferran]
        
        - Add open api tests and fix ones that do not pass tests
          [vangheem]
        
        
        5.3.8 (2020-01-15)
        ------------------
        
        - Fix automatic type conversion on nested fields
          [vangheem]
        
        
        5.3.7 (2020-01-13)
        ------------------
        
        - Fix automatic type conversion on nested fields. Fixes #832
          [vangheem]
        
        
        5.3.6 (2020-01-09)
        ------------------
        
        - Be able to start database transaction before transaction has started it
          without causing errors
          [vangheem]
        
        
        5.3.5 (2020-01-09)
        ------------------
        
        - Fix optimized lookup to work with fields that do not have `_type`
          [vangheem]
        
        
        5.3.4 (2020-01-07)
        ------------------
        
        - Fix query param validation
          [vangheem]
        
        
        5.3.3 (2020-01-07)
        ------------------
        
        - Optimize json deserialization
          [vangheem]
        
        - Update Dockerfile
          [svx]
        
        
        5.3.2 (2020-01-03)
        ------------------
        
        - Be able to disable supporting range headers in `IFileManager.download`
          [vangheem]
        
        - Make `Field.required` an optional property. To change default required behavior,
          you can monkey patch `IField['required'].default = False`
          [vangheem]
        
        
        5.3.1 (2020-01-02)
        ------------------
        
        - Save old file attrs before content is cleaned
          [vangheem]
        
        
        5.3.0 (2020-01-02)
        ------------------
        
        - Add `Range` header support
          [vangheem]
        
        5.2.2 (2019-12-27)
        ------------------
        
        - Fix validating None values in required fields
          [vangheem]
        
        
        5.2.1 (2019-12-21)
        ------------------
        
        - Fix error with requeued async queue tasks
          [vangheem]
        
        
        5.2.0 (2019-12-20)
        ------------------
        
        - Added `IIDChecker` adapter
          [vangheem]
        
        - Added `valid_id_characters` app setting
          [vangheem]
        
        
        5.1.26 (2019-12-20)
        -------------------
        
        - Bubble cancelled errors in resolver
          [vangheem]
        
        - Fix duplicate behaviors interfaces in get_all_behavior_interfaces()
          [qiwn]
        
        
        5.1.25 (2019-12-18)
        -------------------
        
        - Better CancelledError handling in resolving a request
          [vangheem]
        
        - Fix adding duplicate behaviors
          [qiwn]
        
        - PatchField: added operation "multi"
          [masipcat]
        
        
        
        ...
        
        You are seeing a truncated changelog.
        
        You can read the `changelog file <https://github.com/plone/guillotina/blob/master/CHANGELOG.rst>`_
        for a complete list.
        
        
Keywords: asyncio,REST,Framework,transactional
Platform: UNKNOWN
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Developers
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.7.0
Provides-Extra: mailer
Provides-Extra: docs
Provides-Extra: redis
Provides-Extra: test
