"""PCO People models.

Generated by pypco_generator tool. Manual changes not recommended.
"""

#pylint: disable=C0321,R0903,C0111

from .base_model import BaseModel

# The base People model
class PeopleModel(BaseModel): pass

# People Models
class Address(PeopleModel): 
    """An address represents a physical and/or mailing address for a person."""
    ENDPOINT_NAME='addresses'

class App(PeopleModel): 
    """An app is one of the handful of apps that PCO offers that organizations can subscribe to, e.g. Services, Registrations, etc."""
    ENDPOINT_NAME='apps'

class Campus(PeopleModel): 
    """A Campus is a location belonging to an Organization"""
    ENDPOINT_NAME='campuses'

class Carrier(PeopleModel): 
    """None"""
    ENDPOINT_NAME='carriers'

class Condition(PeopleModel): 
    """A condition is an individual criterion used by a List Rule."""
    ENDPOINT_NAME='lists'

class ConnectedPerson(PeopleModel): 
    """A Connected Person is an account from a different organization linked to an account in this organization."""
    ENDPOINT_NAME='people'

class Email(PeopleModel): 
    """An email represents an email address and location."""
    ENDPOINT_NAME='emails'

class FieldDatum(PeopleModel): 
    """A field datum is an individual piece of data for a custom field."""
    ENDPOINT_NAME='field_data'

class FieldDefinition(PeopleModel): 
    """A field definition represents a custom field -- its name, data type, etc."""
    ENDPOINT_NAME='field_definitions'

class FieldOption(PeopleModel): 
    """A field option represents an individual option for a custom field of type "select" or "checkboxes"."""
    ENDPOINT_NAME='field_data'

class Form(PeopleModel): 
    """A custom form for people to fill out."""
    ENDPOINT_NAME='forms'

class FormField(PeopleModel): 
    """A field in a custom form."""
    ENDPOINT_NAME='forms'

class FormFieldOption(PeopleModel): 
    """A field option on a custom form field."""
    ENDPOINT_NAME='forms'

class FormSubmission(PeopleModel): 
    """A form submission."""
    ENDPOINT_NAME='people'

class Household(PeopleModel): 
    """A household links people together and can have a primary contact. To add a person to an existing household, use the HouseholdMemberships endpoint."""
    ENDPOINT_NAME='households'

class HouseholdMembership(PeopleModel): 
    """A household membership is the linking record between a household and a person."""
    ENDPOINT_NAME='households'

class InactiveReason(PeopleModel): 
    """An inactive reason is a small bit of text indicating why a member is no longer active."""
    ENDPOINT_NAME='inactive_reasons'

class List(PeopleModel): 
    """A list is a powerful tool for finding and grouping people together using any criteria imaginable."""
    ENDPOINT_NAME='lists'

class ListCategory(PeopleModel): 
    """A List Category"""
    ENDPOINT_NAME='list_categories'

class ListShare(PeopleModel): 
    """A list share indicates who has access to edit a list."""
    ENDPOINT_NAME='lists'

class MailchimpSyncStatus(PeopleModel): 
    """The status of syncing a List with Mailchimp."""
    ENDPOINT_NAME='lists'

class MaritalStatus(PeopleModel): 
    """A martial status represents a member's current status, e.g. married, single, etc."""
    ENDPOINT_NAME='marital_statuses'

class Message(PeopleModel): 
    """A message is an individual email or sms text sent to a member. Every message has a parent message group."""
    ENDPOINT_NAME='messages'

class MessageGroup(PeopleModel): 
    """A message group represents one or more emails or text messages sent from one of the Planning Center apps. The message group indicates the from person, app, etc."""
    ENDPOINT_NAME='message_groups'

class NamePrefix(PeopleModel): 
    """A name prefix is one of Mr., Mrs., etc."""
    ENDPOINT_NAME='name_prefixes'

class NameSuffix(PeopleModel): 
    """A name suffix is one of Sr., Jr., etc."""
    ENDPOINT_NAME='name_suffixes'

class Note(PeopleModel): 
    """A note is text with a category connected to a personâ€™s profile."""
    ENDPOINT_NAME='notes'

class NoteCategory(PeopleModel): 
    """A Note Category"""
    ENDPOINT_NAME='note_categories'

class NoteCategoryShare(PeopleModel): 
    """A note category share defines who can view notes in a category."""
    ENDPOINT_NAME='note_categories'

class NoteCategorySubscription(PeopleModel): 
    """A subscription for note categories"""
    ENDPOINT_NAME='note_category_subscriptions'

class OrganizationStatistics(PeopleModel): 
    """Returns statistics for the organization."""
    ENDPOINT_NAME='organization_statistics'

class PeopleImport(PeopleModel): 
    """A PeopleImport is a record of an ongoing or previous import from a CSV file."""
    ENDPOINT_NAME='people_imports'

class PeopleImportConflict(PeopleModel): 
    """A PeopleImportConflict is a record of change that will occur if the parent PeopleImport is completed."""
    ENDPOINT_NAME='people_imports'

class PeopleImportHistory(PeopleModel): 
    """A PeopleImportHistory is a record of change that occurred when the parent PeopleImport was completed."""
    ENDPOINT_NAME='people_imports'

class Person(PeopleModel): 
    """A person record represents a single member/user of the application. Each person has different permissions that determine how the user can use this app (if at all)."""
    ENDPOINT_NAME='people'

class PersonApp(PeopleModel): 
    """A Person App is the relationship between a Person and an App."""
    ENDPOINT_NAME='people'

class PersonMerger(PeopleModel): 
    """A Person Merger is the history of profiles that were merged into other profiles."""
    ENDPOINT_NAME='person_mergers'

class PhoneNumber(PeopleModel): 
    """A phone number represents a single telephone number and location."""
    ENDPOINT_NAME='people'

class PlatformNotification(PeopleModel): 
    """A Platform Notification is a suite-wide notification that shows at the top of each application's screen until dismissed by the user."""
    ENDPOINT_NAME='people'

class Report(PeopleModel): 
    """A report is editable liquid syntax that provides  a powerful tool for presenting your Lists however you want."""
    ENDPOINT_NAME='reports'

class Rule(PeopleModel): 
    """A rule belongs to a List and groups conditions together."""
    ENDPOINT_NAME='lists'

class SchoolOption(PeopleModel): 
    """A school option represents a school name, school type, grades, etc. and can be selected for a person."""
    ENDPOINT_NAME='school_options'

class SocialProfile(PeopleModel): 
    """A social profile represents a members's Twitter, Facebook, or other social media account."""
    ENDPOINT_NAME='social_profiles'

class Tab(PeopleModel): 
    """A tab is a custom tab and groups like field definitions."""
    ENDPOINT_NAME='tabs'

class Workflow(PeopleModel): 
    """A Workflow"""
    ENDPOINT_NAME='workflows'

class WorkflowCard(PeopleModel): 
    """A Card"""
    ENDPOINT_NAME='people'

class WorkflowCardActivity(PeopleModel): 
    """Workflow Card Activity is a record of an action performed on a card"""
    ENDPOINT_NAME='people'

class WorkflowCardNote(PeopleModel): 
    """Workflow Note is a note that has been made on a Workflow Card"""
    ENDPOINT_NAME='people'

class WorkflowShare(PeopleModel): 
    """A workflow share defines who can can a workflow"""
    ENDPOINT_NAME='workflows'

class WorkflowStep(PeopleModel): 
    """A Step"""
    ENDPOINT_NAME='workflows'

class WorkflowStepAssigneeSummary(PeopleModel): 
    """The ready and snoozed count for an assignee & step"""
    ENDPOINT_NAME='workflows'
