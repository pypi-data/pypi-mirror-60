name: CI/CD

on: push

jobs:
  secret-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: max/secret-scan@master

  python-tests:
    name: Python tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          make sync
      - name: Lint with isort
        run: make lint-isort
      - name: Lint with mypy
        run: make lint-mypy
      - name: Lint with flake8
        run: make lint-flake8
      - name: Lint with pylint
        run: make lint-pylint
      - name: Test with pytest
        run: pipenv run pytest

  build:
    name: Build package
    needs:
      - secret-scan
      - python-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel
      - name: Build dist
        shell: bash
        run: |
          make build
      - name: Upload dist artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  publish-pypi:
    name: Publish To PyPI
    if: github.ref == 'refs/heads/master' || startsWith(github.event.ref, 'refs/tags')
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: success() && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_password }}
