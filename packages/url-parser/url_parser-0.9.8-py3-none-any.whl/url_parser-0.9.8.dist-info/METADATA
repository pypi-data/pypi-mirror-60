Metadata-Version: 2.1
Name: url-parser
Version: 0.9.8
Summary: Parse url and get all the different parts out of it
Home-page: https://bitbucket.org/OddAdapted/url_parser/src/master/
Author: Odd Jøren Røland
Author-email: odd@adapted.no
License: MIT
Platform: any
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown

# URL Parser
![PyPI - Format](https://img.shields.io/pypi/format/url-parser?style=plastic)
![PyPI - Status](https://img.shields.io/pypi/status/url-parser?style=plastic)
![PyPI - Python Version](https://img.shields.io/pypi/pyversions/url-parser?style=plastic)

![PyPI - Downloads](https://img.shields.io/pypi/dm/url-parser?style=plastic)
![PyPI - Downloads](https://img.shields.io/pypi/dw/url-parser?style=plastic)
![PyPI - Downloads](https://img.shields.io/pypi/dd/url-parser?style=plastic)

A small yet nice package to help you parse all types of url`s and return the parsed url with group name.

### Installation
```
pip install url-parser
```

### Usage

```
from url_parser import parse_url


parsed_url = parse_url('https://open.prospecta.app?user=url-parser&password=H3ll0')

print(parsed_url)
>>> {'http': 'https://', 'www': None, 'sub_domain': 'open',
     'domain': 'prospecta', 'top_domain': 'app', 'dir': None, 
     'args': ['user=url-parser', 'password=H3ll0']}
```

### keywords

You can call the package with specific keywords to return the part of the url you  want.

| keyword | result |
| ------ | ------ |
| ['http'] | Returns: http/https or None |
| ['www'] | Returns: www or None |
| ['sub_domain'] | Returns: sub-domain or None |
| ['domain'] | Returns: domain or None |
| ['top_domain'] | Returns: top-domain or None |
| ['dir'] | Returns: list of directories or None |
| ['args'] | Returns: list of args or None |

### Usage with keywords

```
from url_parser import parse_url


parsed_url = parse_url('https://open.prospecta.app/my_user_login?user=url-parser&password=H3ll0')

print(parsed_url)
>>> {'http': 'https://', 'www': None, 'sub_domain': 'open', 'domain': 'prospecta',
     'top_domain': 'app', 'dir': ['my_user_login'], 'args': ['user=url-parser', 'password=H3ll0']}

http = parsed_url['http']
sub_domain = parsed_url['sub_domain']
domain = parsed_url['domain']
top_domain = parsed_url['top_domain']
directory = parsed_url['dir]
args = parsed_url['args']

print(http)
>>> https://

print(sub_domain)
>>> open

print(domain)
>>> prospecta

print(top_domain)
>>> .app

print(directory)
>>> ['my_user_login']

print(args)
>>> ['user=url-parser', 'password=H3ll0']
```

####Versions:
v 0.9.8 | Added support for args
v 0.9.7 | Changed setup.py and readme for PyPi optimisation.
v 0.9.6 | Added support for secondary top domain (like: co.uk, .parliament.uk, .gov.au)


