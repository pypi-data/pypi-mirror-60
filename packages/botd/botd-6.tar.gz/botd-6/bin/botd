#!/usr/bin/python3 -u
# BOTD - IRC channel daemon.
#
# bin/botd

import os, sys ; sys.path.insert(0, os.getcwd())

import logging
import botd

from botd.csl import Console
from botd.err import EINIT
from botd.gnr import update
from botd.irc import IRC
from botd.krn import Kernel, __version__
from botd.log import level, logfiled
from botd.shl import parse_cli
from botd.trc import get_exception
from botd.trm import termreset, termsave

opts = [
    ('-d', '--daemon', 'store_true', False, 'enable daemon mode', 'daemon'),
    ('-s', '--shell', 'store_true', False, 'enable shell', 'shell'),
    ('-x', '--exec', 'store_true', False, 'execute', 'exec'),
    ('-z', '--service', 'store_true', False, "run botd as a service", 'service'),
    ('-w', '--workdir', 'store', str, "", 'set working directory.', 'workdir'),
    ('-m', '--modules', 'store', str, "", 'modules to load.', 'modules'),
    ('-l', '--loglevel', 'store', str, "", 'set loglevel.', 'level'),
    ('-a', '--logdir', "store", str, "", "directory to find the logfiles.", 'logdir'),
]

def daemon():
    pid = os.fork()
    if pid != 0:
        termreset()
        os._exit(0)
    os.setsid()
    os.umask(0)
    si = open("/dev/null", 'r')
    so = open("/dev/null", 'a+')
    se = open("/dev/null", 'a+')
    os.dup2(si.fileno(), sys.stdin.fileno())
    os.dup2(so.fileno(), sys.stdout.fileno())
    os.dup2(se.fileno(), sys.stderr.fileno())

def execute(main):
    termsave()
    try:
        main()
    except KeyboardInterrupt:
        print("")
    except EINIT:
        pass
    except PermissionError:
        print("you need root permissions.")
    except Exception:
        logging.error(get_exception())
    finally:
        termreset()


def config(k, mods=["botd.cmd",], console=True, last=False, start=True, wait=True):
    if last:
        k.cfg.last()
    for m in mods:
        k.walk(m)
    k.walk(k.cfg.modules, True)
    if console:
        c = Console()
        c.start()
    if start:
        k.start()
    if wait:
        k.wait()
        
def main():
    cfg = parse_cli("botd", __version__, opts, 
      """ botd <server> <channel> <nick>
        botd -d (daemon) 
        botd -s (shell)
        botd -x command
        botd -z (service)"""
      )
    k = Kernel(cfg)
    if cfg.exec:
        config(k, console=False, start=False, wait=False)
        k.cmd(" ".join(cfg.args))
        return
    elif cfg.daemon:
        daemon()
        k.cfg.modules += ",irc"
        config(k, [], console=False)
        return
    elif cfg.shell:
        config(k)
        return
    elif cfg.service:
        config(k, [], console=False, last=True)
        return    
    bot = IRC()
    bot.cfg.last()
    try:
        bot.cfg.server, bot.cfg.channel, bot.cfg.nick = cfg.args
        bot.cfg.save()
    except ValueError:
        print("botd <server> <channel> <nick>")
        return
    bot.start()
    config(k, console=True, last=True)

execute(main)
os._exit(0)
