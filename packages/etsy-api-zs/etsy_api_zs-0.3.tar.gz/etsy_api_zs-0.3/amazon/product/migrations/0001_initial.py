# Generated by Django 2.2.5 on 2020-01-17 11:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AmazonProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False)),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False)),
                ('status', model_utils.fields.StatusField(choices=[('draft', 'draft'), ('ready_to_publish', 'ready_to_publish'), ('published', 'published'), ('update_required', 'update_required')], default='draft', max_length=100, no_check_for_status=True)),
                ('published_at', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', when={'published'})),
                ('value', models.FloatField(verbose_name='Цена')),
                ('currency', models.CharField(choices=[('RUB', 'Российский рубль'), ('USD', 'Доллар США'), ('EUR', 'Евро'), ('GBP', 'Фунт стерлингов'), ('JPY', 'Японская иена'), ('CNY', 'Китайский юань'), ('AUD', 'Австралийский доллар'), ('CAD', 'Канадский доллар')], max_length=20, verbose_name='Валюта')),
                ('converted_from_value', models.FloatField(blank=True, null=True, verbose_name='Исходная цена')),
                ('converted_from_currency', models.CharField(blank=True, choices=[('RUB', 'Российский рубль'), ('USD', 'Доллар США'), ('EUR', 'Евро'), ('GBP', 'Фунт стерлингов'), ('JPY', 'Японская иена'), ('CNY', 'Китайский юань'), ('AUD', 'Австралийский доллар'), ('CAD', 'Канадский доллар')], max_length=20, null=True, verbose_name='Исходная валюта')),
                ('sku', models.CharField(max_length=50, verbose_name='SKU')),
                ('description', models.TextField(max_length=500000, verbose_name='Описание продукта')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Количество')),
                ('product_id_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Код товара')),
                ('condition_type', models.CharField(choices=[(11, 'Новое'), (9, 'Не использовано'), (1, 'Использовано, как новое'), (2, 'Использовано, очень хорошее состояние'), (3, 'Использовано, хорошее состояние'), (4, 'Использовано, приемлимое состояние'), (10, 'Восстановленное'), (5, 'Коллекционное, как новое'), (6, 'Коллекционное, очень хорошее состояние'), (7, 'Коллекционное, хорошее состояние'), (8, 'Коллекционное, приемлимое состояние')], max_length=30, verbose_name='Состояние товара')),
                ('condition_note', models.TextField(blank=True, default='', max_length=1000, verbose_name='Описание состояния товара')),
                ('product_tax_code', models.CharField(blank=True, choices=[('A_GEN_NOTAX', 'A_GEN_NOTAX')], max_length=30, null=True, verbose_name='Налоговый код Amazon')),
                ('merchant_shipping_group_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Название шаблона доставки')),
                ('fulfillment_center_id', models.CharField(choices=[('AMAZON_NA', 'Фулфилмент AMAZON'), ('DEFAULT', 'Фулфилмент продавца')], max_length=30)),
                ('handling_time', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество дней, нужное для отправки товара')),
                ('expedited_ship_internationally', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ускоренная доставка')),
                ('will_ship_internationally', models.CharField(blank=True, choices=[('1', 'Только внутри страны площадки'), ('2', 'Международная доставка')], max_length=1, null=True, verbose_name='Международная доставка')),
            ],
            options={
                'verbose_name': 'Товар Amazon',
                'verbose_name_plural': 'Товары Amazon',
            },
        ),
        migrations.CreateModel(
            name='AmazonProductBulletPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=500, verbose_name='Аспект товара')),
                ('amazon_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bullet_points', related_query_name='bullet_point', to='amazon_product.AmazonProduct', verbose_name='Товар Amazon')),
            ],
        ),
        migrations.CreateModel(
            name='AmazonProductBattery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batteries_required', models.BooleanField(verbose_name='Требуются батареи')),
                ('are_batteries_included', models.BooleanField(blank=True, null=True, verbose_name='Содержит батареи')),
                ('battery_cell_composition', models.CharField(blank=True, choices=[('Alkaline', 'Щёлочь'), ('Lithium', 'Литий'), ('Lithium-Ion', 'Литий-ион'), ('Lithium-Metal', 'Литий-металл'), ('Nickel-Cadmium', 'Никель-кадмий'), ('Nickel-Metal Hydride', 'Никель-металлогидрид')], max_length=50, null=True, verbose_name='Состав аккумуляторной батареи')),
                ('battery_type', models.CharField(blank=True, choices=[('battery_type_lithium_ion', 'Литий-ион'), ('battery_type_lithium_metal', 'Литий-метал'), ('battery_type_12v', '12V'), ('battery_type_9v', '9V'), ('battery_type_a', 'A'), ('battery_type_aa', 'AA'), ('battery_type_aaa', 'AAA'), ('battery_type_aaaa', 'AAAA'), ('battery_type_c', 'C'), ('battery_type_cr123a', 'CR123A'), ('battery_type_cr2', 'CR2'), ('battery_type_cr5', 'CR5'), ('battery_type_d', 'D'), ('battery_type_p76', 'P76'), ('battery_type_product_specific', 'Специфично')], max_length=50, null=True, verbose_name='Тип батареи')),
                ('number_of_batteries', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество батарей')),
                ('battery_weight', models.FloatField(blank=True, null=True, verbose_name='Масса батареи')),
                ('battery_weight_unit_of_measure', models.CharField(blank=True, choices=[('GR', 'Грамм'), ('KG', 'Килограмм'), ('LB', 'Фунт'), ('OZ', 'Унция')], max_length=50, null=True, verbose_name='Единица измерения массы батареи')),
                ('number_of_lithium_ion_cells', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество литий-ионных элементов')),
                ('number_of_lithium_methal_cells', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество литий-металлических элементов')),
                ('lithium_battery_packaging', models.CharField(blank=True, choices=[('batteries_only', 'Только батареи'), ('batteries_contained_in_equipment', 'Батареи внутри прибора'), ('batteries_packed_with_equipment', 'Батареи вместе с прибором')], max_length=100, null=True, verbose_name='Описание упаковки литиевой батареи')),
                ('lithium_battery_energy_content', models.FloatField(blank=True, choices=[('watt_hours', 'Ватт-час')], null=True, verbose_name='Ёмкость литиевой батареи (каждой отдельной)')),
                ('lithium_battery_energy_content_unit_of_measure', models.CharField(blank=True, max_length=50, null=True, verbose_name='Единица ёмкости литиевой батареи')),
                ('lithium_battery_weight', models.FloatField(blank=True, null=True, verbose_name='Масса литиевой батареи')),
                ('lithium_battery_weight_unit_of_measure', models.CharField(blank=True, choices=[('GR', 'Грамм'), ('KG', 'Килограмм'), ('LB', 'Фунт'), ('OZ', 'Унция')], max_length=50, null=True, verbose_name='Единица измерения массы литиевой батареи')),
                ('amazon_product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='battery_info', to='amazon_product.AmazonProduct', verbose_name='Товар Amazon')),
            ],
        ),
    ]
