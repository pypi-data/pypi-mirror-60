from bidict import bidict
REGISTER_TYPE_HOLDING = 'holding' # 保持寄存器
REGISTER_TYPE_INPUT = 'input' # 输入寄存器
REGISTER_TYPE_COIL = 'coil' # 线圈寄存器

CONST_MAX_INDOOR_UNIT_COUNT = 64
CONST_MAX_BATCH_READ_SIZE = 64

def indoor_unit_index2id(id):
    return str(id//16 + 1) + "-" + "%.2d" % (id%16)
# {'1-00': 0, '1-01': 1, '1-02': 2, '1-03': 3, ...  '4-15': 63}
INDOOR_UNIT_ID_INDEX = {indoor_unit_index2id(x):x for x in range(CONST_MAX_INDOOR_UNIT_COUNT)}
def indoor_unit_id2index(index):
    return INDOOR_UNIT_ID_INDEX.get(index)

CONST_CELL_BIT_SIZE = 16


CONST_REGISTER_AREA_ADAPTER_STATUS = "adapter_area"
CONST_REGISTER_AREA_INDOOR_UNIT_CONNECTION_STATE = "indoor_unit_connection_state"
CONST_REGISTER_AREA_INDOOR_UNIT_COMMUNICATION_STATE = "indoor_unit_communication_state"

CONST_REGISTER_AREA_INDOOR_UNIT_ABILITY_1 = "indoor_unit_ability_1"
CONST_REGISTER_AREA_INDOOR_UNIT_ABILITY_2 = "indoor_unit_ability_2"

CONST_REGISTER_AREA_INDOOR_UNIT_STATE_1 = "indoor_unit_state_1"
CONST_REGISTER_AREA_INDOOR_UNIT_STATE_2 = "indoor_unit_state_2"
CONST_REGISTER_AREA_INDOOR_UNIT_STATE_3 = "indoor_unit_state_3"

CONST_REGISTER_AREA_INDOOR_UNIT_CONTROL_1 = "indoor_unit_control_1"
CONST_REGISTER_AREA_INDOOR_UNIT_CONTROL_2 = "indoor_unit_control_2"
CONST_REGISTER_AREA_INDOOR_UNIT_CONTROL_3 = "indoor_unit_control_3"

CONST_HVAC_MODE_FAN_ONLY = "fan_only"
CONST_HVAC_MODE_HEAT = "heat"
CONST_HVAC_MODE_COOL = "cool"
CONST_HVAC_MODE_AUTO = "auto"
CONST_HVAC_MODE_DRY = "dry"

CONST_HVAC_MODE_MAPPING = bidict({
    CONST_HVAC_MODE_FAN_ONLY : 0,
    CONST_HVAC_MODE_HEAT : 1,
    CONST_HVAC_MODE_COOL : 2,
    CONST_HVAC_MODE_AUTO : 3,
    CONST_HVAC_MODE_DRY : 7,
})

CONST_OUTDOOR_MODE_FAN_ONLY = "fan_only"
CONST_OUTDOOR_MODE_HEAT = "heat"
CONST_OUTDOOR_MODE_COOL = "cool"

CONST_OUTDOOR_MODE_MAPPING = bidict({
    CONST_OUTDOOR_MODE_FAN_ONLY : 0,
    CONST_OUTDOOR_MODE_HEAT : 1,
    CONST_OUTDOOR_MODE_COOL : 2,
})

CONST_FAN_MODE_AUTO = "auto"
CONST_FAN_MODE_LOW = "low"
CONST_FAN_MODE_MID_LOW = "mid_low"
CONST_FAN_MODE_MIDDLE = "middle"
CONST_FAN_MODE_MID_HIGH = "mid_high"
CONST_FAN_MODE_HIGH = "high"

CONST_FAN_MODE_MAPPING = bidict({
    CONST_FAN_MODE_AUTO: 0,
    CONST_FAN_MODE_LOW : 1,
    CONST_FAN_MODE_MID_LOW : 2,
    CONST_FAN_MODE_MIDDLE:3,
    CONST_FAN_MODE_MID_HIGH:4,
    CONST_FAN_MODE_HIGH:5,
})

CONST_FAN_MODE_SEG_DEF = {
    0: [],
    1: [CONST_FAN_MODE_HIGH],
    2: [CONST_FAN_MODE_AUTO, CONST_FAN_MODE_LOW, CONST_FAN_MODE_HIGH],
    3: [CONST_FAN_MODE_AUTO, CONST_FAN_MODE_LOW, CONST_FAN_MODE_MIDDLE, CONST_FAN_MODE_HIGH],
    5: [CONST_FAN_MODE_AUTO, CONST_FAN_MODE_LOW, CONST_FAN_MODE_MID_LOW, CONST_FAN_MODE_MIDDLE, CONST_FAN_MODE_MID_HIGH, CONST_FAN_MODE_HIGH]
}

CONST_SWING_MODE_AUTO = "auto"
CONST_SWING_MODE_P1 = "P1"
CONST_SWING_MODE_P2 = "P2"
CONST_SWING_MODE_P3 = "P3"
CONST_SWING_MODE_P4 = "P4"
CONST_SWING_MODE_P5 = "P5"

CONST_SWING_MODE_MAPPING = bidict({
    CONST_SWING_MODE_AUTO: 7,
    CONST_SWING_MODE_P1 : 1,
    CONST_SWING_MODE_P2 : 2,
    CONST_SWING_MODE_P3 : 3,
    CONST_SWING_MODE_P4 : 4,
    CONST_SWING_MODE_P5 : 5,
})

CONST_SWING_MODE_SEG_DEF = {
    0: [],
    1: [CONST_SWING_MODE_AUTO, CONST_SWING_MODE_P1,],
    2: [CONST_SWING_MODE_AUTO, CONST_SWING_MODE_P1,CONST_SWING_MODE_P2,],
    3: [CONST_SWING_MODE_AUTO, CONST_SWING_MODE_P1,CONST_SWING_MODE_P2,CONST_SWING_MODE_P3,],
    4: [CONST_SWING_MODE_AUTO, CONST_SWING_MODE_P1,CONST_SWING_MODE_P2,CONST_SWING_MODE_P3,CONST_SWING_MODE_P4,],
    5: [CONST_SWING_MODE_AUTO, CONST_SWING_MODE_P1,CONST_SWING_MODE_P2,CONST_SWING_MODE_P3,CONST_SWING_MODE_P4,CONST_SWING_MODE_P5,]
}

CONST_HVAC_POWER_ON = "on"
CONST_HVAC_POWER_OFF = "off"

CONST_HVAC_POWER_MAPPING = bidict({
    CONST_HVAC_POWER_ON: 1,
    CONST_HVAC_POWER_OFF: 0,
})

