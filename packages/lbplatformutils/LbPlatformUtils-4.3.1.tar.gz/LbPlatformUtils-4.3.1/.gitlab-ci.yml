stages:
  - test
  - integration
  - deploy

.test_template: &test_definition
  script:
    - .ci/run_tests.sh
  artifacts:
    paths:
      - cover_report
    when: always
    expire_in: 1 week
  except:
    - tags

centos8:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/centos8-base:latest

centos7:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:centos7

slc6:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:slc6

slc5:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:slc5

python2.7:
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-2.7
  script:
    - .ci/run_tests.sh
    - python setup.py bdist_wheel --dist-dir public/${CI_PROJECT_NAME,,}
  artifacts:
    paths:
      - cover_report
      - public
    when: always
    expire_in: 1 week

python3.5:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-3.5

python3.6:
  <<: *test_definition
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-3.6

python3.7:
  image: gitlab-registry.cern.ch/lhcb-docker/python-deployment:python-3.7
  script:
    - .ci/run_tests.sh
    - python setup.py sdist --dist-dir public/${CI_PROJECT_NAME,,}
    - python setup.py bdist_wheel --dist-dir public/${CI_PROJECT_NAME,,}
  artifacts:
    paths:
      - cover_report
      - public
    when: always
    expire_in: 1 week

# Singularity
.singularity_template: &singularity_definition
  <<: *test_definition
  # Use specific version of the official docker client image (as well as the docker-in-docker image) as recommended by
  # https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  # https://gitlab.cern.ch/gitlabci-examples/demo-privileged-runners/blob/master/.gitlab-ci.yml
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  tags:
    # "docker run --privileged" is required to use singularity
    - docker-privileged
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    # Mount CVMFS on the host
    # See: https://cern.service-now.com/service-portal/article.do?n=KB0005851
    - docker run -d --name cvmfs --pid=host --user 0 --privileged --restart always -v /shared-mounts:/cvmfsmounts:rshared gitlab-registry.cern.ch/vcs/cvmfs-automounter:master
  script:
    # Run the tests
    - docker run --rm --privileged -v /shared-mounts/cvmfs:/cvmfs:rslave -v $CI_PROJECT_DIR:$CI_PROJECT_DIR -w $CI_PROJECT_DIR -e CI_JOB_NAME $IMAGE_FOR_TESTING .ci/run_tests.sh PATCH_COVERAGE

slc6-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:slc6-singularity

centos7-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:centos7-singularity

slc6-singularity-latest:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:slc6-singularity-latest

centos7-singularity-latest:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:centos7-singularity-latest


centos8-singularity-latest:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:centos8-singularity-latest

python-2.7-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:python-2.7-singularity

python-3.5-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:python-3.5-singularity

python-3.6-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:python-3.6-singularity

python-3.7-singularity:
  <<: *singularity_definition
  variables:
    IMAGE_FOR_TESTING: gitlab-registry.cern.ch/lhcb-docker/python-singularity:python-3.7-singularity


# Integration tests
# -----------------
# Note: SLC6 and SLC5 cannot be tested (pip requires Python 2.7)
centos8-base:
  stage: integration
  image: gitlab-registry.cern.ch/lhcb-docker/os-base/centos8-base:latest
  dependencies: []
  script:
    - dnf install -y python3-pip git
    - python -m pip install --upgrade pip setuptools
    - python -m pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: centos8" output.txt'
    - 'grep -q "host_os: [^-]*-centos8" output.txt'

centos7-cern:
  stage: integration
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  dependencies: []
  script:
    - yum install -y python-pip git
    - pip install --upgrade pip setuptools
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: centos7" output.txt'
    - 'grep -q "host_os: [^-]*-centos7" output.txt'

ubuntu:18.04:
  stage: integration
  image: ubuntu:18.04
  dependencies: []
  script:
    - apt update && apt install -y python-pip git
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: ubuntu1804" output.txt'
    - 'grep -q "host_os: [^-]*-ubuntu1804" output.txt'

debian:9:
  stage: integration
  image: debian:9
  dependencies: []
  script:
    - apt update && apt install -y python-pip git
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: debian9" output.txt'
    - 'grep -q "host_os: [^-]*-debian9" output.txt'

centos:7:
  stage: integration
  image: centos:7
  dependencies: []
  script:
    - yum install -y git
    - curl -O https://bootstrap.pypa.io/get-pip.py && python get-pip.py
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: centos7" output.txt'
    - 'grep -q "host_os: [^-]*-centos7" output.txt'

fedora:28:
  stage: integration
  image: fedora:28
  dependencies: []
  script:
    - dnf install -y python-pip git
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: fedora28" output.txt'
    - 'grep -q "host_os: [^-]*-fedora28" output.txt'

opensuse/leap:
  stage: integration
  image: opensuse/leap
  dependencies: []
  script:
    - zypper install -y python-pip git
    - pip install .
    - lb-describe-platform | tee output.txt
    - 'grep -q "os_id: opensuse15" output.txt'
    - 'grep -q "host_os: [^-]*-opensuse15" output.txt'


# see https://gitlab.cern.ch/gitlabci-examples/deploy_eos for the details
# of the configuration
deploy-packages:
  stage: deploy
  only:
    - tags
  dependencies:
    - python3.7
    - python2.7
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer:latest
  script:
    - test -z "$EOS_ACCOUNT_USERNAME" -o -z "$EOS_ACCOUNT_PASSWORD" -o -z "$EOS_PATH" && exit 0 || true
    # Script that performs the deploy to EOS. Makes use of the variables defined in the project
    # It will copy the generated content to the folder in EOS
    - deploy-eos
  # do not run any globally defined before_script or after_script for this step
  before_script: []
  after_script: []
