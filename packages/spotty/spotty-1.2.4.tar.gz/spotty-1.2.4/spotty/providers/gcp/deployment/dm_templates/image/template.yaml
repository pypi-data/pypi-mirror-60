resources:
  - name: {{MACHINE_NAME}}
    type: compute.v1.instance
    properties:
      zone: {{ZONE}}
      machineType: zones/{{ZONE}}/machineTypes/{{MACHINE_TYPE}}
      scheduling:
        {{#GPU_TYPE}}
        onHostMaintenance: TERMINATE
        automaticRestart: false
        {{/GPU_TYPE}}
        preemptible: {{PREEMPTIBLE}}
      serviceAccounts:
        - email: {{SERVICE_ACCOUNT_EMAIL}}
          scopes: ['https://www.googleapis.com/auth/cloud-platform']
      tags:
        items:
          - {{MACHINE_NAME}}
      disks:
        - deviceName: boot
          type: PERSISTENT
          boot: true
          autoDelete: true
          initializeParams:
            diskName: {{MACHINE_NAME}}
            sourceImage: {{SOURCE_IMAGE}}
      networkInterfaces:
        - network: global/networks/default
          accessConfigs:
            - name: External NAT
              type: ONE_TO_ONE_NAT
      {{#GPU_TYPE}}
      guestAccelerators:
        - acceleratorType: zones/{{ZONE}}/acceleratorTypes/{{GPU_TYPE}}
          acceleratorCount: {{GPU_COUNT}}
      {{/GPU_TYPE}}
      metadata:
        items:
          {{#PUB_KEY_VALUE}}
          - key: 'ssh-keys'
            value: |
              ubuntu:ssh-rsa {{{PUB_KEY_VALUE}}} ubuntu
          {{/PUB_KEY_VALUE}}
          - key: 'user-data'
            value: |
              {{{STARTUP_SCRIPT}}}

  - name: {{MACHINE_NAME}}-docker-status
    type: runtimeconfig.v1beta1.config
    properties:
      config: {{MACHINE_NAME}}-docker-status
      description: Docker status

  {{^DEBUG_MODE}}
  - name: {{MACHINE_NAME}}-image-status
    type: runtimeconfig.v1beta1.config
    properties:
      config: {{MACHINE_NAME}}-image-status
      description: Image status
  {{/DEBUG_MODE}}

  - name: {{MACHINE_NAME}}-docker-waiter
    type: runtimeconfig.v1beta1.waiter
    metadata:
      dependsOn:
        - {{MACHINE_NAME}}
    properties:
      parent: $(ref.{{MACHINE_NAME}}-docker-status.name)
      waiter: {{MACHINE_NAME}}-docker-waiter
      timeout: 1800s
      success:
        cardinality:
          path: /success
          number: 1
      failure:
        cardinality:
          path: /failure
          number: 1

  {{^DEBUG_MODE}}
  - name: {{MACHINE_NAME}}-image-waiter
    type: runtimeconfig.v1beta1.waiter
    metadata:
      dependsOn:
        - {{MACHINE_NAME}}-docker-waiter
    properties:
      parent: $(ref.{{MACHINE_NAME}}-image-status.name)
      waiter: {{MACHINE_NAME}}-image-waiter
      timeout: 1200s
      success:
        cardinality:
          path: /success
          number: 1
      failure:
        cardinality:
          path: /failure
          number: 1
  {{/DEBUG_MODE}}

  {{^DEBUG_MODE}}
  # create a variable that will contain an image ID (used in the deployment outputs)
  - name: {{MACHINE_NAME}}-image-status-success
    type: runtimeconfig.v1beta1.variable
    metadata:
      dependsOn:
        - {{MACHINE_NAME}}-image-waiter
    properties:
      parent: $(ref.{{MACHINE_NAME}}-image-status.name)
      variable: /success/1
  {{/DEBUG_MODE}}

  {{^DEBUG_MODE}}
  # acquire the created image resource to remove it later with the deployment
  - name: {{IMAGE_NAME}}
    type: compute.v1.image
    metadata:
      dependsOn:
        - {{MACHINE_NAME}}-image-waiter
    properties:
      sourceImage: global/images/{{IMAGE_NAME}}
  {{/DEBUG_MODE}}

{{^DEBUG_MODE}}
outputs:
  - name: imageId
    value: $(ref.{{MACHINE_NAME}}-image-status-success.text)
{{/DEBUG_MODE}}
